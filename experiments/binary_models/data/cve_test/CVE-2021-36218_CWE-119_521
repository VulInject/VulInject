void trustedSetSEK(int *errStatus, char *errString, uint8_t *encrypted_sek) {
    CALL_ONCE
    LOG_INFO(__FUNCTION__);
    INIT_ERROR_STATE
    CHECK_STATE(encrypted_sek);
    SAFE_CHAR_BUF(aes_key_hex, BUF_LEN);

    uint32_t dec_len = BUF_LEN;

    sgx_status_t status = sgx_unseal_data(
            (const sgx_sealed_data_t *) encrypted_sek, NULL, 0,
            (uint8_t *)aes_key_hex, &dec_len);

    if (status == 0x3001) {
        LOG_ERROR("Could not decrypt LevelDB storage! \n"
                  "If you upgraded sgxwallet software or if you are restoring from backup, please run sgxwallet with -b flag  and "
                  "pass your backup key.");
    }

    CHECK_STATUS2("sgx unseal SEK failed with status %d");

    uint64_t len;


    hex2carray(aes_key_hex, &len, (uint8_t *) AES_key);
    derive_DH_Key();

    SET_SUCCESS
    clean:
    LOG_INFO(__FUNCTION__ );
    LOG_INFO("SGX call completed");
}
