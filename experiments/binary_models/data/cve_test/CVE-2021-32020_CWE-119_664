
#include <stdlib.h>



/* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining

 * all the API functions to use the MPU wrappers.  That should only be done when

 * task.h is included from an application file. */

#define MPU_WRAPPERS_INCLUDED_FROM_API_FILE



#include "FreeRTOS.h"

#include "task.h"



#undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE



#if ( configSUPPORT_DYNAMIC_ALLOCATION == 0 )

    #error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0

#endif



/* A few bytes might be lost to byte aligning the heap start address. */

#define configADJUSTED_HEAP_SIZE    ( configTOTAL_HEAP_SIZE - portBYTE_ALIGNMENT )



/* Allocate the memory for the heap. */

#if ( configAPPLICATION_ALLOCATED_HEAP == 1 )



/* The application writer has already defined the array used for the RTOS

* heap - probably so it can be placed in a special segment or address. */

    extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
