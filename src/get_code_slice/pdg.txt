----------------------------pdg--------------------------------------------------
29 : int typeParameter90:47:1886:1893
141 : return gethostbyaddr ( addr , len , type ) ;ReturnStatement99:2:2045:2082
154 : typeCondition97:9:2020:2023
32 : int lenParameter90:38:1877:1883
98 : memcpy ( & addr6 . sin6_addr , addr , len )ExpressionStatement106:2:2226:2261
35 : const char * addrParameter90:20:1859:1874
113 : addr6 . sin6_family = AF_INET6ExpressionStatement105:2:2194:2222
134 : struct sockaddr_in6 addr6 ;IdentifierDeclStatement103:2:2129:2154
156 : host . h_name = hostbufExpressionStatement96:1:1988:2009
55 : strlcpy ( host . h_name , hname , NI_MAXHOST )ExpressionStatement111:3:2396:2435
162 : char hname [ NI_MAXHOST ] ;IdentifierDeclStatement94:1:1962:1984
71 : getnameinfo ( ( struct sockaddr * ) & addr6 , sizeof ( addr6 ) , hname , sizeof ( hname ) , NULL , 0 , 0 )Condition107:6:2269:2361
167 : static char hostbuf [ NI_MAXHOST ] ;IdentifierDeclStatement93:8:1935:1959
173 : static struct hostent host ;IdentifierDeclStatement92:8:1906:1925
51 : return & host ;ReturnStatement112:3:2440:2452
69 : return NULL ;ReturnStatement109:3:2369:2380
44 : default :Label117:1:2479:2486
138 : case AF_INET6 :Label102:1:2110:2123
42 : return NULL ;ReturnStatement118:2:2490:2501
119 : memset ( & addr6 , 0 , sizeof ( addr6 ) )ExpressionStatement104:2:2158:2190
152 : case AF_INET :Label98:1:2029:2041
26 : win32_gethostbyaddrFunction89:0:1815:2506
29 -----> 141type
29 -----> 154type
32 -----> 98len
32 -----> 141len
35 -----> 98addr
35 -----> 141addr
113 -----> 98addr6
134 -----> 113addr6
156 -----> 55host . h_name
156 -----> 55host
162 -----> 55hname
162 -----> 71hname
167 -----> 156hostbuf
173 -----> 156host
71 -----> 55None
71 -----> 51None
71 -----> 69None
154 -----> 113None
154 -----> 44None
154 -----> 134None
154 -----> 71None
154 -----> 138None
154 -----> 42None
154 -----> 119None
154 -----> 141None
154 -----> 98None
154 -----> 152None
26 -----> 35None
26 -----> 29None
26 -----> 162None
26 -----> 154None
26 -----> 156None
26 -----> 32None
26 -----> 167None
26 -----> 173None
134 -----> 119addr6
134 -----> 98addr6
134 -----> 71addr6
173 -----> 55host
173 -----> 51host
156 -----> 51host
119 -----> 113addr6
98 -----> 71addr6
----------------------------pdg--------------------------------------------------
254 : unsigned int addrParameter167:6:3340:3356
368 : addr = ntohl ( addr )ExpressionStatement174:1:3441:3459
271 : addr >>= 8ExpressionStatement190:2:3724:3734
342 : byte = addr & 0xffExpressionStatement180:2:3518:3536
302 : byte /= 10ExpressionStatement185:3:3644:3654
286 : * -- cp = ( char ) byte + '0'ExpressionStatement187:4:3677:3701
298 : byte > 0Condition186:7:3663:3670
324 : byte /= 10ExpressionStatement182:2:3575:3585
306 : * -- cp = ( char ) ( byte % 10 ) + '0'ExpressionStatement184:3:3608:3639
320 : byte > 0Condition183:6:3593:3600
328 : * -- cp = ( char ) ( byte % 10 ) + '0'ExpressionStatement181:2:3540:3571
348 : n = 4ExpressionStatement178:1:3503:3508
264 : -- n > 0Condition191:10:3746:3752
360 : cp = buf + sizeof ( buf )ExpressionStatement175:1:3462:3484
259 : return cp + 1 ;ReturnStatement193:1:3758:3771
275 : * -- cp = '.'ExpressionStatement189:2:3709:3720
352 : * -- cp = '\0'ExpressionStatement176:1:3487:3499
377 : static char buf [ sizeof ( ".xxx.xxx.xxx.xxx" ) ] ;IdentifierDeclStatement172:8:3401:3437
251 : intoaFunction166:0:3321:3773
393 : char * cp ;IdentifierDeclStatement169:1:3362:3370
389 : u_int byte ;IdentifierDeclStatement170:1:3373:3383
385 : int n ;IdentifierDeclStatement171:1:3386:3391
254 -----> 368addr
271 -----> 342addr
271 -----> 271addr
302 -----> 286byte
302 -----> 298byte
324 -----> 302byte
324 -----> 306byte
324 -----> 320byte
342 -----> 324byte
342 -----> 328byte
348 -----> 264n
360 -----> 259cp
360 -----> 275cp
360 -----> 286cp
360 -----> 306cp
360 -----> 328cp
360 -----> 352cp
368 -----> 271addr
368 -----> 342addr
377 -----> 360buf
264 -----> 324None
264 -----> 328None
264 -----> 275None
264 -----> 271None
264 -----> 342None
264 -----> 320None
298 -----> 286None
320 -----> 306None
320 -----> 302None
320 -----> 298None
251 -----> 324None
251 -----> 348None
251 -----> 328None
251 -----> 275None
251 -----> 264None
251 -----> 254None
251 -----> 271None
251 -----> 342None
251 -----> 368None
251 -----> 360None
251 -----> 259None
251 -----> 320None
251 -----> 352None
251 -----> 393None
251 -----> 389None
251 -----> 385None
251 -----> 377None
254 -----> 271addr
393 -----> 360cp
393 -----> 352cp
393 -----> 328cp
393 -----> 306cp
393 -----> 286cp
393 -----> 275cp
393 -----> 259cp
389 -----> 342byte
389 -----> 324byte
389 -----> 320byte
389 -----> 302byte
389 -----> 298byte
385 -----> 348n
385 -----> 264n
352 -----> 328cp
328 -----> 306cp
306 -----> 286cp
286 -----> 275cp
275 -----> 259cp
----------------------------pdg--------------------------------------------------
416 : const u_char * apParameter204:39:3942:3957
653 : memcpy ( & addr , ap , sizeof ( addr ) )ExpressionStatement210:1:4026:4057
419 : netdissect_options * ndoParameter204:14:3917:3939
429 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(intoa(addr))" , __func__ )ExpressionStatement247:2:4829:4914
500 : ndo -> ndo_NflagCondition236:7:4651:4664
505 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(hp->h_name)" , __func__ )ExpressionStatement234:4:4559:4642
590 : ! ndo -> ndo_nflag && ( addr & f_netmask ) == f_localnetCondition220:5:4232:4287
602 : p -> nxt = newhnamemem ( ndo )ExpressionStatement217:1:4197:4222
452 : p -> name = strdup ( intoa ( addr ) )ExpressionStatement245:1:4774:4803
424 : return ( p -> name ) ;ReturnStatement249:1:4917:4933
446 : p -> name == NULLCondition246:5:4810:4824
487 : dotp = strchr ( p -> name , '.' )ExpressionStatement238:4:4678:4705
479 : * dotp = '\0'ExpressionStatement240:5:4726:4738
485 : dotpCondition239:8:4715:4718
528 : p -> name = strdup ( hp -> h_name )ExpressionStatement232:3:4501:4529
472 : return ( p -> name ) ;ReturnStatement242:3:4748:4764
522 : p -> name == NULLCondition233:7:4538:4552
549 : hp = gethostbyaddr ( ( char * ) & addr , 4 , AF_INET )ExpressionStatement228:3:4423:4468
545 : hpCondition229:6:4476:4477
567 : hp = cap_gethostbyaddr ( capdns , ( char * ) & addr , 4 , AF_INET )ExpressionStatement224:3:4338:4402
632 : p = p -> nxtAssignmentExpr212:16:4118:4127
613 : p -> addr = addrExpressionStatement216:1:4180:4194
622 : return ( p -> name ) ;ReturnStatement214:3:4158:4174
626 : p -> addr == addrCondition213:6:4138:4152
637 : p -> nxtCondition212:8:4110:4115
641 : p = & hnametable [ addr & ( HASHNAMESIZE - 1 ) ]ExpressionStatement211:1:4060:4100
672 : unsigned int addr ;IdentifierDeclStatement207:1:3984:4001
541 : char * dotp ;IdentifierDeclStatement230:3:4485:4495
586 : capdns != NULLCondition223:6:4317:4330
413 : ipaddr_stringFunction203:0:3890:4935
676 : struct hostent * hp ;IdentifierDeclStatement206:1:3963:3981
668 : struct hnamemem * p ;IdentifierDeclStatement208:1:4004:4022
416 -----> 653ap
419 -----> 429ndo
419 -----> 500ndo
419 -----> 505ndo
419 -----> 590ndo
419 -----> 602ndo
452 -----> 424 p
452 -----> 446 p
452 -----> 424p -> name
452 -----> 446p -> name
487 -----> 479dotp
487 -----> 485dotp
528 -----> 472 p
528 -----> 487 p
528 -----> 522 p
528 -----> 472p -> name
528 -----> 487p -> name
528 -----> 522p -> name
549 -----> 528hp
549 -----> 545hp
567 -----> 528hp
567 -----> 545hp
632 -----> 487p
632 -----> 602p
632 -----> 522p
632 -----> 472p
632 -----> 452p
632 -----> 446p
632 -----> 613p
632 -----> 424p
632 -----> 528p
632 -----> 622p
632 -----> 626p
632 -----> 637p
632 -----> 632p
641 -----> 487p
641 -----> 602p
641 -----> 452p
641 -----> 446p
641 -----> 522p
641 -----> 528p
641 -----> 613p
641 -----> 622p
641 -----> 424p
641 -----> 626p
641 -----> 472p
641 -----> 637p
641 -----> 632p
672 -----> 452addr
672 -----> 590addr
672 -----> 613addr
672 -----> 626addr
672 -----> 641addr
446 -----> 429None
485 -----> 479None
500 -----> 487None
500 -----> 485None
522 -----> 505None
545 -----> 452None
545 -----> 500None
545 -----> 528None
545 -----> 522None
545 -----> 446None
545 -----> 472None
545 -----> 424None
545 -----> 541None
586 -----> 567None
586 -----> 549None
590 -----> 452None
590 -----> 586None
590 -----> 545None
590 -----> 446None
590 -----> 424None
626 -----> 637None
626 -----> 632None
626 -----> 622None
637 -----> 590None
637 -----> 626None
637 -----> 613None
637 -----> 602None
413 -----> 676None
413 -----> 668None
413 -----> 672None
413 -----> 419None
413 -----> 653None
413 -----> 637None
413 -----> 641None
413 -----> 416None
672 -----> 653addr
541 -----> 487dotp
541 -----> 485dotp
541 -----> 479dotp
676 -----> 567hp
676 -----> 549hp
676 -----> 545hp
668 -----> 641p
668 -----> 637p
668 -----> 632p
668 -----> 626p
668 -----> 622p
668 -----> 613p
668 -----> 602p
668 -----> 528p
668 -----> 522p
668 -----> 472p
668 -----> 452p
668 -----> 446p
668 -----> 424p
653 -----> 641addr
653 -----> 626addr
653 -----> 613addr
653 -----> 590addr
653 -----> 567addr
653 -----> 549addr
653 -----> 452addr
613 -----> 602p
602 -----> 528p
528 -----> 522p
528 -----> 487p
452 -----> 446p
452 -----> 424p
----------------------------pdg--------------------------------------------------
721 : const u_char * apParameter254:40:4992:5007
768 : cp = addrtostr6 ( ap , ntop_buf , sizeof ( ntop_buf ) )ExpressionStatement305:1:6045:6092
996 : memcpy ( & addr , ap , sizeof ( addr ) )ExpressionStatement268:1:5217:5248
724 : netdissect_options * ndoParameter254:15:4967:4989
734 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(cp)" , __func__ )ExpressionStatement308:2:6141:6217
815 : ndo -> ndo_NflagCondition295:7:5914:5927
820 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(hp->h_name)" , __func__ )ExpressionStatement293:4:5822:5905
909 : ! ndo -> ndo_nflagCondition279:5:5505:5519
915 : p -> nxt = newh6namemem ( ndo )ExpressionStatement275:1:5453:5479
757 : p -> name = strdup ( cp )ExpressionStatement306:1:6095:6115
729 : return ( p -> name ) ;ReturnStatement310:1:6220:6236
751 : p -> name == NULLCondition307:5:6122:6136
802 : dotp = strchr ( p -> name , '.' )ExpressionStatement297:4:5941:5968
794 : * dotp = '\0'ExpressionStatement299:5:5989:6001
800 : dotpCondition298:8:5978:5981
843 : p -> name = strdup ( hp -> h_name )ExpressionStatement291:3:5764:5792
787 : return ( p -> name ) ;ReturnStatement301:3:6011:6027
837 : p -> name == NULLCondition292:7:5801:5815
864 : hp = gethostbyaddr ( ( char * ) & addr , sizeof ( addr ) , AF_INET6 )ExpressionStatement286:3:5667:5731
860 : hpCondition288:6:5739:5740
884 : hp = cap_gethostbyaddr ( capdns , ( char * ) & addr , sizeof ( addr ) , AF_INET6 )ExpressionStatement282:3:5570:5646
971 : p = p -> nxtAssignmentExpr270:16:5318:5327
926 : memcpy ( p -> addr , addr . addr , sizeof ( nd_ipv6 ) )ExpressionStatement274:1:5407:5450
946 : return ( p -> name ) ;ReturnStatement272:3:5385:5401
950 : memcmp ( & p -> addr , & addr , sizeof ( addr ) ) == 0Condition271:6:5338:5379
976 : p -> nxtCondition270:8:5310:5315
980 : p = & h6nametable [ addr . addra . d & ( HASHNAMESIZE - 1 ) ]ExpressionStatement269:1:5251:5300
1011 : char ntop_buf [ INET6_ADDRSTRLEN ] ;IdentifierDeclStatement266:1:5182:5213
1024 : union { nd_ipv6 addr ; struct for_hash_addr { char fill [ 14 ] ; unsigned short d ; } addra ; } addr ;ClassDefStatement257:1:5034:5140
856 : char * dotp ;IdentifierDeclStatement289:3:5748:5758
905 : capdns != NULLCondition281:6:5549:5562
718 : ip6addr_stringFunction253:0:4939:6238
1020 : struct h6namemem * p ;IdentifierDeclStatement264:1:5143:5162
1028 : struct hostent * hp ;IdentifierDeclStatement256:1:5013:5031
1016 : const char * cp ;IdentifierDeclStatement265:1:5165:5179
721 -----> 768ap
721 -----> 996ap
724 -----> 734ndo
724 -----> 815ndo
724 -----> 820ndo
724 -----> 909ndo
724 -----> 915ndo
757 -----> 729 p
757 -----> 751 p
757 -----> 729p -> name
757 -----> 751p -> name
768 -----> 757cp
802 -----> 794dotp
802 -----> 800dotp
843 -----> 787 p
843 -----> 802 p
843 -----> 837 p
843 -----> 787p -> name
843 -----> 802p -> name
843 -----> 837p -> name
864 -----> 843hp
864 -----> 860hp
884 -----> 843hp
884 -----> 860hp
971 -----> 751p
971 -----> 926p
971 -----> 837p
971 -----> 915p
971 -----> 787p
971 -----> 757p
971 -----> 946p
971 -----> 950p
971 -----> 802p
971 -----> 729p
971 -----> 843p
971 -----> 976p
971 -----> 971p
980 -----> 915p
980 -----> 837p
980 -----> 751p
980 -----> 926p
980 -----> 787p
980 -----> 946p
980 -----> 729p
980 -----> 757p
980 -----> 950p
980 -----> 843p
980 -----> 802p
980 -----> 976p
980 -----> 971p
1011 -----> 768ntop_buf
1024 -----> 926addr
1024 -----> 980addr
751 -----> 734None
800 -----> 794None
815 -----> 800None
815 -----> 802None
837 -----> 820None
860 -----> 815None
860 -----> 751None
860 -----> 787None
860 -----> 843None
860 -----> 757None
860 -----> 768None
860 -----> 729None
860 -----> 837None
860 -----> 856None
905 -----> 864None
905 -----> 884None
909 -----> 905None
909 -----> 751None
909 -----> 860None
909 -----> 757None
909 -----> 768None
909 -----> 729None
950 -----> 971None
950 -----> 946None
950 -----> 976None
976 -----> 915None
976 -----> 950None
976 -----> 909None
976 -----> 926None
718 -----> 1024None
718 -----> 1020None
718 -----> 980None
718 -----> 1028None
718 -----> 1016None
718 -----> 996None
718 -----> 724None
718 -----> 1011None
718 -----> 721None
718 -----> 976None
856 -----> 802dotp
856 -----> 800dotp
856 -----> 794dotp
1020 -----> 980p
1020 -----> 976p
1020 -----> 971p
1020 -----> 950p
1020 -----> 946p
1020 -----> 926p
1020 -----> 915p
1020 -----> 843p
1020 -----> 837p
1020 -----> 787p
1020 -----> 757p
1020 -----> 751p
1020 -----> 729p
1028 -----> 884hp
1028 -----> 864hp
1028 -----> 860hp
1016 -----> 768cp
1024 -----> 996addr
996 -----> 980addr
996 -----> 950addr
996 -----> 926addr
996 -----> 884addr
996 -----> 864addr
926 -----> 915p
915 -----> 843p
843 -----> 837p
843 -----> 802p
757 -----> 751p
757 -----> 729p
----------------------------pdg--------------------------------------------------
1083 : unsigned char octetParameter320:23:6401:6419
1093 : * cp ++ = hex [ ( octet >> 0 ) & 0xf ]ExpressionStatement323:1:6459:6490
1107 : * cp ++ = hex [ ( octet >> 4 ) & 0xf ]ExpressionStatement322:1:6425:6456
1086 : char * cpParameter320:13:6391:6398
1091 : return ( cp ) ;ReturnStatement324:1:6493:6504
1080 : octet_to_hexFunction319:0:6357:6506
1083 -----> 1093octet
1083 -----> 1107octet
1086 -----> 1107cp
1093 -----> 1091cp
1107 -----> 1093cp
1080 -----> 1083None
1080 -----> 1093None
1080 -----> 1091None
1080 -----> 1086None
1080 -----> 1107None
1086 -----> 1093cp
1086 -----> 1091cp
----------------------------pdg--------------------------------------------------
1133 : const u_char * epParameter330:37:6573:6588
1257 : i = ( ep [ 4 ] << 8 ) | ep [ 5 ]ExpressionStatement337:1:6687:6711
1269 : j = ( ep [ 2 ] << 8 ) | ep [ 3 ]ExpressionStatement336:1:6660:6684
1281 : k = ( ep [ 0 ] << 8 ) | ep [ 1 ]ExpressionStatement335:1:6633:6657
1136 : netdissect_options * ndoParameter330:12:6548:6570
1144 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement352:2:7059:7125
1167 : tp -> e_nxt = ( struct enamemem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement350:1:6978:7031
1161 : tp -> e_nxt == NULLCondition351:5:7038:7054
1186 : tp -> e_addr2 = ( u_short ) kExpressionStatement349:1:6951:6975
1213 : tp = tp -> e_nxtExpressionStatement346:3:6880:6894
1202 : tp -> e_addr0 = ( u_short ) iExpressionStatement347:1:6897:6921
1219 : return tp ;ReturnStatement344:3:6859:6868
1221 : tp -> e_addr0 == i && tp -> e_addr1 == j && tp -> e_addr2 == kCondition341:6:6786:6853
1194 : tp -> e_addr1 = ( u_short ) jExpressionStatement348:1:6924:6948
1141 : return tp ;ReturnStatement354:1:7129:7138
1239 : tp -> e_nxtCondition340:8:6769:6777
1243 : tp = & enametable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement339:1:6715:6759
1130 : lookup_ememFunction329:0:6511:7140
1297 : u_int i , j , k ;IdentifierDeclStatement332:1:6594:6607
1293 : struct enamemem * tp ;IdentifierDeclStatement333:1:6610:6629
1133 -----> 1257ep
1133 -----> 1269ep
1133 -----> 1281ep
1136 -----> 1144ndo
1167 -----> 1161tp -> e_nxt
1167 -----> 1161 tp
1186 -----> 1167 tp
1213 -----> 1202tp
1213 -----> 1219tp
1213 -----> 1221tp
1213 -----> 1186tp
1213 -----> 1167tp
1213 -----> 1194tp
1213 -----> 1161tp
1213 -----> 1141tp
1213 -----> 1239tp
1213 -----> 1213tp
1243 -----> 1202tp
1243 -----> 1213tp
1243 -----> 1141tp
1243 -----> 1219tp
1243 -----> 1221tp
1243 -----> 1186tp
1243 -----> 1194tp
1243 -----> 1239tp
1243 -----> 1161tp
1243 -----> 1167tp
1257 -----> 1202i
1257 -----> 1221i
1257 -----> 1243i
1269 -----> 1194j
1269 -----> 1221j
1269 -----> 1243j
1281 -----> 1186k
1281 -----> 1221k
1161 -----> 1144None
1221 -----> 1239None
1221 -----> 1219None
1221 -----> 1213None
1239 -----> 1221None
1239 -----> 1186None
1239 -----> 1167None
1239 -----> 1202None
1239 -----> 1194None
1239 -----> 1161None
1239 -----> 1141None
1130 -----> 1136None
1130 -----> 1297None
1130 -----> 1257None
1130 -----> 1133None
1130 -----> 1293None
1130 -----> 1239None
1130 -----> 1281None
1130 -----> 1243None
1130 -----> 1269None
1297 -----> 1281k
1297 -----> 1221k
1297 -----> 1269j
1297 -----> 1221j
1297 -----> 1257i
1297 -----> 1221i
1293 -----> 1243tp
1293 -----> 1239tp
1293 -----> 1221tp
1293 -----> 1219tp
1293 -----> 1213tp
1293 -----> 1202tp
1293 -----> 1194tp
1293 -----> 1186tp
1293 -----> 1167tp
1293 -----> 1161tp
1293 -----> 1141tp
1202 -----> 1194tp
1194 -----> 1186tp
1186 -----> 1167tp
1167 -----> 1161tp
1167 -----> 1141tp
----------------------------pdg--------------------------------------------------
1336 : const unsigned int nlenParameter361:4:7236:7258
1392 : tp -> bs_nbytes = nlenExpressionStatement398:1:8087:8107
1398 : memcpy ( tp -> bs_bytes , bs , nlen )ExpressionStatement397:1:8054:8084
1435 : tp -> bs_bytes = ( u_char * ) calloc ( 1 , nlen )ExpressionStatement392:1:7906:7947
1485 : nlen == tp -> bs_nbytes && tp -> bs_addr0 == i && tp -> bs_addr1 == j && tp -> bs_addr2 == k && memcmp ( ( const char * ) bs , ( const char * ) ( tp -> bs_bytes ) , nlen ) == 0Condition379:6:7599:7775
1587 : nlen >= 4Condition370:12:7417:7425
1628 : nlen >= 6Condition366:5:7308:7316
1339 : const u_char * bsParameter360:43:7214:7229
1563 : j = ( bs [ 2 ] << 8 ) | bs [ 3 ]ExpressionStatement372:2:7460:7484
1575 : k = ( bs [ 0 ] << 8 ) | bs [ 1 ]ExpressionStatement371:2:7432:7456
1592 : i = ( bs [ 4 ] << 8 ) | bs [ 5 ]ExpressionStatement369:2:7379:7403
1604 : j = ( bs [ 2 ] << 8 ) | bs [ 3 ]ExpressionStatement368:2:7351:7375
1616 : k = ( bs [ 0 ] << 8 ) | bs [ 1 ]ExpressionStatement367:2:7323:7347
1342 : netdissect_options * ndoParameter360:18:7189:7211
1350 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement401:2:8194:8266
1412 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement394:2:7978:8050
1373 : tp -> bs_nxt = ( struct bsnamemem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement399:1:8110:8165
1367 : tp -> bs_nxt == NULLCondition400:5:8172:8189
1429 : tp -> bs_bytes == NULLCondition393:5:7954:7973
1477 : tp = tp -> bs_nxtExpressionStatement386:3:7802:7817
1458 : tp -> bs_addr1 = ( u_short ) jExpressionStatement389:1:7849:7874
1466 : tp -> bs_addr0 = ( u_short ) iExpressionStatement388:1:7821:7846
1483 : return tp ;ReturnStatement384:3:7781:7790
1450 : tp -> bs_addr2 = ( u_short ) kExpressionStatement390:1:7877:7902
1347 : return tp ;ReturnStatement404:1:8270:8279
1528 : tp -> bs_nxtCondition378:8:7581:7590
1532 : tp = & bytestringtable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement377:1:7522:7571
1550 : i = j = k = 0ExpressionStatement375:2:7505:7518
1559 : i = 0ExpressionStatement373:2:7488:7493
1333 : lookup_bytestringFunction359:0:7145:8281
1632 : u_int i , j , k ;IdentifierDeclStatement364:1:7287:7300
1642 : struct bsnamemem * tp ;IdentifierDeclStatement363:1:7264:7284
1336 -----> 1392nlen
1336 -----> 1398nlen
1336 -----> 1435nlen
1336 -----> 1485nlen
1336 -----> 1587nlen
1336 -----> 1628nlen
1339 -----> 1398bs
1339 -----> 1485bs
1339 -----> 1563bs
1339 -----> 1575bs
1339 -----> 1592bs
1339 -----> 1604bs
1339 -----> 1616bs
1342 -----> 1350ndo
1342 -----> 1412ndo
1373 -----> 1367tp -> bs_nxt
1373 -----> 1367 tp
1392 -----> 1373 tp
1435 -----> 1398 tp
1435 -----> 1429 tp
1435 -----> 1398tp -> bs_bytes
1435 -----> 1429tp -> bs_bytes
1477 -----> 1429tp
1477 -----> 1373tp
1477 -----> 1458tp
1477 -----> 1466tp
1477 -----> 1483tp
1477 -----> 1485tp
1477 -----> 1450tp
1477 -----> 1392tp
1477 -----> 1398tp
1477 -----> 1367tp
1477 -----> 1435tp
1477 -----> 1347tp
1477 -----> 1528tp
1477 -----> 1477tp
1532 -----> 1466tp
1532 -----> 1429tp
1532 -----> 1373tp
1532 -----> 1398tp
1532 -----> 1347tp
1532 -----> 1477tp
1532 -----> 1450tp
1532 -----> 1483tp
1532 -----> 1435tp
1532 -----> 1367tp
1532 -----> 1485tp
1532 -----> 1392tp
1532 -----> 1528tp
1532 -----> 1458tp
1550 -----> 1450k
1550 -----> 1485k
1550 -----> 1485j
1550 -----> 1532j
1550 -----> 1458j
1550 -----> 1466i
1550 -----> 1485i
1550 -----> 1532i
1559 -----> 1466i
1559 -----> 1485i
1559 -----> 1532i
1563 -----> 1458j
1563 -----> 1485j
1563 -----> 1532j
1575 -----> 1450k
1575 -----> 1485k
1592 -----> 1466i
1592 -----> 1485i
1592 -----> 1532i
1604 -----> 1458j
1604 -----> 1485j
1604 -----> 1532j
1616 -----> 1450k
1616 -----> 1485k
1367 -----> 1350None
1429 -----> 1412None
1485 -----> 1483None
1485 -----> 1477None
1485 -----> 1528None
1528 -----> 1398None
1528 -----> 1347None
1528 -----> 1373None
1528 -----> 1458None
1528 -----> 1392None
1528 -----> 1367None
1528 -----> 1485None
1528 -----> 1429None
1528 -----> 1466None
1528 -----> 1435None
1528 -----> 1450None
1587 -----> 1559None
1587 -----> 1563None
1587 -----> 1550None
1587 -----> 1575None
1628 -----> 1604None
1628 -----> 1587None
1628 -----> 1616None
1628 -----> 1592None
1333 -----> 1532None
1333 -----> 1342None
1333 -----> 1336None
1333 -----> 1528None
1333 -----> 1632None
1333 -----> 1628None
1333 -----> 1339None
1333 -----> 1642None
1632 -----> 1616k
1632 -----> 1575k
1632 -----> 1550k
1632 -----> 1485k
1632 -----> 1604j
1632 -----> 1563j
1632 -----> 1550j
1632 -----> 1485j
1632 -----> 1592i
1632 -----> 1559i
1632 -----> 1550i
1632 -----> 1485i
1642 -----> 1532tp
1642 -----> 1528tp
1642 -----> 1485tp
1642 -----> 1483tp
1642 -----> 1477tp
1642 -----> 1466tp
1642 -----> 1458tp
1642 -----> 1450tp
1642 -----> 1435tp
1642 -----> 1429tp
1642 -----> 1398tp
1642 -----> 1392tp
1642 -----> 1373tp
1642 -----> 1367tp
1642 -----> 1347tp
1466 -----> 1458tp
1458 -----> 1450tp
1450 -----> 1435tp
1435 -----> 1429tp
1435 -----> 1398tp
1398 -----> 1392tp
1392 -----> 1373tp
1373 -----> 1367tp
1373 -----> 1347tp
----------------------------pdg--------------------------------------------------
1679 : u_int nsap_lengthParameter411:5:8373:8389
1735 : memcpy ( ( char * ) & tp -> e_nsap [ 1 ] , ( const char * ) nsap , nsap_length )ExpressionStatement443:1:9208:9271
1756 : tp -> e_nsap [ 0 ] = ( u_char ) nsap_lengthExpressionStatement442:1:9169:9204
1790 : tp -> e_nsap = ( u_char * ) malloc ( nsap_length + 1 )ExpressionStatement439:1:9025:9071
1840 : nsap_length == tp -> e_nsap [ 0 ] && tp -> e_addr0 == i && tp -> e_addr1 == j && tp -> e_addr2 == k && memcmp ( ( const char * ) nsap , ( char * ) & ( tp -> e_nsap [ 1 ] ) , nsap_length ) == 0Condition427:6:8712:8900
1954 : ensap = nsap + nsap_length - 6ExpressionStatement418:2:8481:8511
1962 : nsap_length > 6Condition417:5:8460:8474
1682 : const u_char * nsapParameter410:37:8348:8365
1685 : netdissect_options * ndoParameter410:12:8323:8345
1693 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement446:2:9355:9421
1767 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: malloc" , __func__ )ExpressionStatement441:2:9100:9166
1716 : tp -> e_nxt = ( struct enamemem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement444:1:9274:9327
1710 : tp -> e_nxt == NULLCondition445:5:9334:9350
1784 : tp -> e_nsap == NULLCondition440:5:9078:9095
1832 : tp = tp -> e_nxtExpressionStatement435:3:8927:8941
1821 : tp -> e_addr0 = ( u_short ) iExpressionStatement436:1:8944:8968
1838 : return tp ;ReturnStatement433:3:8906:8915
1813 : tp -> e_addr1 = ( u_short ) jExpressionStatement437:1:8971:8995
1805 : tp -> e_addr2 = ( u_short ) kExpressionStatement438:1:8998:9022
1889 : tp -> e_nxtCondition426:8:8695:8703
1690 : return tp ;ReturnStatement448:1:9425:9434
1893 : tp = & nsaptable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement425:1:8642:8685
1909 : i = j = k = 0ExpressionStatement423:2:8625:8638
1918 : i = ( ensap [ 4 ] << 8 ) | ensap [ 5 ]ExpressionStatement421:2:8583:8613
1930 : j = ( ensap [ 2 ] << 8 ) | ensap [ 3 ]ExpressionStatement420:2:8549:8579
1942 : k = ( ensap [ 0 ] << 8 ) | ensap [ 1 ]ExpressionStatement419:2:8515:8545
1676 : lookup_nsapFunction409:0:8286:9436
1974 : u_int i , j , k ;IdentifierDeclStatement413:1:8395:8408
1966 : const u_char * ensap ;IdentifierDeclStatement415:1:8433:8452
1970 : struct enamemem * tp ;IdentifierDeclStatement414:1:8411:8430
1679 -----> 1735nsap_length
1679 -----> 1756nsap_length
1679 -----> 1790nsap_length
1679 -----> 1840nsap_length
1679 -----> 1954nsap_length
1679 -----> 1962nsap_length
1682 -----> 1735nsap
1682 -----> 1840nsap
1682 -----> 1954nsap
1685 -----> 1693ndo
1685 -----> 1767ndo
1716 -----> 1710tp -> e_nxt
1716 -----> 1710 tp
1790 -----> 1735tp -> e_nsap
1790 -----> 1756tp -> e_nsap
1790 -----> 1784tp -> e_nsap
1790 -----> 1716 tp
1790 -----> 1735 tp
1790 -----> 1756 tp
1790 -----> 1784 tp
1832 -----> 1784tp
1832 -----> 1716tp
1832 -----> 1756tp
1832 -----> 1790tp
1832 -----> 1821tp
1832 -----> 1838tp
1832 -----> 1813tp
1832 -----> 1840tp
1832 -----> 1805tp
1832 -----> 1735tp
1832 -----> 1889tp
1832 -----> 1710tp
1832 -----> 1690tp
1832 -----> 1832tp
1893 -----> 1710tp
1893 -----> 1716tp
1893 -----> 1790tp
1893 -----> 1832tp
1893 -----> 1690tp
1893 -----> 1784tp
1893 -----> 1813tp
1893 -----> 1838tp
1893 -----> 1735tp
1893 -----> 1805tp
1893 -----> 1756tp
1893 -----> 1889tp
1893 -----> 1840tp
1893 -----> 1821tp
1909 -----> 1805k
1909 -----> 1840k
1909 -----> 1813j
1909 -----> 1840j
1909 -----> 1893j
1909 -----> 1821i
1909 -----> 1840i
1909 -----> 1893i
1918 -----> 1821i
1918 -----> 1840i
1918 -----> 1893i
1930 -----> 1813j
1930 -----> 1840j
1930 -----> 1893j
1942 -----> 1805k
1942 -----> 1840k
1954 -----> 1918ensap
1954 -----> 1930ensap
1954 -----> 1942ensap
1710 -----> 1693None
1784 -----> 1767None
1840 -----> 1832None
1840 -----> 1838None
1840 -----> 1889None
1889 -----> 1756None
1889 -----> 1813None
1889 -----> 1735None
1889 -----> 1784None
1889 -----> 1710None
1889 -----> 1821None
1889 -----> 1805None
1889 -----> 1716None
1889 -----> 1790None
1889 -----> 1840None
1889 -----> 1690None
1962 -----> 1954None
1962 -----> 1909None
1962 -----> 1918None
1962 -----> 1942None
1962 -----> 1930None
1676 -----> 1974None
1676 -----> 1966None
1676 -----> 1685None
1676 -----> 1962None
1676 -----> 1893None
1676 -----> 1889None
1676 -----> 1682None
1676 -----> 1679None
1676 -----> 1970None
1974 -----> 1942k
1974 -----> 1909k
1974 -----> 1840k
1974 -----> 1930j
1974 -----> 1909j
1974 -----> 1840j
1974 -----> 1918i
1974 -----> 1909i
1974 -----> 1840i
1966 -----> 1954ensap
1970 -----> 1893tp
1970 -----> 1889tp
1970 -----> 1840tp
1970 -----> 1838tp
1970 -----> 1832tp
1970 -----> 1821tp
1970 -----> 1813tp
1970 -----> 1805tp
1970 -----> 1790tp
1970 -----> 1784tp
1970 -----> 1756tp
1970 -----> 1735tp
1970 -----> 1716tp
1970 -----> 1710tp
1970 -----> 1690tp
1821 -----> 1813tp
1813 -----> 1805tp
1805 -----> 1790tp
1790 -----> 1784tp
1790 -----> 1756tp
1756 -----> 1735tp -> e_nsap
1756 -----> 1735tp
1735 -----> 1716tp
1716 -----> 1710tp
1716 -----> 1690tp
----------------------------pdg--------------------------------------------------
2022 : const u_char * piParameter454:40:9508:9523
2130 : j = ( pi [ 3 ] << 8 ) + pi [ 4 ]ExpressionStatement461:1:9613:9639
2142 : i = ( ( ( pi [ 0 ] << 8 ) + pi [ 1 ] ) << 8 ) + pi [ 2 ]ExpressionStatement460:1:9569:9610
2025 : netdissect_options * ndoParameter454:15:9483:9505
2033 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement474:2:9921:9987
2056 : tp -> p_nxt = ( struct protoidmem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement472:1:9838:9893
2050 : tp -> p_nxt == NULLCondition473:5:9900:9916
2075 : tp -> p_proto = ( u_short ) jExpressionStatement471:1:9811:9835
2092 : tp = tp -> p_nxtExpressionStatement469:3:9778:9792
2083 : tp -> p_oui = iExpressionStatement470:1:9795:9808
2098 : return tp ;ReturnStatement467:3:9757:9766
2030 : return tp ;ReturnStatement476:1:9991:10000
2100 : tp -> p_oui == i && tp -> p_proto == jCondition466:6:9718:9751
2112 : tp -> p_nxtCondition465:8:9701:9709
2116 : tp = & protoidtable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement464:1:9645:9691
2019 : lookup_protoidFunction453:0:9441:10002
2164 : u_int i , j ;IdentifierDeclStatement456:1:9529:9539
2160 : struct protoidmem * tp ;IdentifierDeclStatement457:1:9542:9563
2022 -----> 2130pi
2022 -----> 2142pi
2025 -----> 2033ndo
2056 -----> 2050 tp
2056 -----> 2050tp -> p_nxt
2075 -----> 2056 tp
2092 -----> 2050tp
2092 -----> 2056tp
2092 -----> 2075tp
2092 -----> 2083tp
2092 -----> 2098tp
2092 -----> 2030tp
2092 -----> 2100tp
2092 -----> 2112tp
2092 -----> 2092tp
2116 -----> 2056tp
2116 -----> 2050tp
2116 -----> 2083tp
2116 -----> 2030tp
2116 -----> 2075tp
2116 -----> 2092tp
2116 -----> 2098tp
2116 -----> 2112tp
2116 -----> 2100tp
2130 -----> 2075j
2130 -----> 2100j
2130 -----> 2116j
2142 -----> 2083i
2142 -----> 2100i
2142 -----> 2116i
2050 -----> 2033None
2100 -----> 2092None
2100 -----> 2112None
2100 -----> 2098None
2112 -----> 2100None
2112 -----> 2056None
2112 -----> 2030None
2112 -----> 2050None
2112 -----> 2083None
2112 -----> 2075None
2019 -----> 2116None
2019 -----> 2112None
2019 -----> 2142None
2019 -----> 2164None
2019 -----> 2022None
2019 -----> 2160None
2019 -----> 2130None
2019 -----> 2025None
2164 -----> 2130j
2164 -----> 2100j
2164 -----> 2142i
2164 -----> 2100i
2160 -----> 2116tp
2160 -----> 2112tp
2160 -----> 2100tp
2160 -----> 2098tp
2160 -----> 2092tp
2160 -----> 2083tp
2160 -----> 2075tp
2160 -----> 2056tp
2160 -----> 2050tp
2160 -----> 2030tp
2083 -----> 2075tp
2075 -----> 2056tp
2056 -----> 2050tp
2056 -----> 2030tp
----------------------------pdg--------------------------------------------------
2198 : const unsigned char * epParameter480:38:10056:10078
2323 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement509:1:10609:10637
2338 : oui = EXTRACT_BE_U_3 ( ep )ExpressionStatement508:1:10582:10606
2407 : memcpy ( & ea , ep , MAC48_LEN )ExpressionStatement497:2:10324:10351
2444 : tp = lookup_emem ( ndo , ep )ExpressionStatement488:1:10156:10181
2201 : netdissect_options * ndoParameter480:13:10031:10053
2211 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement522:2:10909:10986
2282 : ! ndo -> ndo_nflagCondition515:5:10721:10735
2360 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf2)" , __func__ )ExpressionStatement501:4:10453:10530
2429 : ! ndo -> ndo_nflagCondition492:5:10253:10267
2234 : tp -> e_name = strdup ( buf )ExpressionStatement520:1:10856:10880
2206 : return ( tp -> e_name ) ;ReturnStatement524:1:10989:11008
2228 : tp -> e_name == NULLCondition521:5:10887:10904
2290 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement512:2:10682:10710
2247 : * cp = '\0'ExpressionStatement519:2:10843:10853
2254 : snprintf ( cp , BUFSIZE - ( 2 + 5 * 3 ) , " (oui %s)" , tok2str ( oui_values , "Unknown" , oui ) )ExpressionStatement516:2:10742:10831
2305 : * cp ++ = ':'ExpressionStatement511:2:10667:10678
2319 : i = 5 ;ForInit510:6:10645:10650
2313 : -- i >= 0Condition510:13:10652:10659
2347 : cp = bufExpressionStatement507:1:10571:10579
2383 : tp -> e_name = strdup ( buf2 )ExpressionStatement499:3:10395:10420
2355 : return ( tp -> e_name ) ;ReturnStatement503:3:10535:10554
2377 : tp -> e_name == NULLCondition500:7:10429:10446
2424 : char buf2 [ BUFSIZE ] ;IdentifierDeclStatement493:2:10274:10292
2394 : ether_ntohost ( buf2 , & ea ) == 0Condition498:6:10359:10387
2436 : return ( tp -> e_name ) ;ReturnStatement490:2:10202:10221
2440 : tp -> e_nameCondition489:5:10188:10197
2455 : char buf [ BUFSIZE ] ;IdentifierDeclStatement486:1:10135:10152
2420 : struct ether_addr ea ;IdentifierDeclStatement495:2:10299:10319
2195 : mac48_stringFunction479:0:10005:11010
2468 : char * cp ;IdentifierDeclStatement483:1:10092:10100
2472 : int i ;IdentifierDeclStatement482:1:10084:10089
2460 : int oui ;IdentifierDeclStatement485:1:10125:10132
2464 : struct enamemem * tp ;IdentifierDeclStatement484:1:10103:10122
2198 -----> 2323ep
2198 -----> 2338ep
2198 -----> 2407ep
2198 -----> 2444ep
2201 -----> 2211ndo
2201 -----> 2282ndo
2201 -----> 2360ndo
2201 -----> 2429ndo
2201 -----> 2444ndo
2234 -----> 2206 tp
2234 -----> 2228 tp
2234 -----> 2206tp -> e_name
2234 -----> 2228tp -> e_name
2290 -----> 2247cp
2290 -----> 2254cp
2290 -----> 2305cp
2290 -----> 2290ep
2305 -----> 2290cp
2319 -----> 2313i
2323 -----> 2247cp
2323 -----> 2254cp
2323 -----> 2305cp
2323 -----> 2290ep
2338 -----> 2254oui
2347 -----> 2323cp
2383 -----> 2355 tp
2383 -----> 2377 tp
2383 -----> 2355tp -> e_name
2383 -----> 2377tp -> e_name
2424 -----> 2383buf2
2424 -----> 2394buf2
2444 -----> 2206tp
2444 -----> 2228tp
2444 -----> 2234tp
2444 -----> 2355tp
2444 -----> 2377tp
2444 -----> 2383tp
2444 -----> 2436tp
2444 -----> 2440tp
2455 -----> 2234buf
2455 -----> 2347buf
2228 -----> 2211None
2282 -----> 2247None
2282 -----> 2254None
2313 -----> 2305None
2313 -----> 2290None
2377 -----> 2360None
2394 -----> 2338None
2394 -----> 2383None
2394 -----> 2355None
2394 -----> 2347None
2394 -----> 2282None
2394 -----> 2234None
2394 -----> 2323None
2394 -----> 2319None
2394 -----> 2228None
2394 -----> 2377None
2394 -----> 2313None
2394 -----> 2206None
2429 -----> 2338None
2429 -----> 2424None
2429 -----> 2347None
2429 -----> 2282None
2429 -----> 2394None
2429 -----> 2234None
2429 -----> 2323None
2429 -----> 2319None
2429 -----> 2228None
2429 -----> 2407None
2429 -----> 2420None
2429 -----> 2313None
2429 -----> 2206None
2440 -----> 2436None
2440 -----> 2429None
2195 -----> 2444None
2195 -----> 2468None
2195 -----> 2198None
2195 -----> 2472None
2195 -----> 2460None
2195 -----> 2464None
2195 -----> 2455None
2195 -----> 2201None
2195 -----> 2440None
2198 -----> 2290ep
2420 -----> 2407ea
2420 -----> 2394ea
2468 -----> 2347cp
2468 -----> 2323cp
2468 -----> 2305cp
2468 -----> 2290cp
2468 -----> 2254cp
2468 -----> 2247cp
2472 -----> 2319i
2472 -----> 2313i
2460 -----> 2338oui
2464 -----> 2444tp
2464 -----> 2440tp
2464 -----> 2436tp
2464 -----> 2383tp
2464 -----> 2377tp
2464 -----> 2355tp
2464 -----> 2234tp
2464 -----> 2228tp
2464 -----> 2206tp
2407 -----> 2394ea
2383 -----> 2377tp
2234 -----> 2228tp
2234 -----> 2206tp
----------------------------pdg--------------------------------------------------
2512 : const unsigned char * epParameter528:38:11064:11086
2520 : return ( linkaddr_string ( ndo , ep , LINKADDR_EUI64 , EUI64_LEN ) ) ;ReturnStatement530:1:11092:11152
2515 : netdissect_options * ndoParameter528:13:11039:11061
2509 : eui64_stringFunction527:0:11013:11154
2512 -----> 2520ep
2515 -----> 2520ndo
2509 -----> 2515None
2509 -----> 2512None
2509 -----> 2520None
----------------------------pdg--------------------------------------------------
2543 : const unsigned char * epParameter535:40:11211:11233
2610 : cp = octet_to_hex ( cp , * ( ep + i - 1 ) )ExpressionStatement549:2:11457:11493
2651 : tp = lookup_bytestring ( ndo , ep , len )ExpressionStatement543:1:11333:11369
2546 : netdissect_options * ndoParameter535:15:11186:11208
2556 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement558:2:11592:11669
2579 : tp -> bs_name = strdup ( buf )ExpressionStatement556:1:11537:11562
2551 : return ( tp -> bs_name ) ;ReturnStatement561:1:11673:11693
2573 : tp -> bs_name == NULLCondition557:5:11569:11587
2596 : cp --ExpressionStatement552:1:11514:11519
2590 : * cp = '\0'ExpressionStatement554:1:11523:11533
2602 : * cp ++ = ':'ExpressionStatement550:2:11497:11508
2634 : i = len ;ForInit548:6:11431:11438
2630 : i > 0Condition548:15:11440:11444
2638 : cp = bufExpressionStatement547:1:11415:11423
2643 : return ( tp -> bs_name ) ;ReturnStatement545:2:11391:11411
2647 : tp -> bs_nameCondition544:5:11376:11386
2664 : char buf [ BUFSIZE ] ;IdentifierDeclStatement541:1:11312:11329
2681 : const unsigned int len = 8 ;IdentifierDeclStatement537:1:11239:11265
2627 : -- iUnaryExpression548:23:11448:11450
2540 : eui64le_stringFunction534:0:11158:11695
2673 : char * cp ;IdentifierDeclStatement539:1:11278:11286
2677 : u_int i ;IdentifierDeclStatement538:1:11268:11275
2669 : struct bsnamemem * tp ;IdentifierDeclStatement540:1:11289:11309
2543 -----> 2610ep
2543 -----> 2651ep
2546 -----> 2556ndo
2546 -----> 2651ndo
2579 -----> 2551tp -> bs_name
2579 -----> 2573tp -> bs_name
2579 -----> 2551 tp
2579 -----> 2573 tp
2596 -----> 2590cp
2602 -----> 2596cp
2602 -----> 2610cp
2610 -----> 2602cp
2634 -----> 2610i
2634 -----> 2630i
2638 -----> 2596cp
2638 -----> 2610cp
2651 -----> 2551tp
2651 -----> 2573tp
2651 -----> 2579tp
2651 -----> 2643tp
2651 -----> 2647tp
2664 -----> 2579buf
2664 -----> 2638buf
2681 -----> 2634len
2681 -----> 2651len
2573 -----> 2556None
2630 -----> 2627None
2630 -----> 2602None
2630 -----> 2610None
2647 -----> 2634None
2647 -----> 2551None
2647 -----> 2638None
2647 -----> 2630None
2647 -----> 2643None
2647 -----> 2596None
2647 -----> 2579None
2647 -----> 2573None
2647 -----> 2590None
2540 -----> 2543None
2540 -----> 2651None
2540 -----> 2546None
2540 -----> 2673None
2540 -----> 2664None
2540 -----> 2677None
2540 -----> 2647None
2540 -----> 2669None
2540 -----> 2681None
2673 -----> 2638cp
2673 -----> 2610cp
2673 -----> 2602cp
2673 -----> 2596cp
2673 -----> 2590cp
2677 -----> 2634i
2677 -----> 2630i
2669 -----> 2651tp
2669 -----> 2647tp
2669 -----> 2643tp
2669 -----> 2579tp
2669 -----> 2573tp
2669 -----> 2551tp
2579 -----> 2573tp
2579 -----> 2551tp
----------------------------pdg--------------------------------------------------
2715 : const unsigned int lenParameter566:27:11804:11825
2771 : i = len - 1 ;ForInit590:6:12330:12339
2816 : tp -> bs_name = cp = ( char * ) malloc ( len * 3 )ExpressionStatement585:1:12149:12189
2842 : tp = lookup_bytestring ( ndo , ep , len )ExpressionStatement581:1:12067:12103
2856 : return ( q922_string ( ndo , ep , len ) ) ;ReturnStatement579:2:12029:12063
2881 : type == LINKADDR_MAC48 && len == MAC48_LENCondition575:5:11918:11959
2892 : len == 0Condition572:5:11880:11887
2718 : const unsigned int typeParameter566:2:11779:11801
2867 : type == LINKADDR_FRELAYCondition578:5:12002:12024
2721 : const unsigned char * epParameter565:41:11752:11774
2777 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement589:1:12294:12322
2872 : return ( mac48_string ( ndo , ep ) ) ;ReturnStatement576:2:11964:11994
2724 : netdissect_options * ndoParameter565:16:11727:11749
2793 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: malloc" , __func__ )ExpressionStatement587:2:12219:12291
2741 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement592:2:12373:12401
2733 : * cp = '\0'ExpressionStatement594:1:12407:12417
2756 : * cp ++ = ':'ExpressionStatement591:2:12358:12369
2767 : i > 0Condition590:17:12341:12345
2729 : return ( tp -> bs_name ) ;ReturnStatement595:1:12420:12440
2810 : tp -> bs_name == NULLCondition586:5:12196:12214
2834 : return ( tp -> bs_name ) ;ReturnStatement583:2:12125:12145
2838 : tp -> bs_nameCondition582:5:12110:12120
2764 : -- iUnaryExpression590:25:12349:12351
2890 : return ( "<empty>" ) ;ReturnStatement573:2:11892:11910
2712 : linkaddr_stringFunction564:0:11698:12442
2904 : u_int i ;IdentifierDeclStatement568:1:11831:11838
2896 : struct bsnamemem * tp ;IdentifierDeclStatement570:1:11852:11872
2900 : char * cp ;IdentifierDeclStatement569:1:11841:11849
2715 -----> 2771len
2715 -----> 2816len
2715 -----> 2842len
2715 -----> 2856len
2715 -----> 2881len
2715 -----> 2892len
2718 -----> 2867type
2718 -----> 2881type
2721 -----> 2777ep
2721 -----> 2842ep
2721 -----> 2856ep
2721 -----> 2872ep
2724 -----> 2793ndo
2724 -----> 2842ndo
2724 -----> 2856ndo
2724 -----> 2872ndo
2741 -----> 2733cp
2741 -----> 2756cp
2741 -----> 2741ep
2756 -----> 2741cp
2771 -----> 2767i
2777 -----> 2733cp
2777 -----> 2756cp
2777 -----> 2741ep
2816 -----> 2729tp -> bs_name
2816 -----> 2810tp -> bs_name
2816 -----> 2777cp
2816 -----> 2729 tp
2816 -----> 2810 tp
2842 -----> 2729tp
2842 -----> 2810tp
2842 -----> 2816tp
2842 -----> 2834tp
2842 -----> 2838tp
2767 -----> 2764None
2767 -----> 2756None
2767 -----> 2741None
2810 -----> 2793None
2838 -----> 2834None
2838 -----> 2810None
2838 -----> 2771None
2838 -----> 2777None
2838 -----> 2767None
2838 -----> 2729None
2838 -----> 2816None
2838 -----> 2733None
2867 -----> 2842None
2867 -----> 2838None
2867 -----> 2856None
2881 -----> 2867None
2881 -----> 2872None
2892 -----> 2890None
2892 -----> 2881None
2712 -----> 2892None
2712 -----> 2721None
2712 -----> 2724None
2712 -----> 2904None
2712 -----> 2896None
2712 -----> 2900None
2712 -----> 2718None
2712 -----> 2715None
2721 -----> 2741ep
2904 -----> 2771i
2904 -----> 2767i
2896 -----> 2842tp
2896 -----> 2838tp
2896 -----> 2834tp
2896 -----> 2816tp
2896 -----> 2810tp
2896 -----> 2729tp
2900 -----> 2816cp
2900 -----> 2777cp
2900 -----> 2756cp
2900 -----> 2741cp
2900 -----> 2733cp
2816 -----> 2810tp
2816 -----> 2729tp
----------------------------pdg--------------------------------------------------
2939 : u_int nsap_lengthParameter601:8:12563:12579
2972 : ( ( nsap_idx & 1 ) == 0 ) && ( nsap_idx + 1 < nsap_length )Condition621:6:13110:13169
3002 : nsap_idx < nsap_lengthCondition619:20:13032:13053
3058 : tp = lookup_nsap ( ndo , nsap , nsap_length )ExpressionStatement610:1:12740:12780
3074 : nsap_length < 1 || nsap_length > ISONSAP_MAX_LENGTHCondition607:5:12640:12690
2942 : const unsigned char * nsapParameter600:40:12528:12552
2984 : cp = octet_to_hex ( cp , * nsap ++ )ExpressionStatement620:2:13072:13102
2945 : netdissect_options * ndoParameter600:15:12503:12525
3011 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: malloc" , __func__ )ExpressionStatement616:2:12937:13009
2964 : * cp ++ = '.'ExpressionStatement623:3:13177:13188
2954 : * cp = '\0'ExpressionStatement626:1:13198:13208
2999 : nsap_idx ++IncDecOp619:44:13056:13065
3006 : nsap_idx = 0 ;ForInit619:6:13018:13030
3032 : tp -> e_name = cp = ( char * ) malloc ( sizeof ( "xx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xx" ) )ExpressionStatement614:1:12822:12916
3028 : cp == NULLCondition615:5:12923:12932
2950 : return ( tp -> e_name ) ;ReturnStatement627:1:13211:13230
3050 : return tp -> e_name ;ReturnStatement612:2:12801:12818
3054 : tp -> e_nameCondition611:5:12787:12796
3072 : return ( "isonsap_string: illegal length" ) ;ReturnStatement608:2:12695:12736
2936 : isonsap_stringFunction599:0:12475:13232
3090 : u_int nsap_idx ;IdentifierDeclStatement603:1:12585:12599
3082 : struct enamemem * tp ;IdentifierDeclStatement605:1:12613:12632
3086 : char * cp ;IdentifierDeclStatement604:1:12602:12610
2939 -----> 2972nsap_length
2939 -----> 3002nsap_length
2939 -----> 3058nsap_length
2939 -----> 3074nsap_length
2942 -----> 2984nsap
2942 -----> 3058nsap
2945 -----> 3011ndo
2945 -----> 3058ndo
2964 -----> 2954cp
2964 -----> 2984cp
2984 -----> 2954cp
2984 -----> 2964cp
2984 -----> 2984cp
2984 -----> 2984nsap
2999 -----> 2972nsap_idx
2999 -----> 3002nsap_idx
2999 -----> 2999nsap_idx
3006 -----> 2972nsap_idx
3006 -----> 2999nsap_idx
3006 -----> 3002nsap_idx
3032 -----> 2954cp
3032 -----> 2984cp
3032 -----> 3028cp
3032 -----> 2950 tp
3032 -----> 2950tp -> e_name
3058 -----> 2950tp
3058 -----> 3032tp
3058 -----> 3050tp
3058 -----> 3054tp
2972 -----> 2964None
3002 -----> 2972None
3002 -----> 2984None
3002 -----> 2999None
3028 -----> 3011None
3054 -----> 2950None
3054 -----> 3032None
3054 -----> 3006None
3054 -----> 3050None
3054 -----> 2954None
3054 -----> 3028None
3054 -----> 3002None
3074 -----> 3058None
3074 -----> 3072None
3074 -----> 3054None
2936 -----> 3090None
2936 -----> 2942None
2936 -----> 3082None
2936 -----> 2945None
2936 -----> 2939None
2936 -----> 3074None
2936 -----> 3086None
3090 -----> 3006nsap_idx
3090 -----> 3002nsap_idx
3090 -----> 2999nsap_idx
3090 -----> 2972nsap_idx
3082 -----> 3058tp
3082 -----> 3054tp
3082 -----> 3050tp
3082 -----> 3032tp
3082 -----> 2950tp
3086 -----> 3032cp
3086 -----> 3028cp
3086 -----> 2984cp
3086 -----> 2964cp
3086 -----> 2954cp
3032 -----> 2950tp
----------------------------pdg--------------------------------------------------
3120 : u_short portParameter631:40:13288:13299
3241 : unsigned int i = port ;IdentifierDeclStatement634:1:13327:13348
3123 : netdissect_options * ndoParameter631:15:13263:13285
3133 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement647:2:13631:13708
3184 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement642:1:13508:13534
3156 : tp -> name = strdup ( buf )ExpressionStatement645:1:13582:13604
3128 : return ( tp -> name ) ;ReturnStatement649:1:13711:13728
3150 : tp -> name == NULLCondition646:5:13611:13626
3213 : tp = tp -> nxtAssignmentExpr637:55:13434:13445
3195 : tp -> addr = iExpressionStatement641:1:13493:13505
3203 : return ( tp -> name ) ;ReturnStatement639:3:13472:13489
3207 : tp -> addr == iCondition638:6:13454:13466
3218 : tp -> nxtCondition637:46:13425:13431
3222 : tp = & tporttable [ i & ( HASHNAMESIZE - 1 ) ] ;ForInit637:6:13385:13423
3234 : char buf [ sizeof ( "00000" ) ] ;IdentifierDeclStatement635:1:13351:13376
3167 : ( void ) snprintf ( buf , sizeof ( buf ) , "%u" , i )ExpressionStatement644:1:13538:13579
3117 : tcpport_stringFunction630:0:13235:13730
3248 : struct hnamemem * tp ;IdentifierDeclStatement633:1:13305:13324
3120 -----> 3241port
3123 -----> 3133ndo
3123 -----> 3184ndo
3156 -----> 3128tp -> name
3156 -----> 3150tp -> name
3156 -----> 3128 tp
3156 -----> 3150 tp
3213 -----> 3128tp
3213 -----> 3184tp
3213 -----> 3195tp
3213 -----> 3150tp
3213 -----> 3203tp
3213 -----> 3207tp
3213 -----> 3156tp
3213 -----> 3218tp
3213 -----> 3213tp
3222 -----> 3184tp
3222 -----> 3156tp
3222 -----> 3195tp
3222 -----> 3150tp
3222 -----> 3128tp
3222 -----> 3203tp
3222 -----> 3207tp
3222 -----> 3213tp
3222 -----> 3218tp
3234 -----> 3156buf
3234 -----> 3167buf
3241 -----> 3167i
3241 -----> 3195i
3241 -----> 3207i
3241 -----> 3222i
3150 -----> 3133None
3207 -----> 3218None
3207 -----> 3213None
3207 -----> 3203None
3218 -----> 3156None
3218 -----> 3150None
3218 -----> 3184None
3218 -----> 3167None
3218 -----> 3195None
3218 -----> 3207None
3218 -----> 3128None
3117 -----> 3123None
3117 -----> 3234None
3117 -----> 3120None
3117 -----> 3218None
3117 -----> 3222None
3117 -----> 3248None
3117 -----> 3241None
3248 -----> 3222tp
3248 -----> 3218tp
3248 -----> 3213tp
3248 -----> 3207tp
3248 -----> 3203tp
3248 -----> 3195tp
3248 -----> 3184tp
3248 -----> 3156tp
3248 -----> 3150tp
3248 -----> 3128tp
3195 -----> 3184tp
3184 -----> 3156tp
3156 -----> 3150tp
3156 -----> 3128tp
----------------------------pdg--------------------------------------------------
3278 : u_short portParameter653:40:13786:13797
3399 : unsigned int i = port ;IdentifierDeclStatement656:1:13825:13846
3281 : netdissect_options * ndoParameter653:15:13761:13783
3291 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement669:2:14129:14206
3342 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement664:1:14006:14032
3314 : tp -> name = strdup ( buf )ExpressionStatement667:1:14080:14102
3286 : return ( tp -> name ) ;ReturnStatement671:1:14209:14226
3308 : tp -> name == NULLCondition668:5:14109:14124
3371 : tp = tp -> nxtAssignmentExpr659:55:13932:13943
3353 : tp -> addr = iExpressionStatement663:1:13991:14003
3361 : return ( tp -> name ) ;ReturnStatement661:3:13970:13987
3365 : tp -> addr == iCondition660:6:13952:13964
3376 : tp -> nxtCondition659:46:13923:13929
3380 : tp = & uporttable [ i & ( HASHNAMESIZE - 1 ) ] ;ForInit659:6:13883:13921
3392 : char buf [ sizeof ( "00000" ) ] ;IdentifierDeclStatement657:1:13849:13874
3325 : ( void ) snprintf ( buf , sizeof ( buf ) , "%u" , i )ExpressionStatement666:1:14036:14077
3275 : udpport_stringFunction652:0:13733:14228
3406 : struct hnamemem * tp ;IdentifierDeclStatement655:1:13803:13822
3278 -----> 3399port
3281 -----> 3291ndo
3281 -----> 3342ndo
3314 -----> 3286tp -> name
3314 -----> 3308tp -> name
3314 -----> 3286 tp
3314 -----> 3308 tp
3371 -----> 3342tp
3371 -----> 3308tp
3371 -----> 3353tp
3371 -----> 3361tp
3371 -----> 3314tp
3371 -----> 3286tp
3371 -----> 3365tp
3371 -----> 3376tp
3371 -----> 3371tp
3380 -----> 3353tp
3380 -----> 3361tp
3380 -----> 3342tp
3380 -----> 3308tp
3380 -----> 3314tp
3380 -----> 3365tp
3380 -----> 3286tp
3380 -----> 3371tp
3380 -----> 3376tp
3392 -----> 3314buf
3392 -----> 3325buf
3399 -----> 3325i
3399 -----> 3353i
3399 -----> 3365i
3399 -----> 3380i
3308 -----> 3291None
3365 -----> 3371None
3365 -----> 3361None
3365 -----> 3376None
3376 -----> 3314None
3376 -----> 3286None
3376 -----> 3342None
3376 -----> 3308None
3376 -----> 3365None
3376 -----> 3325None
3376 -----> 3353None
3275 -----> 3278None
3275 -----> 3392None
3275 -----> 3376None
3275 -----> 3281None
3275 -----> 3399None
3275 -----> 3406None
3275 -----> 3380None
3406 -----> 3380tp
3406 -----> 3376tp
3406 -----> 3371tp
3406 -----> 3365tp
3406 -----> 3361tp
3406 -----> 3353tp
3406 -----> 3342tp
3406 -----> 3314tp
3406 -----> 3308tp
3406 -----> 3286tp
3353 -----> 3342tp
3342 -----> 3314tp
3314 -----> 3308tp
3314 -----> 3286tp
----------------------------pdg--------------------------------------------------
3436 : u_short portParameter675:39:14283:14294
3545 : port = ntohs ( port )ExpressionStatement690:1:14555:14573
3615 : unsigned int i = port ;IdentifierDeclStatement679:1:14333:14354
3439 : netdissect_options * ndoParameter675:14:14258:14280
3449 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement698:2:14760:14837
3558 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement687:1:14514:14540
3472 : tp -> name = strdup ( buf )ExpressionStatement696:1:14711:14733
3444 : return ( tp -> name ) ;ReturnStatement700:1:14840:14857
3466 : tp -> name == NULLCondition697:5:14740:14755
3491 : * cp ++ = hex [ port & 0xf ]ExpressionStatement694:1:14670:14693
3483 : * cp ++ = '\0'ExpressionStatement695:1:14696:14708
3503 : * cp ++ = hex [ port >> 4 & 0xf ]ExpressionStatement693:1:14639:14667
3517 : * cp ++ = hex [ port >> 8 & 0xf ]ExpressionStatement692:1:14608:14636
3531 : * cp ++ = hex [ port >> 12 & 0xf ]ExpressionStatement691:1:14576:14605
3554 : cp = bufExpressionStatement689:1:14544:14552
3587 : tp = tp -> nxtAssignmentExpr682:56:14440:14451
3569 : tp -> addr = iExpressionStatement686:1:14499:14511
3581 : tp -> addr == iCondition683:6:14460:14472
3592 : tp -> nxtCondition682:47:14431:14437
3577 : return ( tp -> name ) ;ReturnStatement684:3:14478:14495
3596 : tp = & ipxsaptable [ i & ( HASHNAMESIZE - 1 ) ] ;ForInit682:6:14390:14429
3608 : char buf [ sizeof ( "0000" ) ] ;IdentifierDeclStatement680:1:14357:14381
3433 : ipxsap_stringFunction674:0:14231:14859
3622 : struct hnamemem * tp ;IdentifierDeclStatement678:1:14311:14330
3626 : char * cp ;IdentifierDeclStatement677:1:14300:14308
3436 -----> 3545port
3436 -----> 3615port
3439 -----> 3449ndo
3439 -----> 3558ndo
3472 -----> 3444tp -> name
3472 -----> 3466tp -> name
3472 -----> 3444 tp
3472 -----> 3466 tp
3491 -----> 3483cp
3503 -----> 3491cp
3517 -----> 3503cp
3531 -----> 3517cp
3545 -----> 3491port
3545 -----> 3503port
3545 -----> 3517port
3545 -----> 3531port
3554 -----> 3531cp
3587 -----> 3558tp
3587 -----> 3569tp
3587 -----> 3472tp
3587 -----> 3581tp
3587 -----> 3444tp
3587 -----> 3466tp
3587 -----> 3592tp
3587 -----> 3577tp
3587 -----> 3587tp
3596 -----> 3558tp
3596 -----> 3569tp
3596 -----> 3577tp
3596 -----> 3472tp
3596 -----> 3466tp
3596 -----> 3581tp
3596 -----> 3444tp
3596 -----> 3587tp
3596 -----> 3592tp
3608 -----> 3472buf
3608 -----> 3554buf
3615 -----> 3569i
3615 -----> 3581i
3615 -----> 3596i
3466 -----> 3449None
3581 -----> 3592None
3581 -----> 3577None
3581 -----> 3587None
3592 -----> 3444None
3592 -----> 3483None
3592 -----> 3558None
3592 -----> 3569None
3592 -----> 3545None
3592 -----> 3466None
3592 -----> 3472None
3592 -----> 3554None
3592 -----> 3517None
3592 -----> 3503None
3592 -----> 3491None
3592 -----> 3531None
3592 -----> 3581None
3433 -----> 3622None
3433 -----> 3615None
3433 -----> 3608None
3433 -----> 3436None
3433 -----> 3596None
3433 -----> 3626None
3433 -----> 3592None
3433 -----> 3439None
3622 -----> 3596tp
3622 -----> 3592tp
3622 -----> 3587tp
3622 -----> 3581tp
3622 -----> 3577tp
3622 -----> 3569tp
3622 -----> 3558tp
3622 -----> 3472tp
3622 -----> 3466tp
3622 -----> 3444tp
3626 -----> 3554cp
3626 -----> 3531cp
3626 -----> 3517cp
3626 -----> 3503cp
3626 -----> 3491cp
3626 -----> 3483cp
3569 -----> 3558tp
3558 -----> 3472tp
3472 -----> 3466tp
3472 -----> 3444tp
----------------------------pdg--------------------------------------------------
3663 : netdissect_options * ndoParameter704:15:14889:14911
3675 : table -> nxt = newhnamemem ( ndo )ExpressionStatement733:2:15588:15617
3693 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup" , __func__ )ExpressionStatement729:3:15488:15561
3760 : ndo -> ndo_nflagCondition723:6:15315:15328
3765 : table = table -> nxtExpressionStatement722:3:15289:15307
3771 : table -> nameCondition721:9:15273:15283
3718 : table -> name = strdup ( sv -> s_name )ExpressionStatement727:3:15424:15456
3710 : table -> name == NULLCondition728:6:15464:15482
3732 : table -> name = strdup ( buf )ExpressionStatement725:3:15385:15410
3686 : table -> addr = portExpressionStatement732:2:15566:15584
3780 : table = & uporttable [ i ]ExpressionStatement717:3:15219:15241
3801 : table = & tporttable [ i ]ExpressionStatement715:3:15148:15170
3822 : i = port & ( HASHNAMESIZE - 1 )ExpressionStatement713:2:15077:15104
3830 : int port = ntohs ( sv -> s_port ) ;IdentifierDeclStatement712:2:15045:15073
3743 : ( void ) snprintf ( buf , sizeof ( buf ) , "%d" , port )ExpressionStatement724:3:15336:15380
3844 : ( sv = getservent ( ) ) != NULLCondition711:8:15012:15038
3788 : strcmp ( sv -> s_proto , "udp" ) == 0Condition716:11:15183:15213
3809 : strcmp ( sv -> s_proto , "tcp" ) == 0Condition714:6:15112:15142
3853 : char buf [ sizeof ( "0000000000" ) ] ;IdentifierDeclStatement709:1:14971:15001
3779 : continue ;ContinueStatement719:3:15253:15261
3660 : init_servarrayFunction703:0:14862:15637
3864 : struct hnamemem * table ;IdentifierDeclStatement707:1:14938:14960
3860 : int i ;IdentifierDeclStatement708:1:14963:14968
3668 : endservent ( )ExpressionStatement735:1:15623:15635
3868 : struct servent * sv ;IdentifierDeclStatement706:1:14917:14935
3663 -----> 3675ndo
3663 -----> 3693ndo
3663 -----> 3760ndo
3675 -----> 3765 table
3675 -----> 3771 table
3675 -----> 3765table -> nxt
3718 -----> 3710 table
3718 -----> 3710table -> name
3718 -----> 3771table -> name
3732 -----> 3710 table
3732 -----> 3710table -> name
3732 -----> 3771table -> name
3765 -----> 3710table
3765 -----> 3718table
3765 -----> 3675table
3765 -----> 3686table
3765 -----> 3732table
3765 -----> 3771table
3765 -----> 3765table
3780 -----> 3718table
3780 -----> 3710table
3780 -----> 3732table
3780 -----> 3765table
3780 -----> 3686table
3780 -----> 3675table
3780 -----> 3771table
3801 -----> 3732table
3801 -----> 3710table
3801 -----> 3675table
3801 -----> 3718table
3801 -----> 3686table
3801 -----> 3771table
3801 -----> 3765table
3822 -----> 3780i
3822 -----> 3801i
3830 -----> 3686port
3830 -----> 3743port
3830 -----> 3822port
3844 -----> 3718sv
3844 -----> 3788sv
3844 -----> 3809sv
3844 -----> 3830sv
3853 -----> 3732buf
3853 -----> 3743buf
3710 -----> 3693None
3760 -----> 3718None
3760 -----> 3743None
3760 -----> 3732None
3771 -----> 3765None
3788 -----> 3771None
3788 -----> 3760None
3788 -----> 3779None
3788 -----> 3710None
3788 -----> 3675None
3788 -----> 3686None
3788 -----> 3780None
3809 -----> 3771None
3809 -----> 3760None
3809 -----> 3788None
3809 -----> 3801None
3809 -----> 3710None
3809 -----> 3675None
3809 -----> 3686None
3844 -----> 3809None
3844 -----> 3822None
3844 -----> 3830None
3660 -----> 3864None
3660 -----> 3844None
3660 -----> 3860None
3660 -----> 3853None
3660 -----> 3663None
3660 -----> 3668None
3660 -----> 3868None
3864 -----> 3801table
3864 -----> 3780table
3864 -----> 3771table
3864 -----> 3765table
3864 -----> 3732table
3864 -----> 3718table
3864 -----> 3710table
3864 -----> 3686table
3864 -----> 3675table
3860 -----> 3822i
3868 -----> 3844sv
3868 -----> 3809sv
3868 -----> 3788sv
3718 -----> 3710table
3718 -----> 3686table
3686 -----> 3675table
----------------------------pdg--------------------------------------------------
3915 : netdissect_options * ndoParameter758:17:16119:16141
3922 : table -> nxt = newhnamemem ( ndo )ExpressionStatement770:2:16413:16442
3959 : table = table -> nxtExpressionStatement767:3:16320:16338
3965 : table -> nameCondition766:9:16304:16314
3948 : table -> name = eproto_db [ i ] . sExpressionStatement768:2:16342:16370
3933 : table -> addr = htons ( eproto_db [ i ] . p )ExpressionStatement769:2:16374:16409
3969 : table = & eprototable [ j ]ExpressionStatement765:2:16270:16293
3977 : int j = htons ( eproto_db [ i ] . p ) & ( HASHNAMESIZE - 1 ) ;IdentifierDeclStatement764:2:16218:16266
3997 : i ++IncDecOp763:29:16209:16211
4000 : eproto_db [ i ] . sCondition763:13:16193:16206
4006 : i = 0 ;ForInit763:6:16186:16191
3912 : init_eprotoarrayFunction757:0:16090:16447
4010 : struct hnamemem * table ;IdentifierDeclStatement761:1:16155:16177
4014 : int i ;IdentifierDeclStatement760:1:16147:16152
3915 -----> 3922ndo
3922 -----> 3959 table
3922 -----> 3965 table
3922 -----> 3959table -> nxt
3948 -----> 3965table -> name
3959 -----> 3933table
3959 -----> 3948table
3959 -----> 3922table
3959 -----> 3965table
3959 -----> 3959table
3969 -----> 3922table
3969 -----> 3933table
3969 -----> 3948table
3969 -----> 3959table
3969 -----> 3965table
3977 -----> 3969j
3997 -----> 3977i
3997 -----> 3948i
3997 -----> 3933i
3997 -----> 4000i
3997 -----> 3997i
4006 -----> 3933i
4006 -----> 3948i
4006 -----> 3977i
4006 -----> 3997i
4006 -----> 4000i
3965 -----> 3959None
4000 -----> 3969None
4000 -----> 3977None
4000 -----> 3922None
4000 -----> 3948None
4000 -----> 3933None
4000 -----> 3997None
4000 -----> 3965None
3912 -----> 4000None
3912 -----> 3915None
3912 -----> 4006None
3912 -----> 4010None
3912 -----> 4014None
4010 -----> 3969table
4010 -----> 3965table
4010 -----> 3959table
4010 -----> 3948table
4010 -----> 3933table
4010 -----> 3922table
4014 -----> 4006i
4014 -----> 4000i
4014 -----> 3997i
3948 -----> 3933table
3933 -----> 3922table
----------------------------pdg--------------------------------------------------
4049 : netdissect_options * ndoParameter788:18:16880:16902
4072 : tp = lookup_protoid ( ndo , pl -> protoid )ExpressionStatement810:2:17420:17457
4101 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(eproto_db[i].s)" , __func__ )ExpressionStatement805:3:17275:17361
4139 : tp = lookup_protoid ( ndo , protoid )ExpressionStatement802:2:17172:17205
4056 : tp -> p_name = pl -> nameExpressionStatement815:2:17504:17525
4066 : tp -> p_name != NULLCondition812:6:17468:17485
4094 : pl = protoidlist ;ForInit809:6:17374:17390
4088 : pl -> name != NULLCondition809:24:17392:17407
4124 : tp -> p_name = strdup ( eproto_db [ i ] . s )ExpressionStatement803:2:17209:17244
4118 : tp -> p_name == NULLCondition804:6:17252:17269
4187 : i ++IncDecOp798:29:17071:17073
4171 : u_short etype = htons ( eproto_db [ i ] . p ) ;IdentifierDeclStatement799:2:17080:17117
4190 : eproto_db [ i ] . sCondition798:13:17055:17068
4196 : i = 0 ;ForInit798:6:17048:17053
4218 : u_char protoid [ 5 ] ;IdentifierDeclStatement793:1:16971:16988
4150 : memcpy ( ( char * ) & protoid [ 3 ] , ( char * ) & etype , 2 )ExpressionStatement801:2:17122:17168
4200 : protoid [ 2 ] = 0ExpressionStatement797:1:17026:17040
4206 : protoid [ 1 ] = 0ExpressionStatement796:1:17009:17023
4212 : protoid [ 0 ] = 0ExpressionStatement795:1:16992:17006
4065 : continue ;ContinueStatement813:3:17491:17499
4085 : ++ plUnaryExpression809:42:17410:17413
4046 : init_protoidarrayFunction787:0:16850:17530
4231 : int i ;IdentifierDeclStatement790:1:16908:16913
4223 : const struct protoidlist * pl ;IdentifierDeclStatement792:1:16940:16968
4227 : struct protoidmem * tp ;IdentifierDeclStatement791:1:16916:16937
4049 -----> 4072ndo
4049 -----> 4101ndo
4049 -----> 4139ndo
4056 -----> 4066 tp
4056 -----> 4066tp -> p_name
4072 -----> 4056tp
4072 -----> 4066tp
4094 -----> 4056pl
4094 -----> 4072pl
4094 -----> 4088pl
4124 -----> 4066 tp
4124 -----> 4118 tp
4124 -----> 4066tp -> p_name
4124 -----> 4118tp -> p_name
4139 -----> 4118tp
4139 -----> 4124tp
4187 -----> 4124i
4187 -----> 4171i
4187 -----> 4190i
4187 -----> 4187i
4196 -----> 4124i
4196 -----> 4171i
4196 -----> 4187i
4196 -----> 4190i
4218 -----> 4139protoid
4218 -----> 4150protoid
4218 -----> 4200protoid
4218 -----> 4206protoid
4218 -----> 4212protoid
4066 -----> 4065None
4066 -----> 4085None
4066 -----> 4056None
4088 -----> 4072None
4088 -----> 4066None
4118 -----> 4101None
4190 -----> 4187None
4190 -----> 4150None
4190 -----> 4171None
4190 -----> 4124None
4190 -----> 4139None
4190 -----> 4118None
4046 -----> 4231None
4046 -----> 4212None
4046 -----> 4094None
4046 -----> 4223None
4046 -----> 4088None
4046 -----> 4049None
4046 -----> 4227None
4046 -----> 4196None
4046 -----> 4218None
4046 -----> 4200None
4046 -----> 4190None
4046 -----> 4206None
4231 -----> 4196i
4231 -----> 4190i
4231 -----> 4187i
4223 -----> 4094pl
4223 -----> 4088pl
4227 -----> 4139tp
4227 -----> 4124tp
4227 -----> 4118tp
4227 -----> 4072tp
4227 -----> 4066tp
4227 -----> 4056tp
4212 -----> 4206protoid
4206 -----> 4200protoid
4200 -----> 4150protoid
4200 -----> 4139protoid
4124 -----> 4118tp
4124 -----> 4066tp
4124 -----> 4056tp
----------------------------pdg--------------------------------------------------
4275 : netdissect_options * ndoParameter829:16:17763:17785
4294 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(name)" , __func__ )ExpressionStatement868:4:18574:18651
4368 : tp = lookup_emem ( ndo , el -> addr )ExpressionStatement855:2:18306:18337
4282 : tp -> e_name = el -> nameExpressionStatement873:2:18679:18700
4362 : tp -> e_name != NULLCondition857:6:18348:18365
4317 : tp -> e_name = strdup ( name )ExpressionStatement866:3:18516:18541
4311 : tp -> e_name == NULLCondition867:7:18550:18567
4390 : el = etherlist ;ForInit854:6:18262:18276
4341 : memcpy ( & ea , el -> addr , MAC48_LEN )ExpressionStatement864:2:18439:18472
4384 : el -> name != NULLCondition854:22:18278:18293
4394 : char name [ 256 ] ;IdentifierDeclStatement834:1:17867:17881
4328 : ether_ntohost ( name , & ea ) == 0Condition865:6:18480:18508
4381 : ++ elUnaryExpression854:40:18296:18299
4292 : continue ;ContinueStatement870:3:18656:18664
4356 : struct ether_addr ea ;IdentifierDeclStatement863:2:18415:18435
4361 : continue ;ContinueStatement858:3:18371:18379
4272 : init_etherarrayFunction828:0:17735:18705
4403 : const struct etherlist * el ;IdentifierDeclStatement831:1:17791:17817
4399 : struct enamemem * tp ;IdentifierDeclStatement832:1:17820:17839
4275 -----> 4294ndo
4275 -----> 4368ndo
4282 -----> 4362tp -> e_name
4282 -----> 4362 tp
4317 -----> 4311tp -> e_name
4317 -----> 4362tp -> e_name
4317 -----> 4311 tp
4317 -----> 4362 tp
4368 -----> 4282tp
4368 -----> 4311tp
4368 -----> 4317tp
4368 -----> 4362tp
4390 -----> 4282el
4390 -----> 4341el
4390 -----> 4368el
4390 -----> 4384el
4394 -----> 4317name
4394 -----> 4328name
4311 -----> 4294None
4328 -----> 4282None
4328 -----> 4381None
4328 -----> 4311None
4328 -----> 4292None
4328 -----> 4317None
4362 -----> 4356None
4362 -----> 4328None
4362 -----> 4341None
4362 -----> 4361None
4384 -----> 4362None
4384 -----> 4368None
4272 -----> 4275None
4272 -----> 4403None
4272 -----> 4394None
4272 -----> 4384None
4272 -----> 4390None
4272 -----> 4399None
4356 -----> 4341ea
4356 -----> 4328ea
4403 -----> 4390el
4403 -----> 4384el
4399 -----> 4368tp
4399 -----> 4362tp
4399 -----> 4317tp
4399 -----> 4311tp
4399 -----> 4282tp
4341 -----> 4328ea
4317 -----> 4311tp
----------------------------pdg--------------------------------------------------
4440 : netdissect_options * ndoParameter1098:17:26194:26216
4447 : table -> nxt = newhnamemem ( ndo )ExpressionStatement1110:2:26498:26527
4484 : table = table -> nxtExpressionStatement1107:3:26405:26423
4490 : table -> nameCondition1106:9:26389:26399
4473 : table -> name = ipxsap_db [ i ] . sExpressionStatement1108:2:26427:26455
4458 : table -> addr = htons ( ipxsap_db [ i ] . v )ExpressionStatement1109:2:26459:26494
4494 : table = & ipxsaptable [ j ]ExpressionStatement1105:2:26355:26378
4502 : u_int j = htons ( ipxsap_db [ i ] . v ) & ( HASHNAMESIZE - 1 ) ;IdentifierDeclStatement1104:2:26301:26351
4522 : i ++IncDecOp1103:37:26292:26294
4525 : ipxsap_db [ i ] . s != NULLCondition1103:13:26268:26289
4533 : i = 0 ;ForInit1103:6:26261:26266
4437 : init_ipxsaparrayFunction1097:0:26165:26532
4537 : struct hnamemem * table ;IdentifierDeclStatement1101:1:26230:26252
4541 : int i ;IdentifierDeclStatement1100:1:26222:26227
4440 -----> 4447ndo
4447 -----> 4484 table
4447 -----> 4490 table
4447 -----> 4484table -> nxt
4473 -----> 4490table -> name
4484 -----> 4447table
4484 -----> 4458table
4484 -----> 4473table
4484 -----> 4490table
4484 -----> 4484table
4494 -----> 4458table
4494 -----> 4447table
4494 -----> 4473table
4494 -----> 4484table
4494 -----> 4490table
4502 -----> 4494j
4522 -----> 4458i
4522 -----> 4473i
4522 -----> 4502i
4522 -----> 4525i
4522 -----> 4522i
4533 -----> 4473i
4533 -----> 4502i
4533 -----> 4458i
4533 -----> 4525i
4533 -----> 4522i
4490 -----> 4484None
4525 -----> 4494None
4525 -----> 4490None
4525 -----> 4473None
4525 -----> 4458None
4525 -----> 4502None
4525 -----> 4522None
4525 -----> 4447None
4437 -----> 4440None
4437 -----> 4533None
4437 -----> 4537None
4437 -----> 4541None
4437 -----> 4525None
4537 -----> 4494table
4537 -----> 4490table
4537 -----> 4484table
4537 -----> 4473table
4537 -----> 4458table
4537 -----> 4447table
4541 -----> 4533i
4541 -----> 4525i
4541 -----> 4522i
4473 -----> 4458table
4458 -----> 4447table
----------------------------pdg--------------------------------------------------
4570 : unsigned int maskParameter1116:64:26605:26621
4624 : f_netmask = maskExpressionStatement1120:2:26676:26692
4573 : unsigned int localnetParameter1116:41:26582:26602
4628 : f_localnet = localnetExpressionStatement1119:2:26651:26672
4576 : netdissect_options * ndoParameter1116:16:26557:26579
4581 : init_ipxsaparray ( ndo )ExpressionStatement1130:1:26827:26848
4588 : init_protoidarray ( ndo )ExpressionStatement1129:1:26802:26824
4595 : init_eprotoarray ( ndo )ExpressionStatement1128:1:26778:26799
4602 : init_servarray ( ndo )ExpressionStatement1127:1:26756:26775
4609 : init_etherarray ( ndo )ExpressionStatement1126:1:26733:26753
4618 : ndo -> ndo_nflagCondition1122:5:26702:26715
4632 : ndo -> ndo_fflagCondition1118:5:26631:26644
4617 : return ;ReturnStatement1124:2:26723:26729
4567 : init_addrtonameFunction1115:0:26536:26850
4570 -----> 4624mask
4573 -----> 4628localnet
4576 -----> 4581ndo
4576 -----> 4588ndo
4576 -----> 4595ndo
4576 -----> 4602ndo
4576 -----> 4609ndo
4576 -----> 4618ndo
4576 -----> 4632ndo
4618 -----> 4609None
4618 -----> 4588None
4618 -----> 4617None
4618 -----> 4581None
4618 -----> 4595None
4618 -----> 4602None
4632 -----> 4628None
4632 -----> 4624None
4567 -----> 4570None
4567 -----> 4576None
4567 -----> 4618None
4567 -----> 4573None
4567 -----> 4632None
----------------------------pdg--------------------------------------------------
4649 : u_short dnaddrParameter1134:39:26905:26918
4661 : tp -> name = dnnum_string ( ndo , dnaddr )ExpressionStatement1145:1:27134:27170
4685 : tp -> addr = dnaddrExpressionStatement1143:1:27085:27102
4697 : tp -> addr == dnaddrCondition1140:6:27041:27058
4714 : tp = & dnaddrtable [ dnaddr & ( HASHNAMESIZE - 1 ) ] ;ForInit1138:6:26952:26996
4652 : netdissect_options * ndoParameter1134:14:26880:26902
4674 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement1144:1:27105:27131
4657 : return ( tp -> name ) ;ReturnStatement1147:1:27174:27190
4703 : tp = tp -> nxtAssignmentExpr1139:6:27021:27032
4693 : return ( tp -> name ) ;ReturnStatement1141:3:27064:27081
4708 : tp -> nxt != NULLCondition1138:52:26998:27012
4646 : dnaddr_stringFunction1133:0:26853:27192
4726 : struct hnamemem * tp ;IdentifierDeclStatement1136:1:26924:26943
4649 -----> 4661dnaddr
4649 -----> 4685dnaddr
4649 -----> 4697dnaddr
4649 -----> 4714dnaddr
4652 -----> 4661ndo
4652 -----> 4674ndo
4661 -----> 4657tp -> name
4661 -----> 4657 tp
4703 -----> 4685tp
4703 -----> 4693tp
4703 -----> 4697tp
4703 -----> 4674tp
4703 -----> 4657tp
4703 -----> 4661tp
4703 -----> 4708tp
4703 -----> 4703tp
4714 -----> 4661tp
4714 -----> 4657tp
4714 -----> 4674tp
4714 -----> 4685tp
4714 -----> 4693tp
4714 -----> 4697tp
4714 -----> 4703tp
4714 -----> 4708tp
4697 -----> 4693None
4697 -----> 4703None
4697 -----> 4708None
4708 -----> 4697None
4708 -----> 4661None
4708 -----> 4657None
4708 -----> 4685None
4708 -----> 4674None
4646 -----> 4726None
4646 -----> 4714None
4646 -----> 4652None
4646 -----> 4649None
4646 -----> 4708None
4726 -----> 4714tp
4726 -----> 4708tp
4726 -----> 4703tp
4726 -----> 4697tp
4726 -----> 4693tp
4726 -----> 4685tp
4726 -----> 4674tp
4726 -----> 4661tp
4726 -----> 4657tp
4685 -----> 4674tp
4674 -----> 4661tp
4661 -----> 4657tp
----------------------------pdg--------------------------------------------------
4750 : netdissect_options * ndoParameter1152:12:27226:27248
4770 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement1162:3:27442:27515
4757 : p = ptr ++ExpressionStatement1166:1:27529:27538
4755 : return ( p ) ;ReturnStatement1167:1:27541:27551
4791 : ptr = ( struct hnamemem * ) calloc ( num , sizeof ( * ptr ) )ExpressionStatement1160:2:27367:27418
4787 : ptr == NULLCondition1161:6:27426:27436
4808 : num = 64ExpressionStatement1159:2:27355:27363
4816 : static u_int num = 0 ;IdentifierDeclStatement1156:8:27319:27332
4812 : num == 0Condition1158:5:27340:27348
4824 : static struct hnamemem * ptr = NULL ;IdentifierDeclStatement1155:8:27282:27309
4747 : newhnamememFunction1151:0:27196:27553
4763 : -- numExpressionStatement1165:1:27521:27526
4832 : struct hnamemem * p ;IdentifierDeclStatement1154:1:27254:27272
4750 -----> 4770ndo
4757 -----> 4755p
4791 -----> 4757ptr
4791 -----> 4787ptr
4808 -----> 4791num
4816 -----> 4812num
4824 -----> 4757ptr
4824 -----> 4791ptr
4787 -----> 4770None
4812 -----> 4787None
4812 -----> 4791None
4812 -----> 4808None
4747 -----> 4816None
4747 -----> 4812None
4747 -----> 4757None
4747 -----> 4763None
4747 -----> 4832None
4747 -----> 4750None
4747 -----> 4755None
4747 -----> 4824None
4832 -----> 4757p
4832 -----> 4755p
----------------------------pdg--------------------------------------------------
4852 : netdissect_options * ndoParameter1172:13:27589:27611
4872 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement1182:3:27808:27881
4859 : p = ptr ++ExpressionStatement1186:1:27895:27904
4857 : return ( p ) ;ReturnStatement1187:1:27907:27917
4893 : ptr = ( struct h6namemem * ) calloc ( num , sizeof ( * ptr ) )ExpressionStatement1180:2:27732:27784
4889 : ptr == NULLCondition1181:6:27792:27802
4910 : num = 64ExpressionStatement1179:2:27720:27728
4918 : static u_int num = 0 ;IdentifierDeclStatement1176:8:27684:27697
4914 : num == 0Condition1178:5:27705:27713
4926 : static struct h6namemem * ptr = NULL ;IdentifierDeclStatement1175:8:27646:27674
4849 : newh6namememFunction1171:0:27557:27919
4865 : -- numExpressionStatement1185:1:27887:27892
4934 : struct h6namemem * p ;IdentifierDeclStatement1174:1:27617:27636
4852 -----> 4872ndo
4859 -----> 4857p
4893 -----> 4859ptr
4893 -----> 4889ptr
4910 -----> 4893num
4918 -----> 4914num
4926 -----> 4859ptr
4926 -----> 4893ptr
4889 -----> 4872None
4914 -----> 4889None
4914 -----> 4910None
4914 -----> 4893None
4849 -----> 4926None
4849 -----> 4859None
4849 -----> 4918None
4849 -----> 4914None
4849 -----> 4865None
4849 -----> 4934None
4849 -----> 4852None
4849 -----> 4857None
4934 -----> 4859p
4934 -----> 4857p
----------------------------pdg--------------------------------------------------
4954 : const unsigned short tciParameter1192:21:27957:27980
4961 : snprintf ( buf , sizeof ( buf ) , "vlan %u, p %u%s" , tci & 0xfff , tci >> 13 , ( tci & 0x1000 ) ? ", DEI" : "" )ExpressionStatement1195:1:28009:28139
4990 : static char buf [ 128 ] ;IdentifierDeclStatement1194:8:27993:28006
4959 : return buf ;ReturnStatement1199:1:28142:28152
4951 : ieee8021q_tci_stringFunction1191:0:27923:28154
4954 -----> 4961tci
4990 -----> 4959buf
4990 -----> 4961buf
4951 -----> 4954None
4951 -----> 4961None
4951 -----> 4959None
4951 -----> 4990None
4961 -----> 4959buf
----------------------------pdg--------------------------------------------------
17 : const char * fileParameter16:21:284:299
26 : snprintf ( path , sizeof ( path ) , "%s%s%s" , env , __PATH_ETC_INET , file )ExpressionStatement26:4:473:539
45 : return ( file ) ;ReturnStatement23:8:431:444
47 : fopen ( file , "r" ) || ! envCondition22:8:397:420
60 : static char path [ _MAX_PATH ] ;IdentifierDeclStatement19:11:361:381
22 : return ( path ) ;ReturnStatement30:4:611:624
66 : const char * env = getenv ( __PATH_SYSROOT ) ;IdentifierDeclStatement18:4:308:348
14 : etc_pathFunction16:0:263:626
17 -----> 26file
17 -----> 45file
17 -----> 47file
60 -----> 22path
60 -----> 26path
66 -----> 26env
66 -----> 47env
47 -----> 26None
47 -----> 45None
47 -----> 22None
14 -----> 60None
14 -----> 17None
14 -----> 47None
14 -----> 66None
26 -----> 22path
----------------------------pdg--------------------------------------------------
90 : int fParameter34:11:645:649
95 : _serv_stayopen |= fExpressionStatement40:4:768:787
124 : servf == NULLCondition36:8:662:674
101 : rewind ( servf )ExpressionStatement39:8:749:762
108 : servf = fopen ( etc_path ( __PATH_SERVICES ) , "r" )ExpressionStatement37:8:685:730
87 : setserventFunction33:0:629:789
90 -----> 95f
124 -----> 101None
124 -----> 108None
87 -----> 95None
87 -----> 90None
87 -----> 124None
----------------------------pdg--------------------------------------------------
159 : servfCondition46:8:824:828
148 : servf = NULLExpressionStatement48:8:864:876
152 : fclose ( servf )ExpressionStatement47:8:841:854
137 : endserventFunction43:0:792:908
142 : _serv_stayopen = 0ExpressionStatement50:4:888:906
159 -----> 148None
159 -----> 152None
137 -----> 142None
137 -----> 159None
----------------------------pdg--------------------------------------------------
184 : * cp ++ = '\0'ExpressionStatement97:12:1957:1969
245 : cp && * cpCondition88:11:1714:1722
233 : * cp == ' ' || * cp == '\t'Condition89:12:1739:1763
196 : cp = strpbrk ( cp , " \t" )ExpressionStatement95:8:1896:1919
208 : * q ++ = cpExpressionStatement94:12:1877:1886
229 : cp ++ExpressionStatement90:12:1780:1784
192 : cp != NULLCondition96:12:1933:1942
175 : * q = NULLExpressionStatement99:4:1981:1990
216 : q < & serv_aliases [ MAXALIASES - 1 ]Condition93:12:1830:1862
252 : * cp ++ = '\0'ExpressionStatement87:8:1689:1701
264 : cp = strpbrk ( cp , " \t" )ExpressionStatement85:4:1636:1659
260 : cp != NULLCondition86:8:1669:1678
275 : q = serv . s_aliases = serv_aliasesExpressionStatement84:4:1597:1630
283 : serv . s_proto = cpExpressionStatement83:4:1574:1591
289 : serv . s_port = htons ( ( u_short ) atoi ( p ) )ExpressionStatement82:4:1531:1568
307 : * cp ++ = '\0'ExpressionStatement81:4:1513:1525
322 : cp = strpbrk ( p , ",/" )ExpressionStatement78:4:1446:1467
318 : cp == NULLCondition79:8:1477:1486
334 : p ++ExpressionStatement77:8:1437:1440
338 : * p == ' ' || * p == '\t'Condition76:11:1404:1426
350 : * p ++ = '\0'ExpressionStatement75:4:1380:1391
409 : * p == '#'Condition65:8:1174:1182
365 : p = strpbrk ( p , " \t" )ExpressionStatement72:4:1314:1335
361 : p == NULLCondition73:8:1345:1353
376 : serv . s_name = pExpressionStatement71:4:1293:1308
395 : cp = strpbrk ( p , "#\n" )ExpressionStatement67:4:1209:1231
382 : * cp = '\0'ExpressionStatement70:4:1277:1287
391 : cp == NULLCondition68:8:1241:1250
418 : ( p = fgets ( line , BUFSIZ , servf ) ) == NULLCondition63:8:1101:1140
438 : servf == NULL && ( servf = fopen ( etc_path ( __PATH_SERVICES ) , "r" ) ) == NULLCondition59:8:988:1059
228 : continue ;ContinueStatement91:12:1798:1806
433 : again :Label62:0:1086:1091
171 : return ( & serv ) ;ReturnStatement100:4:1996:2010
316 : goto again ;GotoStatement80:8:1497:1507
359 : goto again ;GotoStatement74:8:1364:1374
389 : goto again ;GotoStatement69:8:1261:1271
407 : goto again ;GotoStatement66:8:1193:1203
416 : return ( NULL ) ;ReturnStatement64:8:1151:1164
436 : return ( NULL ) ;ReturnStatement60:8:1070:1083
166 : getserventFunction53:0:911:2012
460 : char * cp , * * q ;IdentifierDeclStatement57:4:964:977
467 : char * p ;IdentifierDeclStatement56:4:951:958
184 -----> 245cp
184 -----> 233cp
184 -----> 196cp
184 -----> 208cp
184 -----> 229cp
184 -----> 245 cp
184 -----> 233 cp
196 -----> 229cp
196 -----> 233cp
196 -----> 208cp
196 -----> 184cp
196 -----> 192cp
196 -----> 245cp
196 -----> 196cp
208 -----> 175q
208 -----> 216q
208 -----> 208q
229 -----> 233cp
229 -----> 245cp
229 -----> 196cp
229 -----> 208cp
229 -----> 229cp
252 -----> 245cp
252 -----> 233cp
252 -----> 229cp
252 -----> 208cp
252 -----> 196cp
252 -----> 233 cp
252 -----> 245 cp
264 -----> 245cp
264 -----> 252cp
264 -----> 260cp
264 -----> 233cp
264 -----> 196cp
264 -----> 229cp
264 -----> 208cp
275 -----> 175q
275 -----> 208q
275 -----> 216q
283 -----> 275serv
289 -----> 283serv
307 -----> 264cp
307 -----> 283cp
307 -----> 233 cp
307 -----> 245 cp
322 -----> 307cp
322 -----> 318cp
334 -----> 338p
334 -----> 322p
334 -----> 289p
334 -----> 334p
350 -----> 338 p
350 -----> 409 p
350 -----> 334p
350 -----> 338p
350 -----> 289p
350 -----> 322p
365 -----> 350p
365 -----> 361p
376 -----> 289serv
376 -----> 376serv
395 -----> 382cp
395 -----> 391cp
418 -----> 365p
418 -----> 376p
418 -----> 409p
418 -----> 395p
438 -----> 418servf
192 -----> 184None
216 -----> 208None
233 -----> 192None
233 -----> 228None
233 -----> 229None
233 -----> 216None
233 -----> 196None
245 -----> 233None
260 -----> 252None
318 -----> 433None
318 -----> 264None
318 -----> 289None
318 -----> 307None
318 -----> 418None
318 -----> 275None
318 -----> 260None
318 -----> 175None
318 -----> 171None
318 -----> 245None
318 -----> 316None
318 -----> 283None
338 -----> 334None
361 -----> 433None
361 -----> 338None
361 -----> 322None
361 -----> 359None
361 -----> 418None
361 -----> 318None
361 -----> 350None
391 -----> 433None
391 -----> 365None
391 -----> 376None
391 -----> 418None
391 -----> 361None
391 -----> 382None
391 -----> 389None
409 -----> 433None
409 -----> 391None
409 -----> 407None
409 -----> 395None
409 -----> 418None
418 -----> 416None
418 -----> 409None
438 -----> 433None
438 -----> 418None
438 -----> 436None
166 -----> 438None
166 -----> 460None
166 -----> 467None
460 -----> 275q
460 -----> 216q
460 -----> 208q
460 -----> 175q
460 -----> 395cp
460 -----> 391cp
460 -----> 382cp
460 -----> 322cp
460 -----> 318cp
460 -----> 307cp
460 -----> 264cp
460 -----> 260cp
460 -----> 252cp
460 -----> 245cp
460 -----> 233cp
460 -----> 229cp
460 -----> 196cp
460 -----> 192cp
460 -----> 184cp
467 -----> 418p
467 -----> 409p
467 -----> 365p
467 -----> 361p
467 -----> 350p
467 -----> 338p
467 -----> 334p
275 -----> 171serv
----------------------------pdg--------------------------------------------------
5 : size_t errbuf_sizeParameter21:22:255:272
15 : strlcpy ( errbuf , "" , errbuf_size )ExpressionStatement44:1:609:641
39 : strlcpy ( errbuf , "Attempting to initialize Winsock failed" , errbuf_size )ExpressionStatement32:2:451:528
8 : char * errbufParameter21:8:241:252
54 : err = WSAStartup ( wVersionRequested , & wsaData )ExpressionStatement30:1:385:430
50 : err != 0Condition31:5:437:444
67 : wVersionRequested = MAKEWORD ( 2 , 2 )ExpressionStatement29:1:348:382
26 : smiInit ( "tcpdump" )ExpressionStatement40:1:578:596
13 : return ( 0 ) ;ReturnStatement45:1:644:654
35 : return ( - 1 ) ;ReturnStatement34:2:532:543
2 : nd_initFunction20:0:229:656
82 : WSADATA wsaData ;IdentifierDeclStatement25:1:317:332
86 : WORD wVersionRequested ;IdentifierDeclStatement24:1:292:314
78 : int err ;IdentifierDeclStatement26:1:335:342
5 -----> 15errbuf_size
5 -----> 39errbuf_size
8 -----> 15errbuf
8 -----> 39errbuf
54 -----> 50err
67 -----> 54wVersionRequested
50 -----> 26None
50 -----> 39None
50 -----> 13None
50 -----> 15None
50 -----> 35None
2 -----> 54None
2 -----> 8None
2 -----> 67None
2 -----> 5None
2 -----> 82None
2 -----> 50None
2 -----> 86None
2 -----> 78None
86 -----> 67wVersionRequested
78 -----> 54err
78 -----> 50err
----------------------------pdg--------------------------------------------------
100 : nd_cleanupFunction49:0:660:762
105 : WSACleanup ( )ExpressionStatement59:1:741:753
110 : smiExit ( )ExpressionStatement54:1:705:714
100 -----> 105None
100 -----> 110None
----------------------------pdg--------------------------------------------------
117 : nd_have_smi_supportFunction63:0:765:854
122 : return ( 1 ) ;ReturnStatement67:1:816:826
117 -----> 122None
----------------------------pdg--------------------------------------------------
131 : size_t errbuf_sizeParameter77:53:942:959
154 : snprintf ( errbuf , errbuf_size , "could not load MIB module %s" , module )ExpressionStatement81:2:1019:1094
134 : char * errbufParameter77:39:928:939
137 : const char * moduleParameter77:19:908:925
167 : smiLoadModule ( module ) == 0Condition80:5:987:1012
142 : return ( 0 ) ;ReturnStatement86:1:1142:1152
150 : return ( - 1 ) ;ReturnStatement83:2:1098:1109
144 : nd_smi_module_loaded = 1ExpressionStatement85:1:1115:1139
128 : nd_load_smi_moduleFunction76:0:885:1273
131 -----> 154errbuf_size
134 -----> 154errbuf
137 -----> 154module
137 -----> 167module
167 -----> 154None
167 -----> 142None
167 -----> 150None
167 -----> 144None
128 -----> 167None
128 -----> 131None
128 -----> 134None
128 -----> 137None
----------------------------pdg--------------------------------------------------
183 : nd_smi_version_stringFunction94:0:1276:1396
188 : return ( smi_version_string ) ;ReturnStatement98:1:1338:1365
183 -----> 188None
----------------------------pdg--------------------------------------------------
196 : const u_int newlenParameter107:35:1499:1516
218 : ndo -> ndo_snapend = new_packetp + newlenExpressionStatement120:1:1906:1945
199 : const u_char * new_packetpParameter107:8:1472:1496
226 : ndo -> ndo_packetp = new_packetpExpressionStatement119:1:1873:1903
202 : u_char * new_bufferParameter106:40:1444:1461
256 : ndspi -> ndspi_buffer = new_bufferExpressionStatement114:1:1704:1736
205 : netdissect_options * ndoParameter106:15:1419:1441
212 : ndo -> ndo_packet_info_stack = ndspiExpressionStatement121:1:1948:1982
232 : ndspi -> ndspi_prev = ndo -> ndo_packet_info_stackExpressionStatement117:1:1823:1869
240 : ndspi -> ndspi_snapend = ndo -> ndo_snapendExpressionStatement116:1:1781:1820
248 : ndspi -> ndspi_packetp = ndo -> ndo_packetpExpressionStatement115:1:1739:1778
269 : ndspi = ( struct netdissect_saved_packet_info * ) malloc ( sizeof ( struct netdissect_saved_packet_info ) )ExpressionStatement111:1:1568:1666
265 : ndspi == NULLCondition112:5:1673:1685
210 : return ( 1 ) ;ReturnStatement123:1:1986:1996
263 : return ( 0 ) ;ReturnStatement113:2:1690:1700
193 : nd_push_bufferFunction105:0:1400:1999
282 : struct netdissect_saved_packet_info * ndspi ;IdentifierDeclStatement109:1:1522:1564
196 -----> 218newlen
199 -----> 218new_packetp
199 -----> 226new_packetp
202 -----> 256new_buffer
205 -----> 212ndo
205 -----> 218ndo
205 -----> 226ndo
205 -----> 232ndo
205 -----> 240ndo
205 -----> 248ndo
269 -----> 212ndspi
269 -----> 232ndspi
269 -----> 240ndspi
269 -----> 248ndspi
269 -----> 256ndspi
269 -----> 265ndspi
265 -----> 240None
265 -----> 210None
265 -----> 248None
265 -----> 256None
265 -----> 218None
265 -----> 232None
265 -----> 212None
265 -----> 263None
265 -----> 226None
193 -----> 269None
193 -----> 196None
193 -----> 205None
193 -----> 202None
193 -----> 282None
193 -----> 199None
193 -----> 265None
282 -----> 269ndspi
282 -----> 265ndspi
282 -----> 256ndspi
282 -----> 248ndspi
282 -----> 240ndspi
282 -----> 232ndspi
256 -----> 248ndspi
248 -----> 240ndspi
240 -----> 232ndspi
232 -----> 212ndspi
226 -----> 218ndo
218 -----> 212ndo
----------------------------pdg--------------------------------------------------
307 : const u_int newlenParameter129:59:2067:2084
322 : ndo -> ndo_snapend = bp + newlenExpressionStatement151:2:2600:2630
330 : newlen <= snaplen_remainingCondition149:5:2564:2590
310 : const u_char * bpParameter129:41:2049:2064
334 : snaplen_remaining = ( u_int ) ( ndo -> ndo_snapend - bp )ExpressionStatement146:1:2504:2554
313 : netdissect_options * ndoParameter129:16:2024:2046
344 : ndo -> ndo_packet_info_stack = ndspiExpressionStatement143:1:2464:2498
350 : ndspi -> ndspi_prev = ndo -> ndo_packet_info_stackExpressionStatement140:1:2412:2458
358 : ndspi -> ndspi_snapend = ndo -> ndo_snapendExpressionStatement139:1:2370:2409
366 : ndspi -> ndspi_packetp = ndo -> ndo_packetpExpressionStatement138:1:2328:2367
387 : ndspi = ( struct netdissect_saved_packet_info * ) malloc ( sizeof ( struct netdissect_saved_packet_info ) )ExpressionStatement134:1:2162:2260
374 : ndspi -> ndspi_buffer = NULLExpressionStatement137:1:2298:2324
383 : ndspi == NULLCondition135:5:2267:2279
381 : return ( 0 ) ;ReturnStatement136:2:2284:2294
318 : return ( 1 ) ;ReturnStatement154:1:2637:2647
304 : nd_push_snaplenFunction128:0:2004:2650
400 : u_int snaplen_remaining ;IdentifierDeclStatement132:1:2135:2158
404 : struct netdissect_saved_packet_info * ndspi ;IdentifierDeclStatement131:1:2090:2132
307 -----> 322newlen
307 -----> 330newlen
310 -----> 322bp
310 -----> 334bp
313 -----> 322ndo
313 -----> 334ndo
313 -----> 344ndo
313 -----> 350ndo
313 -----> 358ndo
313 -----> 366ndo
334 -----> 330snaplen_remaining
344 -----> 334 ndo
387 -----> 344ndspi
387 -----> 350ndspi
387 -----> 358ndspi
387 -----> 366ndspi
387 -----> 374ndspi
387 -----> 383ndspi
330 -----> 322None
383 -----> 350None
383 -----> 374None
383 -----> 366None
383 -----> 330None
383 -----> 381None
383 -----> 344None
383 -----> 334None
383 -----> 318None
383 -----> 358None
304 -----> 400None
304 -----> 387None
304 -----> 310None
304 -----> 313None
304 -----> 383None
304 -----> 307None
304 -----> 404None
400 -----> 334snaplen_remaining
400 -----> 330snaplen_remaining
404 -----> 387ndspi
404 -----> 383ndspi
404 -----> 374ndspi
404 -----> 366ndspi
404 -----> 358ndspi
404 -----> 350ndspi
374 -----> 366ndspi
366 -----> 358ndspi
358 -----> 350ndspi
350 -----> 344ndspi
344 -----> 334ndo
344 -----> 322ndo
----------------------------pdg--------------------------------------------------
429 : const u_int newlenParameter159:61:2720:2737
442 : ndo -> ndo_snapend = bp + newlenExpressionStatement177:2:3116:3146
450 : newlen <= snaplen_remainingCondition175:5:3080:3106
432 : const u_char * bpParameter159:43:2702:2717
454 : snaplen_remaining = ( u_int ) ( previous_snapend - bp )ExpressionStatement172:1:3020:3070
435 : netdissect_options * ndoParameter159:18:2677:2699
464 : previous_snapend = ndo -> ndo_snapendExpressionStatement169:2:2979:3014
484 : ndspi = ndo -> ndo_packet_info_stackExpressionStatement165:1:2848:2882
470 : previous_snapend = ndspi -> ndspi_prev -> ndspi_snapendExpressionStatement167:2:2918:2969
478 : ndspi -> ndspi_prev != NULLCondition166:5:2889:2913
426 : nd_change_snaplenFunction158:0:2654:3151
490 : u_int snaplen_remaining ;IdentifierDeclStatement163:1:2821:2844
494 : const u_char * previous_snapend ;IdentifierDeclStatement162:1:2788:2818
498 : struct netdissect_saved_packet_info * ndspi ;IdentifierDeclStatement161:1:2743:2785
429 -----> 442newlen
429 -----> 450newlen
432 -----> 442bp
432 -----> 454bp
435 -----> 442ndo
435 -----> 464ndo
435 -----> 484ndo
454 -----> 450snaplen_remaining
464 -----> 454previous_snapend
470 -----> 454previous_snapend
484 -----> 470ndspi
484 -----> 478ndspi
450 -----> 442None
478 -----> 464None
478 -----> 470None
426 -----> 432None
426 -----> 450None
426 -----> 429None
426 -----> 490None
426 -----> 478None
426 -----> 454None
426 -----> 494None
426 -----> 498None
426 -----> 484None
426 -----> 435None
490 -----> 454snaplen_remaining
490 -----> 450snaplen_remaining
494 -----> 470previous_snapend
494 -----> 464previous_snapend
498 -----> 484ndspi
498 -----> 478ndspi
----------------------------pdg--------------------------------------------------
522 : netdissect_options * ndoParameter182:19:3178:3200
543 : ndo -> ndo_packet_info_stack = ndspi -> ndspi_prevExpressionStatement189:1:3373:3419
551 : ndo -> ndo_snapend = ndspi -> ndspi_snapendExpressionStatement188:1:3331:3370
559 : ndo -> ndo_packetp = ndspi -> ndspi_packetpExpressionStatement187:1:3289:3328
567 : ndspi = ndo -> ndo_packet_info_stackExpressionStatement186:1:3252:3286
527 : free ( ndspi )ExpressionStatement192:1:3451:3462
534 : free ( ndspi -> ndspi_buffer )ExpressionStatement191:1:3423:3448
519 : nd_pop_packet_infoFunction181:0:3154:3464
573 : struct netdissect_saved_packet_info * ndspi ;IdentifierDeclStatement184:1:3206:3248
522 -----> 543ndo
522 -----> 551ndo
522 -----> 559ndo
522 -----> 567ndo
567 -----> 527ndspi
567 -----> 534ndspi
567 -----> 543ndspi
567 -----> 551ndspi
567 -----> 559ndspi
519 -----> 573None
519 -----> 543None
519 -----> 567None
519 -----> 534None
519 -----> 559None
519 -----> 551None
519 -----> 527None
519 -----> 522None
573 -----> 567ndspi
573 -----> 534ndspi
573 -----> 527ndspi
559 -----> 551ndo
551 -----> 543ndo
----------------------------pdg--------------------------------------------------
593 : netdissect_options * ndoParameter196:23:3495:3517
599 : nd_pop_packet_info ( ndo )ExpressionStatement199:2:3568:3591
606 : ndo -> ndo_packet_info_stack != NULLCondition198:8:3530:3563
590 : nd_pop_all_packet_infoFunction195:0:3467:3593
593 -----> 599ndo
593 -----> 606ndo
606 -----> 599None
590 -----> 593None
590 -----> 606None
----------------------------pdg--------------------------------------------------
621 : netdissect_options * ndoParameter203:17:3627:3649
627 : longjmp ( ndo -> ndo_early_end , ND_TRUNCATED )ExpressionStatement205:1:3655:3696
618 : nd_trunc_longjmpFunction202:0:3596:3736
626 : ND_UNREACHABLEStatement208:1:3713:3726
621 -----> 627ndo
618 -----> 621None
618 -----> 626None
618 -----> 627None
----------------------------pdg--------------------------------------------------
29 : int typeParameter90:47:1886:1893
141 : return gethostbyaddr ( addr , len , type ) ;ReturnStatement99:2:2045:2082
154 : typeCondition97:9:2020:2023
32 : int lenParameter90:38:1877:1883
98 : memcpy ( & addr6 . sin6_addr , addr , len )ExpressionStatement106:2:2226:2261
35 : const char * addrParameter90:20:1859:1874
113 : addr6 . sin6_family = AF_INET6ExpressionStatement105:2:2194:2222
134 : struct sockaddr_in6 addr6 ;IdentifierDeclStatement103:2:2129:2154
156 : host . h_name = hostbufExpressionStatement96:1:1988:2009
55 : strlcpy ( host . h_name , hname , NI_MAXHOST )ExpressionStatement111:3:2396:2435
162 : char hname [ NI_MAXHOST ] ;IdentifierDeclStatement94:1:1962:1984
71 : getnameinfo ( ( struct sockaddr * ) & addr6 , sizeof ( addr6 ) , hname , sizeof ( hname ) , NULL , 0 , 0 )Condition107:6:2269:2361
167 : static char hostbuf [ NI_MAXHOST ] ;IdentifierDeclStatement93:8:1935:1959
173 : static struct hostent host ;IdentifierDeclStatement92:8:1906:1925
51 : return & host ;ReturnStatement112:3:2440:2452
69 : return NULL ;ReturnStatement109:3:2369:2380
44 : default :Label117:1:2479:2486
138 : case AF_INET6 :Label102:1:2110:2123
42 : return NULL ;ReturnStatement118:2:2490:2501
119 : memset ( & addr6 , 0 , sizeof ( addr6 ) )ExpressionStatement104:2:2158:2190
152 : case AF_INET :Label98:1:2029:2041
26 : win32_gethostbyaddrFunction89:0:1815:2506
29 -----> 141type
29 -----> 154type
32 -----> 98len
32 -----> 141len
35 -----> 98addr
35 -----> 141addr
113 -----> 98addr6
134 -----> 113addr6
156 -----> 55host . h_name
156 -----> 55host
162 -----> 55hname
162 -----> 71hname
167 -----> 156hostbuf
173 -----> 156host
71 -----> 55None
71 -----> 51None
71 -----> 69None
154 -----> 113None
154 -----> 44None
154 -----> 134None
154 -----> 71None
154 -----> 138None
154 -----> 42None
154 -----> 119None
154 -----> 141None
154 -----> 98None
154 -----> 152None
26 -----> 35None
26 -----> 29None
26 -----> 162None
26 -----> 154None
26 -----> 156None
26 -----> 32None
26 -----> 167None
26 -----> 173None
134 -----> 119addr6
134 -----> 98addr6
134 -----> 71addr6
173 -----> 55host
173 -----> 51host
156 -----> 51host
119 -----> 113addr6
98 -----> 71addr6
----------------------------pdg--------------------------------------------------
254 : unsigned int addrParameter167:6:3340:3356
368 : addr = ntohl ( addr )ExpressionStatement174:1:3441:3459
271 : addr >>= 8ExpressionStatement190:2:3724:3734
342 : byte = addr & 0xffExpressionStatement180:2:3518:3536
302 : byte /= 10ExpressionStatement185:3:3644:3654
286 : * -- cp = ( char ) byte + '0'ExpressionStatement187:4:3677:3701
298 : byte > 0Condition186:7:3663:3670
324 : byte /= 10ExpressionStatement182:2:3575:3585
306 : * -- cp = ( char ) ( byte % 10 ) + '0'ExpressionStatement184:3:3608:3639
320 : byte > 0Condition183:6:3593:3600
328 : * -- cp = ( char ) ( byte % 10 ) + '0'ExpressionStatement181:2:3540:3571
348 : n = 4ExpressionStatement178:1:3503:3508
264 : -- n > 0Condition191:10:3746:3752
360 : cp = buf + sizeof ( buf )ExpressionStatement175:1:3462:3484
259 : return cp + 1 ;ReturnStatement193:1:3758:3771
275 : * -- cp = '.'ExpressionStatement189:2:3709:3720
352 : * -- cp = '\0'ExpressionStatement176:1:3487:3499
377 : static char buf [ sizeof ( ".xxx.xxx.xxx.xxx" ) ] ;IdentifierDeclStatement172:8:3401:3437
251 : intoaFunction166:0:3321:3773
393 : char * cp ;IdentifierDeclStatement169:1:3362:3370
389 : u_int byte ;IdentifierDeclStatement170:1:3373:3383
385 : int n ;IdentifierDeclStatement171:1:3386:3391
254 -----> 368addr
271 -----> 342addr
271 -----> 271addr
302 -----> 286byte
302 -----> 298byte
324 -----> 302byte
324 -----> 306byte
324 -----> 320byte
342 -----> 324byte
342 -----> 328byte
348 -----> 264n
360 -----> 259cp
360 -----> 275cp
360 -----> 286cp
360 -----> 306cp
360 -----> 328cp
360 -----> 352cp
368 -----> 271addr
368 -----> 342addr
377 -----> 360buf
264 -----> 324None
264 -----> 328None
264 -----> 275None
264 -----> 271None
264 -----> 342None
264 -----> 320None
298 -----> 286None
320 -----> 306None
320 -----> 302None
320 -----> 298None
251 -----> 324None
251 -----> 348None
251 -----> 328None
251 -----> 275None
251 -----> 264None
251 -----> 254None
251 -----> 271None
251 -----> 342None
251 -----> 368None
251 -----> 360None
251 -----> 259None
251 -----> 320None
251 -----> 352None
251 -----> 393None
251 -----> 389None
251 -----> 385None
251 -----> 377None
254 -----> 271addr
393 -----> 360cp
393 -----> 352cp
393 -----> 328cp
393 -----> 306cp
393 -----> 286cp
393 -----> 275cp
393 -----> 259cp
389 -----> 342byte
389 -----> 324byte
389 -----> 320byte
389 -----> 302byte
389 -----> 298byte
385 -----> 348n
385 -----> 264n
352 -----> 328cp
328 -----> 306cp
306 -----> 286cp
286 -----> 275cp
275 -----> 259cp
----------------------------pdg--------------------------------------------------
416 : const u_char * apParameter204:39:3942:3957
653 : memcpy ( & addr , ap , sizeof ( addr ) )ExpressionStatement210:1:4026:4057
419 : netdissect_options * ndoParameter204:14:3917:3939
429 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(intoa(addr))" , __func__ )ExpressionStatement247:2:4829:4914
500 : ndo -> ndo_NflagCondition236:7:4651:4664
505 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(hp->h_name)" , __func__ )ExpressionStatement234:4:4559:4642
590 : ! ndo -> ndo_nflag && ( addr & f_netmask ) == f_localnetCondition220:5:4232:4287
602 : p -> nxt = newhnamemem ( ndo )ExpressionStatement217:1:4197:4222
452 : p -> name = strdup ( intoa ( addr ) )ExpressionStatement245:1:4774:4803
424 : return ( p -> name ) ;ReturnStatement249:1:4917:4933
446 : p -> name == NULLCondition246:5:4810:4824
487 : dotp = strchr ( p -> name , '.' )ExpressionStatement238:4:4678:4705
479 : * dotp = '\0'ExpressionStatement240:5:4726:4738
485 : dotpCondition239:8:4715:4718
528 : p -> name = strdup ( hp -> h_name )ExpressionStatement232:3:4501:4529
472 : return ( p -> name ) ;ReturnStatement242:3:4748:4764
522 : p -> name == NULLCondition233:7:4538:4552
549 : hp = gethostbyaddr ( ( char * ) & addr , 4 , AF_INET )ExpressionStatement228:3:4423:4468
545 : hpCondition229:6:4476:4477
567 : hp = cap_gethostbyaddr ( capdns , ( char * ) & addr , 4 , AF_INET )ExpressionStatement224:3:4338:4402
632 : p = p -> nxtAssignmentExpr212:16:4118:4127
613 : p -> addr = addrExpressionStatement216:1:4180:4194
622 : return ( p -> name ) ;ReturnStatement214:3:4158:4174
626 : p -> addr == addrCondition213:6:4138:4152
637 : p -> nxtCondition212:8:4110:4115
641 : p = & hnametable [ addr & ( HASHNAMESIZE - 1 ) ]ExpressionStatement211:1:4060:4100
672 : unsigned int addr ;IdentifierDeclStatement207:1:3984:4001
541 : char * dotp ;IdentifierDeclStatement230:3:4485:4495
586 : capdns != NULLCondition223:6:4317:4330
413 : ipaddr_stringFunction203:0:3890:4935
676 : struct hostent * hp ;IdentifierDeclStatement206:1:3963:3981
668 : struct hnamemem * p ;IdentifierDeclStatement208:1:4004:4022
416 -----> 653ap
419 -----> 429ndo
419 -----> 500ndo
419 -----> 505ndo
419 -----> 590ndo
419 -----> 602ndo
452 -----> 424 p
452 -----> 446 p
452 -----> 424p -> name
452 -----> 446p -> name
487 -----> 479dotp
487 -----> 485dotp
528 -----> 472 p
528 -----> 487 p
528 -----> 522 p
528 -----> 472p -> name
528 -----> 487p -> name
528 -----> 522p -> name
549 -----> 528hp
549 -----> 545hp
567 -----> 528hp
567 -----> 545hp
632 -----> 487p
632 -----> 602p
632 -----> 522p
632 -----> 472p
632 -----> 452p
632 -----> 446p
632 -----> 613p
632 -----> 424p
632 -----> 528p
632 -----> 622p
632 -----> 626p
632 -----> 637p
632 -----> 632p
641 -----> 487p
641 -----> 602p
641 -----> 452p
641 -----> 446p
641 -----> 522p
641 -----> 528p
641 -----> 613p
641 -----> 622p
641 -----> 424p
641 -----> 626p
641 -----> 472p
641 -----> 637p
641 -----> 632p
672 -----> 452addr
672 -----> 590addr
672 -----> 613addr
672 -----> 626addr
672 -----> 641addr
446 -----> 429None
485 -----> 479None
500 -----> 487None
500 -----> 485None
522 -----> 505None
545 -----> 452None
545 -----> 500None
545 -----> 528None
545 -----> 522None
545 -----> 446None
545 -----> 472None
545 -----> 424None
545 -----> 541None
586 -----> 567None
586 -----> 549None
590 -----> 452None
590 -----> 586None
590 -----> 545None
590 -----> 446None
590 -----> 424None
626 -----> 637None
626 -----> 632None
626 -----> 622None
637 -----> 590None
637 -----> 626None
637 -----> 613None
637 -----> 602None
413 -----> 676None
413 -----> 668None
413 -----> 672None
413 -----> 419None
413 -----> 653None
413 -----> 637None
413 -----> 641None
413 -----> 416None
672 -----> 653addr
541 -----> 487dotp
541 -----> 485dotp
541 -----> 479dotp
676 -----> 567hp
676 -----> 549hp
676 -----> 545hp
668 -----> 641p
668 -----> 637p
668 -----> 632p
668 -----> 626p
668 -----> 622p
668 -----> 613p
668 -----> 602p
668 -----> 528p
668 -----> 522p
668 -----> 472p
668 -----> 452p
668 -----> 446p
668 -----> 424p
653 -----> 641addr
653 -----> 626addr
653 -----> 613addr
653 -----> 590addr
653 -----> 567addr
653 -----> 549addr
653 -----> 452addr
613 -----> 602p
602 -----> 528p
528 -----> 522p
528 -----> 487p
452 -----> 446p
452 -----> 424p
----------------------------pdg--------------------------------------------------
721 : const u_char * apParameter254:40:4992:5007
768 : cp = addrtostr6 ( ap , ntop_buf , sizeof ( ntop_buf ) )ExpressionStatement305:1:6045:6092
996 : memcpy ( & addr , ap , sizeof ( addr ) )ExpressionStatement268:1:5217:5248
724 : netdissect_options * ndoParameter254:15:4967:4989
734 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(cp)" , __func__ )ExpressionStatement308:2:6141:6217
815 : ndo -> ndo_NflagCondition295:7:5914:5927
820 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(hp->h_name)" , __func__ )ExpressionStatement293:4:5822:5905
909 : ! ndo -> ndo_nflagCondition279:5:5505:5519
915 : p -> nxt = newh6namemem ( ndo )ExpressionStatement275:1:5453:5479
757 : p -> name = strdup ( cp )ExpressionStatement306:1:6095:6115
729 : return ( p -> name ) ;ReturnStatement310:1:6220:6236
751 : p -> name == NULLCondition307:5:6122:6136
802 : dotp = strchr ( p -> name , '.' )ExpressionStatement297:4:5941:5968
794 : * dotp = '\0'ExpressionStatement299:5:5989:6001
800 : dotpCondition298:8:5978:5981
843 : p -> name = strdup ( hp -> h_name )ExpressionStatement291:3:5764:5792
787 : return ( p -> name ) ;ReturnStatement301:3:6011:6027
837 : p -> name == NULLCondition292:7:5801:5815
864 : hp = gethostbyaddr ( ( char * ) & addr , sizeof ( addr ) , AF_INET6 )ExpressionStatement286:3:5667:5731
860 : hpCondition288:6:5739:5740
884 : hp = cap_gethostbyaddr ( capdns , ( char * ) & addr , sizeof ( addr ) , AF_INET6 )ExpressionStatement282:3:5570:5646
971 : p = p -> nxtAssignmentExpr270:16:5318:5327
926 : memcpy ( p -> addr , addr . addr , sizeof ( nd_ipv6 ) )ExpressionStatement274:1:5407:5450
946 : return ( p -> name ) ;ReturnStatement272:3:5385:5401
950 : memcmp ( & p -> addr , & addr , sizeof ( addr ) ) == 0Condition271:6:5338:5379
976 : p -> nxtCondition270:8:5310:5315
980 : p = & h6nametable [ addr . addra . d & ( HASHNAMESIZE - 1 ) ]ExpressionStatement269:1:5251:5300
1011 : char ntop_buf [ INET6_ADDRSTRLEN ] ;IdentifierDeclStatement266:1:5182:5213
1024 : union { nd_ipv6 addr ; struct for_hash_addr { char fill [ 14 ] ; unsigned short d ; } addra ; } addr ;ClassDefStatement257:1:5034:5140
856 : char * dotp ;IdentifierDeclStatement289:3:5748:5758
905 : capdns != NULLCondition281:6:5549:5562
718 : ip6addr_stringFunction253:0:4939:6238
1020 : struct h6namemem * p ;IdentifierDeclStatement264:1:5143:5162
1028 : struct hostent * hp ;IdentifierDeclStatement256:1:5013:5031
1016 : const char * cp ;IdentifierDeclStatement265:1:5165:5179
721 -----> 768ap
721 -----> 996ap
724 -----> 734ndo
724 -----> 815ndo
724 -----> 820ndo
724 -----> 909ndo
724 -----> 915ndo
757 -----> 729 p
757 -----> 751 p
757 -----> 729p -> name
757 -----> 751p -> name
768 -----> 757cp
802 -----> 794dotp
802 -----> 800dotp
843 -----> 787 p
843 -----> 802 p
843 -----> 837 p
843 -----> 787p -> name
843 -----> 802p -> name
843 -----> 837p -> name
864 -----> 843hp
864 -----> 860hp
884 -----> 843hp
884 -----> 860hp
971 -----> 751p
971 -----> 926p
971 -----> 837p
971 -----> 915p
971 -----> 787p
971 -----> 757p
971 -----> 946p
971 -----> 950p
971 -----> 802p
971 -----> 729p
971 -----> 843p
971 -----> 976p
971 -----> 971p
980 -----> 915p
980 -----> 837p
980 -----> 751p
980 -----> 926p
980 -----> 787p
980 -----> 946p
980 -----> 729p
980 -----> 757p
980 -----> 950p
980 -----> 843p
980 -----> 802p
980 -----> 976p
980 -----> 971p
1011 -----> 768ntop_buf
1024 -----> 926addr
1024 -----> 980addr
751 -----> 734None
800 -----> 794None
815 -----> 800None
815 -----> 802None
837 -----> 820None
860 -----> 815None
860 -----> 751None
860 -----> 787None
860 -----> 843None
860 -----> 757None
860 -----> 768None
860 -----> 729None
860 -----> 837None
860 -----> 856None
905 -----> 864None
905 -----> 884None
909 -----> 905None
909 -----> 751None
909 -----> 860None
909 -----> 757None
909 -----> 768None
909 -----> 729None
950 -----> 971None
950 -----> 946None
950 -----> 976None
976 -----> 915None
976 -----> 950None
976 -----> 909None
976 -----> 926None
718 -----> 1024None
718 -----> 1020None
718 -----> 980None
718 -----> 1028None
718 -----> 1016None
718 -----> 996None
718 -----> 724None
718 -----> 1011None
718 -----> 721None
718 -----> 976None
856 -----> 802dotp
856 -----> 800dotp
856 -----> 794dotp
1020 -----> 980p
1020 -----> 976p
1020 -----> 971p
1020 -----> 950p
1020 -----> 946p
1020 -----> 926p
1020 -----> 915p
1020 -----> 843p
1020 -----> 837p
1020 -----> 787p
1020 -----> 757p
1020 -----> 751p
1020 -----> 729p
1028 -----> 884hp
1028 -----> 864hp
1028 -----> 860hp
1016 -----> 768cp
1024 -----> 996addr
996 -----> 980addr
996 -----> 950addr
996 -----> 926addr
996 -----> 884addr
996 -----> 864addr
926 -----> 915p
915 -----> 843p
843 -----> 837p
843 -----> 802p
757 -----> 751p
757 -----> 729p
----------------------------pdg--------------------------------------------------
1083 : unsigned char octetParameter320:23:6401:6419
1093 : * cp ++ = hex [ ( octet >> 0 ) & 0xf ]ExpressionStatement323:1:6459:6490
1107 : * cp ++ = hex [ ( octet >> 4 ) & 0xf ]ExpressionStatement322:1:6425:6456
1086 : char * cpParameter320:13:6391:6398
1091 : return ( cp ) ;ReturnStatement324:1:6493:6504
1080 : octet_to_hexFunction319:0:6357:6506
1083 -----> 1093octet
1083 -----> 1107octet
1086 -----> 1107cp
1093 -----> 1091cp
1107 -----> 1093cp
1080 -----> 1083None
1080 -----> 1093None
1080 -----> 1091None
1080 -----> 1086None
1080 -----> 1107None
1086 -----> 1093cp
1086 -----> 1091cp
----------------------------pdg--------------------------------------------------
1133 : const u_char * epParameter330:37:6573:6588
1257 : i = ( ep [ 4 ] << 8 ) | ep [ 5 ]ExpressionStatement337:1:6687:6711
1269 : j = ( ep [ 2 ] << 8 ) | ep [ 3 ]ExpressionStatement336:1:6660:6684
1281 : k = ( ep [ 0 ] << 8 ) | ep [ 1 ]ExpressionStatement335:1:6633:6657
1136 : netdissect_options * ndoParameter330:12:6548:6570
1144 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement352:2:7059:7125
1167 : tp -> e_nxt = ( struct enamemem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement350:1:6978:7031
1161 : tp -> e_nxt == NULLCondition351:5:7038:7054
1186 : tp -> e_addr2 = ( u_short ) kExpressionStatement349:1:6951:6975
1213 : tp = tp -> e_nxtExpressionStatement346:3:6880:6894
1202 : tp -> e_addr0 = ( u_short ) iExpressionStatement347:1:6897:6921
1219 : return tp ;ReturnStatement344:3:6859:6868
1221 : tp -> e_addr0 == i && tp -> e_addr1 == j && tp -> e_addr2 == kCondition341:6:6786:6853
1194 : tp -> e_addr1 = ( u_short ) jExpressionStatement348:1:6924:6948
1141 : return tp ;ReturnStatement354:1:7129:7138
1239 : tp -> e_nxtCondition340:8:6769:6777
1243 : tp = & enametable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement339:1:6715:6759
1130 : lookup_ememFunction329:0:6511:7140
1297 : u_int i , j , k ;IdentifierDeclStatement332:1:6594:6607
1293 : struct enamemem * tp ;IdentifierDeclStatement333:1:6610:6629
1133 -----> 1257ep
1133 -----> 1269ep
1133 -----> 1281ep
1136 -----> 1144ndo
1167 -----> 1161tp -> e_nxt
1167 -----> 1161 tp
1186 -----> 1167 tp
1213 -----> 1202tp
1213 -----> 1219tp
1213 -----> 1221tp
1213 -----> 1186tp
1213 -----> 1167tp
1213 -----> 1194tp
1213 -----> 1161tp
1213 -----> 1141tp
1213 -----> 1239tp
1213 -----> 1213tp
1243 -----> 1202tp
1243 -----> 1213tp
1243 -----> 1141tp
1243 -----> 1219tp
1243 -----> 1221tp
1243 -----> 1186tp
1243 -----> 1194tp
1243 -----> 1239tp
1243 -----> 1161tp
1243 -----> 1167tp
1257 -----> 1202i
1257 -----> 1221i
1257 -----> 1243i
1269 -----> 1194j
1269 -----> 1221j
1269 -----> 1243j
1281 -----> 1186k
1281 -----> 1221k
1161 -----> 1144None
1221 -----> 1239None
1221 -----> 1219None
1221 -----> 1213None
1239 -----> 1221None
1239 -----> 1186None
1239 -----> 1167None
1239 -----> 1202None
1239 -----> 1194None
1239 -----> 1161None
1239 -----> 1141None
1130 -----> 1136None
1130 -----> 1297None
1130 -----> 1257None
1130 -----> 1133None
1130 -----> 1293None
1130 -----> 1239None
1130 -----> 1281None
1130 -----> 1243None
1130 -----> 1269None
1297 -----> 1281k
1297 -----> 1221k
1297 -----> 1269j
1297 -----> 1221j
1297 -----> 1257i
1297 -----> 1221i
1293 -----> 1243tp
1293 -----> 1239tp
1293 -----> 1221tp
1293 -----> 1219tp
1293 -----> 1213tp
1293 -----> 1202tp
1293 -----> 1194tp
1293 -----> 1186tp
1293 -----> 1167tp
1293 -----> 1161tp
1293 -----> 1141tp
1202 -----> 1194tp
1194 -----> 1186tp
1186 -----> 1167tp
1167 -----> 1161tp
1167 -----> 1141tp
----------------------------pdg--------------------------------------------------
1336 : const unsigned int nlenParameter361:4:7236:7258
1392 : tp -> bs_nbytes = nlenExpressionStatement398:1:8087:8107
1398 : memcpy ( tp -> bs_bytes , bs , nlen )ExpressionStatement397:1:8054:8084
1435 : tp -> bs_bytes = ( u_char * ) calloc ( 1 , nlen )ExpressionStatement392:1:7906:7947
1485 : nlen == tp -> bs_nbytes && tp -> bs_addr0 == i && tp -> bs_addr1 == j && tp -> bs_addr2 == k && memcmp ( ( const char * ) bs , ( const char * ) ( tp -> bs_bytes ) , nlen ) == 0Condition379:6:7599:7775
1587 : nlen >= 4Condition370:12:7417:7425
1628 : nlen >= 6Condition366:5:7308:7316
1339 : const u_char * bsParameter360:43:7214:7229
1563 : j = ( bs [ 2 ] << 8 ) | bs [ 3 ]ExpressionStatement372:2:7460:7484
1575 : k = ( bs [ 0 ] << 8 ) | bs [ 1 ]ExpressionStatement371:2:7432:7456
1592 : i = ( bs [ 4 ] << 8 ) | bs [ 5 ]ExpressionStatement369:2:7379:7403
1604 : j = ( bs [ 2 ] << 8 ) | bs [ 3 ]ExpressionStatement368:2:7351:7375
1616 : k = ( bs [ 0 ] << 8 ) | bs [ 1 ]ExpressionStatement367:2:7323:7347
1342 : netdissect_options * ndoParameter360:18:7189:7211
1350 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement401:2:8194:8266
1412 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement394:2:7978:8050
1373 : tp -> bs_nxt = ( struct bsnamemem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement399:1:8110:8165
1367 : tp -> bs_nxt == NULLCondition400:5:8172:8189
1429 : tp -> bs_bytes == NULLCondition393:5:7954:7973
1477 : tp = tp -> bs_nxtExpressionStatement386:3:7802:7817
1458 : tp -> bs_addr1 = ( u_short ) jExpressionStatement389:1:7849:7874
1466 : tp -> bs_addr0 = ( u_short ) iExpressionStatement388:1:7821:7846
1483 : return tp ;ReturnStatement384:3:7781:7790
1450 : tp -> bs_addr2 = ( u_short ) kExpressionStatement390:1:7877:7902
1347 : return tp ;ReturnStatement404:1:8270:8279
1528 : tp -> bs_nxtCondition378:8:7581:7590
1532 : tp = & bytestringtable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement377:1:7522:7571
1550 : i = j = k = 0ExpressionStatement375:2:7505:7518
1559 : i = 0ExpressionStatement373:2:7488:7493
1333 : lookup_bytestringFunction359:0:7145:8281
1632 : u_int i , j , k ;IdentifierDeclStatement364:1:7287:7300
1642 : struct bsnamemem * tp ;IdentifierDeclStatement363:1:7264:7284
1336 -----> 1392nlen
1336 -----> 1398nlen
1336 -----> 1435nlen
1336 -----> 1485nlen
1336 -----> 1587nlen
1336 -----> 1628nlen
1339 -----> 1398bs
1339 -----> 1485bs
1339 -----> 1563bs
1339 -----> 1575bs
1339 -----> 1592bs
1339 -----> 1604bs
1339 -----> 1616bs
1342 -----> 1350ndo
1342 -----> 1412ndo
1373 -----> 1367tp -> bs_nxt
1373 -----> 1367 tp
1392 -----> 1373 tp
1435 -----> 1398 tp
1435 -----> 1429 tp
1435 -----> 1398tp -> bs_bytes
1435 -----> 1429tp -> bs_bytes
1477 -----> 1429tp
1477 -----> 1373tp
1477 -----> 1458tp
1477 -----> 1466tp
1477 -----> 1483tp
1477 -----> 1485tp
1477 -----> 1450tp
1477 -----> 1392tp
1477 -----> 1398tp
1477 -----> 1367tp
1477 -----> 1435tp
1477 -----> 1347tp
1477 -----> 1528tp
1477 -----> 1477tp
1532 -----> 1466tp
1532 -----> 1429tp
1532 -----> 1373tp
1532 -----> 1398tp
1532 -----> 1347tp
1532 -----> 1477tp
1532 -----> 1450tp
1532 -----> 1483tp
1532 -----> 1435tp
1532 -----> 1367tp
1532 -----> 1485tp
1532 -----> 1392tp
1532 -----> 1528tp
1532 -----> 1458tp
1550 -----> 1450k
1550 -----> 1485k
1550 -----> 1485j
1550 -----> 1532j
1550 -----> 1458j
1550 -----> 1466i
1550 -----> 1485i
1550 -----> 1532i
1559 -----> 1466i
1559 -----> 1485i
1559 -----> 1532i
1563 -----> 1458j
1563 -----> 1485j
1563 -----> 1532j
1575 -----> 1450k
1575 -----> 1485k
1592 -----> 1466i
1592 -----> 1485i
1592 -----> 1532i
1604 -----> 1458j
1604 -----> 1485j
1604 -----> 1532j
1616 -----> 1450k
1616 -----> 1485k
1367 -----> 1350None
1429 -----> 1412None
1485 -----> 1483None
1485 -----> 1477None
1485 -----> 1528None
1528 -----> 1398None
1528 -----> 1347None
1528 -----> 1373None
1528 -----> 1458None
1528 -----> 1392None
1528 -----> 1367None
1528 -----> 1485None
1528 -----> 1429None
1528 -----> 1466None
1528 -----> 1435None
1528 -----> 1450None
1587 -----> 1559None
1587 -----> 1563None
1587 -----> 1550None
1587 -----> 1575None
1628 -----> 1604None
1628 -----> 1587None
1628 -----> 1616None
1628 -----> 1592None
1333 -----> 1532None
1333 -----> 1342None
1333 -----> 1336None
1333 -----> 1528None
1333 -----> 1632None
1333 -----> 1628None
1333 -----> 1339None
1333 -----> 1642None
1632 -----> 1616k
1632 -----> 1575k
1632 -----> 1550k
1632 -----> 1485k
1632 -----> 1604j
1632 -----> 1563j
1632 -----> 1550j
1632 -----> 1485j
1632 -----> 1592i
1632 -----> 1559i
1632 -----> 1550i
1632 -----> 1485i
1642 -----> 1532tp
1642 -----> 1528tp
1642 -----> 1485tp
1642 -----> 1483tp
1642 -----> 1477tp
1642 -----> 1466tp
1642 -----> 1458tp
1642 -----> 1450tp
1642 -----> 1435tp
1642 -----> 1429tp
1642 -----> 1398tp
1642 -----> 1392tp
1642 -----> 1373tp
1642 -----> 1367tp
1642 -----> 1347tp
1466 -----> 1458tp
1458 -----> 1450tp
1450 -----> 1435tp
1435 -----> 1429tp
1435 -----> 1398tp
1398 -----> 1392tp
1392 -----> 1373tp
1373 -----> 1367tp
1373 -----> 1347tp
----------------------------pdg--------------------------------------------------
1679 : u_int nsap_lengthParameter411:5:8373:8389
1735 : memcpy ( ( char * ) & tp -> e_nsap [ 1 ] , ( const char * ) nsap , nsap_length )ExpressionStatement443:1:9208:9271
1756 : tp -> e_nsap [ 0 ] = ( u_char ) nsap_lengthExpressionStatement442:1:9169:9204
1790 : tp -> e_nsap = ( u_char * ) malloc ( nsap_length + 1 )ExpressionStatement439:1:9025:9071
1840 : nsap_length == tp -> e_nsap [ 0 ] && tp -> e_addr0 == i && tp -> e_addr1 == j && tp -> e_addr2 == k && memcmp ( ( const char * ) nsap , ( char * ) & ( tp -> e_nsap [ 1 ] ) , nsap_length ) == 0Condition427:6:8712:8900
1954 : ensap = nsap + nsap_length - 6ExpressionStatement418:2:8481:8511
1962 : nsap_length > 6Condition417:5:8460:8474
1682 : const u_char * nsapParameter410:37:8348:8365
1685 : netdissect_options * ndoParameter410:12:8323:8345
1693 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement446:2:9355:9421
1767 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: malloc" , __func__ )ExpressionStatement441:2:9100:9166
1716 : tp -> e_nxt = ( struct enamemem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement444:1:9274:9327
1710 : tp -> e_nxt == NULLCondition445:5:9334:9350
1784 : tp -> e_nsap == NULLCondition440:5:9078:9095
1832 : tp = tp -> e_nxtExpressionStatement435:3:8927:8941
1821 : tp -> e_addr0 = ( u_short ) iExpressionStatement436:1:8944:8968
1838 : return tp ;ReturnStatement433:3:8906:8915
1813 : tp -> e_addr1 = ( u_short ) jExpressionStatement437:1:8971:8995
1805 : tp -> e_addr2 = ( u_short ) kExpressionStatement438:1:8998:9022
1889 : tp -> e_nxtCondition426:8:8695:8703
1690 : return tp ;ReturnStatement448:1:9425:9434
1893 : tp = & nsaptable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement425:1:8642:8685
1909 : i = j = k = 0ExpressionStatement423:2:8625:8638
1918 : i = ( ensap [ 4 ] << 8 ) | ensap [ 5 ]ExpressionStatement421:2:8583:8613
1930 : j = ( ensap [ 2 ] << 8 ) | ensap [ 3 ]ExpressionStatement420:2:8549:8579
1942 : k = ( ensap [ 0 ] << 8 ) | ensap [ 1 ]ExpressionStatement419:2:8515:8545
1676 : lookup_nsapFunction409:0:8286:9436
1974 : u_int i , j , k ;IdentifierDeclStatement413:1:8395:8408
1966 : const u_char * ensap ;IdentifierDeclStatement415:1:8433:8452
1970 : struct enamemem * tp ;IdentifierDeclStatement414:1:8411:8430
1679 -----> 1735nsap_length
1679 -----> 1756nsap_length
1679 -----> 1790nsap_length
1679 -----> 1840nsap_length
1679 -----> 1954nsap_length
1679 -----> 1962nsap_length
1682 -----> 1735nsap
1682 -----> 1840nsap
1682 -----> 1954nsap
1685 -----> 1693ndo
1685 -----> 1767ndo
1716 -----> 1710tp -> e_nxt
1716 -----> 1710 tp
1790 -----> 1735tp -> e_nsap
1790 -----> 1756tp -> e_nsap
1790 -----> 1784tp -> e_nsap
1790 -----> 1716 tp
1790 -----> 1735 tp
1790 -----> 1756 tp
1790 -----> 1784 tp
1832 -----> 1784tp
1832 -----> 1716tp
1832 -----> 1756tp
1832 -----> 1790tp
1832 -----> 1821tp
1832 -----> 1838tp
1832 -----> 1813tp
1832 -----> 1840tp
1832 -----> 1805tp
1832 -----> 1735tp
1832 -----> 1889tp
1832 -----> 1710tp
1832 -----> 1690tp
1832 -----> 1832tp
1893 -----> 1710tp
1893 -----> 1716tp
1893 -----> 1790tp
1893 -----> 1832tp
1893 -----> 1690tp
1893 -----> 1784tp
1893 -----> 1813tp
1893 -----> 1838tp
1893 -----> 1735tp
1893 -----> 1805tp
1893 -----> 1756tp
1893 -----> 1889tp
1893 -----> 1840tp
1893 -----> 1821tp
1909 -----> 1805k
1909 -----> 1840k
1909 -----> 1813j
1909 -----> 1840j
1909 -----> 1893j
1909 -----> 1821i
1909 -----> 1840i
1909 -----> 1893i
1918 -----> 1821i
1918 -----> 1840i
1918 -----> 1893i
1930 -----> 1813j
1930 -----> 1840j
1930 -----> 1893j
1942 -----> 1805k
1942 -----> 1840k
1954 -----> 1918ensap
1954 -----> 1930ensap
1954 -----> 1942ensap
1710 -----> 1693None
1784 -----> 1767None
1840 -----> 1832None
1840 -----> 1838None
1840 -----> 1889None
1889 -----> 1756None
1889 -----> 1813None
1889 -----> 1735None
1889 -----> 1784None
1889 -----> 1710None
1889 -----> 1821None
1889 -----> 1805None
1889 -----> 1716None
1889 -----> 1790None
1889 -----> 1840None
1889 -----> 1690None
1962 -----> 1954None
1962 -----> 1909None
1962 -----> 1918None
1962 -----> 1942None
1962 -----> 1930None
1676 -----> 1974None
1676 -----> 1966None
1676 -----> 1685None
1676 -----> 1962None
1676 -----> 1893None
1676 -----> 1889None
1676 -----> 1682None
1676 -----> 1679None
1676 -----> 1970None
1974 -----> 1942k
1974 -----> 1909k
1974 -----> 1840k
1974 -----> 1930j
1974 -----> 1909j
1974 -----> 1840j
1974 -----> 1918i
1974 -----> 1909i
1974 -----> 1840i
1966 -----> 1954ensap
1970 -----> 1893tp
1970 -----> 1889tp
1970 -----> 1840tp
1970 -----> 1838tp
1970 -----> 1832tp
1970 -----> 1821tp
1970 -----> 1813tp
1970 -----> 1805tp
1970 -----> 1790tp
1970 -----> 1784tp
1970 -----> 1756tp
1970 -----> 1735tp
1970 -----> 1716tp
1970 -----> 1710tp
1970 -----> 1690tp
1821 -----> 1813tp
1813 -----> 1805tp
1805 -----> 1790tp
1790 -----> 1784tp
1790 -----> 1756tp
1756 -----> 1735tp -> e_nsap
1756 -----> 1735tp
1735 -----> 1716tp
1716 -----> 1710tp
1716 -----> 1690tp
----------------------------pdg--------------------------------------------------
2022 : const u_char * piParameter454:40:9508:9523
2130 : j = ( pi [ 3 ] << 8 ) + pi [ 4 ]ExpressionStatement461:1:9613:9639
2142 : i = ( ( ( pi [ 0 ] << 8 ) + pi [ 1 ] ) << 8 ) + pi [ 2 ]ExpressionStatement460:1:9569:9610
2025 : netdissect_options * ndoParameter454:15:9483:9505
2033 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement474:2:9921:9987
2056 : tp -> p_nxt = ( struct protoidmem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement472:1:9838:9893
2050 : tp -> p_nxt == NULLCondition473:5:9900:9916
2075 : tp -> p_proto = ( u_short ) jExpressionStatement471:1:9811:9835
2092 : tp = tp -> p_nxtExpressionStatement469:3:9778:9792
2083 : tp -> p_oui = iExpressionStatement470:1:9795:9808
2098 : return tp ;ReturnStatement467:3:9757:9766
2030 : return tp ;ReturnStatement476:1:9991:10000
2100 : tp -> p_oui == i && tp -> p_proto == jCondition466:6:9718:9751
2112 : tp -> p_nxtCondition465:8:9701:9709
2116 : tp = & protoidtable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement464:1:9645:9691
2019 : lookup_protoidFunction453:0:9441:10002
2164 : u_int i , j ;IdentifierDeclStatement456:1:9529:9539
2160 : struct protoidmem * tp ;IdentifierDeclStatement457:1:9542:9563
2022 -----> 2130pi
2022 -----> 2142pi
2025 -----> 2033ndo
2056 -----> 2050 tp
2056 -----> 2050tp -> p_nxt
2075 -----> 2056 tp
2092 -----> 2050tp
2092 -----> 2056tp
2092 -----> 2075tp
2092 -----> 2083tp
2092 -----> 2098tp
2092 -----> 2030tp
2092 -----> 2100tp
2092 -----> 2112tp
2092 -----> 2092tp
2116 -----> 2056tp
2116 -----> 2050tp
2116 -----> 2083tp
2116 -----> 2030tp
2116 -----> 2075tp
2116 -----> 2092tp
2116 -----> 2098tp
2116 -----> 2112tp
2116 -----> 2100tp
2130 -----> 2075j
2130 -----> 2100j
2130 -----> 2116j
2142 -----> 2083i
2142 -----> 2100i
2142 -----> 2116i
2050 -----> 2033None
2100 -----> 2092None
2100 -----> 2112None
2100 -----> 2098None
2112 -----> 2100None
2112 -----> 2056None
2112 -----> 2030None
2112 -----> 2050None
2112 -----> 2083None
2112 -----> 2075None
2019 -----> 2116None
2019 -----> 2112None
2019 -----> 2142None
2019 -----> 2164None
2019 -----> 2022None
2019 -----> 2160None
2019 -----> 2130None
2019 -----> 2025None
2164 -----> 2130j
2164 -----> 2100j
2164 -----> 2142i
2164 -----> 2100i
2160 -----> 2116tp
2160 -----> 2112tp
2160 -----> 2100tp
2160 -----> 2098tp
2160 -----> 2092tp
2160 -----> 2083tp
2160 -----> 2075tp
2160 -----> 2056tp
2160 -----> 2050tp
2160 -----> 2030tp
2083 -----> 2075tp
2075 -----> 2056tp
2056 -----> 2050tp
2056 -----> 2030tp
----------------------------pdg--------------------------------------------------
2198 : const unsigned char * epParameter480:38:10056:10078
2323 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement509:1:10609:10637
2338 : oui = EXTRACT_BE_U_3 ( ep )ExpressionStatement508:1:10582:10606
2407 : memcpy ( & ea , ep , MAC48_LEN )ExpressionStatement497:2:10324:10351
2444 : tp = lookup_emem ( ndo , ep )ExpressionStatement488:1:10156:10181
2201 : netdissect_options * ndoParameter480:13:10031:10053
2211 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement522:2:10909:10986
2282 : ! ndo -> ndo_nflagCondition515:5:10721:10735
2360 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf2)" , __func__ )ExpressionStatement501:4:10453:10530
2429 : ! ndo -> ndo_nflagCondition492:5:10253:10267
2234 : tp -> e_name = strdup ( buf )ExpressionStatement520:1:10856:10880
2206 : return ( tp -> e_name ) ;ReturnStatement524:1:10989:11008
2228 : tp -> e_name == NULLCondition521:5:10887:10904
2290 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement512:2:10682:10710
2247 : * cp = '\0'ExpressionStatement519:2:10843:10853
2254 : snprintf ( cp , BUFSIZE - ( 2 + 5 * 3 ) , " (oui %s)" , tok2str ( oui_values , "Unknown" , oui ) )ExpressionStatement516:2:10742:10831
2305 : * cp ++ = ':'ExpressionStatement511:2:10667:10678
2319 : i = 5 ;ForInit510:6:10645:10650
2313 : -- i >= 0Condition510:13:10652:10659
2347 : cp = bufExpressionStatement507:1:10571:10579
2383 : tp -> e_name = strdup ( buf2 )ExpressionStatement499:3:10395:10420
2355 : return ( tp -> e_name ) ;ReturnStatement503:3:10535:10554
2377 : tp -> e_name == NULLCondition500:7:10429:10446
2424 : char buf2 [ BUFSIZE ] ;IdentifierDeclStatement493:2:10274:10292
2394 : ether_ntohost ( buf2 , & ea ) == 0Condition498:6:10359:10387
2436 : return ( tp -> e_name ) ;ReturnStatement490:2:10202:10221
2440 : tp -> e_nameCondition489:5:10188:10197
2455 : char buf [ BUFSIZE ] ;IdentifierDeclStatement486:1:10135:10152
2420 : struct ether_addr ea ;IdentifierDeclStatement495:2:10299:10319
2195 : mac48_stringFunction479:0:10005:11010
2468 : char * cp ;IdentifierDeclStatement483:1:10092:10100
2472 : int i ;IdentifierDeclStatement482:1:10084:10089
2460 : int oui ;IdentifierDeclStatement485:1:10125:10132
2464 : struct enamemem * tp ;IdentifierDeclStatement484:1:10103:10122
2198 -----> 2323ep
2198 -----> 2338ep
2198 -----> 2407ep
2198 -----> 2444ep
2201 -----> 2211ndo
2201 -----> 2282ndo
2201 -----> 2360ndo
2201 -----> 2429ndo
2201 -----> 2444ndo
2234 -----> 2206 tp
2234 -----> 2228 tp
2234 -----> 2206tp -> e_name
2234 -----> 2228tp -> e_name
2290 -----> 2247cp
2290 -----> 2254cp
2290 -----> 2305cp
2290 -----> 2290ep
2305 -----> 2290cp
2319 -----> 2313i
2323 -----> 2247cp
2323 -----> 2254cp
2323 -----> 2305cp
2323 -----> 2290ep
2338 -----> 2254oui
2347 -----> 2323cp
2383 -----> 2355 tp
2383 -----> 2377 tp
2383 -----> 2355tp -> e_name
2383 -----> 2377tp -> e_name
2424 -----> 2383buf2
2424 -----> 2394buf2
2444 -----> 2206tp
2444 -----> 2228tp
2444 -----> 2234tp
2444 -----> 2355tp
2444 -----> 2377tp
2444 -----> 2383tp
2444 -----> 2436tp
2444 -----> 2440tp
2455 -----> 2234buf
2455 -----> 2347buf
2228 -----> 2211None
2282 -----> 2247None
2282 -----> 2254None
2313 -----> 2305None
2313 -----> 2290None
2377 -----> 2360None
2394 -----> 2338None
2394 -----> 2383None
2394 -----> 2355None
2394 -----> 2347None
2394 -----> 2282None
2394 -----> 2234None
2394 -----> 2323None
2394 -----> 2319None
2394 -----> 2228None
2394 -----> 2377None
2394 -----> 2313None
2394 -----> 2206None
2429 -----> 2338None
2429 -----> 2424None
2429 -----> 2347None
2429 -----> 2282None
2429 -----> 2394None
2429 -----> 2234None
2429 -----> 2323None
2429 -----> 2319None
2429 -----> 2228None
2429 -----> 2407None
2429 -----> 2420None
2429 -----> 2313None
2429 -----> 2206None
2440 -----> 2436None
2440 -----> 2429None
2195 -----> 2444None
2195 -----> 2468None
2195 -----> 2198None
2195 -----> 2472None
2195 -----> 2460None
2195 -----> 2464None
2195 -----> 2455None
2195 -----> 2201None
2195 -----> 2440None
2198 -----> 2290ep
2420 -----> 2407ea
2420 -----> 2394ea
2468 -----> 2347cp
2468 -----> 2323cp
2468 -----> 2305cp
2468 -----> 2290cp
2468 -----> 2254cp
2468 -----> 2247cp
2472 -----> 2319i
2472 -----> 2313i
2460 -----> 2338oui
2464 -----> 2444tp
2464 -----> 2440tp
2464 -----> 2436tp
2464 -----> 2383tp
2464 -----> 2377tp
2464 -----> 2355tp
2464 -----> 2234tp
2464 -----> 2228tp
2464 -----> 2206tp
2407 -----> 2394ea
2383 -----> 2377tp
2234 -----> 2228tp
2234 -----> 2206tp
----------------------------pdg--------------------------------------------------
2512 : const unsigned char * epParameter528:38:11064:11086
2520 : return ( linkaddr_string ( ndo , ep , LINKADDR_EUI64 , EUI64_LEN ) ) ;ReturnStatement530:1:11092:11152
2515 : netdissect_options * ndoParameter528:13:11039:11061
2509 : eui64_stringFunction527:0:11013:11154
2512 -----> 2520ep
2515 -----> 2520ndo
2509 -----> 2515None
2509 -----> 2512None
2509 -----> 2520None
----------------------------pdg--------------------------------------------------
2543 : const unsigned char * epParameter535:40:11211:11233
2610 : cp = octet_to_hex ( cp , * ( ep + i - 1 ) )ExpressionStatement549:2:11457:11493
2651 : tp = lookup_bytestring ( ndo , ep , len )ExpressionStatement543:1:11333:11369
2546 : netdissect_options * ndoParameter535:15:11186:11208
2556 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement558:2:11592:11669
2579 : tp -> bs_name = strdup ( buf )ExpressionStatement556:1:11537:11562
2551 : return ( tp -> bs_name ) ;ReturnStatement561:1:11673:11693
2573 : tp -> bs_name == NULLCondition557:5:11569:11587
2596 : cp --ExpressionStatement552:1:11514:11519
2590 : * cp = '\0'ExpressionStatement554:1:11523:11533
2602 : * cp ++ = ':'ExpressionStatement550:2:11497:11508
2634 : i = len ;ForInit548:6:11431:11438
2630 : i > 0Condition548:15:11440:11444
2638 : cp = bufExpressionStatement547:1:11415:11423
2643 : return ( tp -> bs_name ) ;ReturnStatement545:2:11391:11411
2647 : tp -> bs_nameCondition544:5:11376:11386
2664 : char buf [ BUFSIZE ] ;IdentifierDeclStatement541:1:11312:11329
2681 : const unsigned int len = 8 ;IdentifierDeclStatement537:1:11239:11265
2627 : -- iUnaryExpression548:23:11448:11450
2540 : eui64le_stringFunction534:0:11158:11695
2673 : char * cp ;IdentifierDeclStatement539:1:11278:11286
2677 : u_int i ;IdentifierDeclStatement538:1:11268:11275
2669 : struct bsnamemem * tp ;IdentifierDeclStatement540:1:11289:11309
2543 -----> 2610ep
2543 -----> 2651ep
2546 -----> 2556ndo
2546 -----> 2651ndo
2579 -----> 2551tp -> bs_name
2579 -----> 2573tp -> bs_name
2579 -----> 2551 tp
2579 -----> 2573 tp
2596 -----> 2590cp
2602 -----> 2596cp
2602 -----> 2610cp
2610 -----> 2602cp
2634 -----> 2610i
2634 -----> 2630i
2638 -----> 2596cp
2638 -----> 2610cp
2651 -----> 2551tp
2651 -----> 2573tp
2651 -----> 2579tp
2651 -----> 2643tp
2651 -----> 2647tp
2664 -----> 2579buf
2664 -----> 2638buf
2681 -----> 2634len
2681 -----> 2651len
2573 -----> 2556None
2630 -----> 2627None
2630 -----> 2602None
2630 -----> 2610None
2647 -----> 2634None
2647 -----> 2551None
2647 -----> 2638None
2647 -----> 2630None
2647 -----> 2643None
2647 -----> 2596None
2647 -----> 2579None
2647 -----> 2573None
2647 -----> 2590None
2540 -----> 2543None
2540 -----> 2651None
2540 -----> 2546None
2540 -----> 2673None
2540 -----> 2664None
2540 -----> 2677None
2540 -----> 2647None
2540 -----> 2669None
2540 -----> 2681None
2673 -----> 2638cp
2673 -----> 2610cp
2673 -----> 2602cp
2673 -----> 2596cp
2673 -----> 2590cp
2677 -----> 2634i
2677 -----> 2630i
2669 -----> 2651tp
2669 -----> 2647tp
2669 -----> 2643tp
2669 -----> 2579tp
2669 -----> 2573tp
2669 -----> 2551tp
2579 -----> 2573tp
2579 -----> 2551tp
----------------------------pdg--------------------------------------------------
2715 : const unsigned int lenParameter566:27:11804:11825
2771 : i = len - 1 ;ForInit590:6:12330:12339
2816 : tp -> bs_name = cp = ( char * ) malloc ( len * 3 )ExpressionStatement585:1:12149:12189
2842 : tp = lookup_bytestring ( ndo , ep , len )ExpressionStatement581:1:12067:12103
2856 : return ( q922_string ( ndo , ep , len ) ) ;ReturnStatement579:2:12029:12063
2881 : type == LINKADDR_MAC48 && len == MAC48_LENCondition575:5:11918:11959
2892 : len == 0Condition572:5:11880:11887
2718 : const unsigned int typeParameter566:2:11779:11801
2867 : type == LINKADDR_FRELAYCondition578:5:12002:12024
2721 : const unsigned char * epParameter565:41:11752:11774
2777 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement589:1:12294:12322
2872 : return ( mac48_string ( ndo , ep ) ) ;ReturnStatement576:2:11964:11994
2724 : netdissect_options * ndoParameter565:16:11727:11749
2793 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: malloc" , __func__ )ExpressionStatement587:2:12219:12291
2741 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement592:2:12373:12401
2733 : * cp = '\0'ExpressionStatement594:1:12407:12417
2756 : * cp ++ = ':'ExpressionStatement591:2:12358:12369
2767 : i > 0Condition590:17:12341:12345
2729 : return ( tp -> bs_name ) ;ReturnStatement595:1:12420:12440
2810 : tp -> bs_name == NULLCondition586:5:12196:12214
2834 : return ( tp -> bs_name ) ;ReturnStatement583:2:12125:12145
2838 : tp -> bs_nameCondition582:5:12110:12120
2764 : -- iUnaryExpression590:25:12349:12351
2890 : return ( "<empty>" ) ;ReturnStatement573:2:11892:11910
2712 : linkaddr_stringFunction564:0:11698:12442
2904 : u_int i ;IdentifierDeclStatement568:1:11831:11838
2896 : struct bsnamemem * tp ;IdentifierDeclStatement570:1:11852:11872
2900 : char * cp ;IdentifierDeclStatement569:1:11841:11849
2715 -----> 2771len
2715 -----> 2816len
2715 -----> 2842len
2715 -----> 2856len
2715 -----> 2881len
2715 -----> 2892len
2718 -----> 2867type
2718 -----> 2881type
2721 -----> 2777ep
2721 -----> 2842ep
2721 -----> 2856ep
2721 -----> 2872ep
2724 -----> 2793ndo
2724 -----> 2842ndo
2724 -----> 2856ndo
2724 -----> 2872ndo
2741 -----> 2733cp
2741 -----> 2756cp
2741 -----> 2741ep
2756 -----> 2741cp
2771 -----> 2767i
2777 -----> 2733cp
2777 -----> 2756cp
2777 -----> 2741ep
2816 -----> 2729tp -> bs_name
2816 -----> 2810tp -> bs_name
2816 -----> 2777cp
2816 -----> 2729 tp
2816 -----> 2810 tp
2842 -----> 2729tp
2842 -----> 2810tp
2842 -----> 2816tp
2842 -----> 2834tp
2842 -----> 2838tp
2767 -----> 2764None
2767 -----> 2756None
2767 -----> 2741None
2810 -----> 2793None
2838 -----> 2834None
2838 -----> 2810None
2838 -----> 2771None
2838 -----> 2777None
2838 -----> 2767None
2838 -----> 2729None
2838 -----> 2816None
2838 -----> 2733None
2867 -----> 2842None
2867 -----> 2838None
2867 -----> 2856None
2881 -----> 2867None
2881 -----> 2872None
2892 -----> 2890None
2892 -----> 2881None
2712 -----> 2892None
2712 -----> 2721None
2712 -----> 2724None
2712 -----> 2904None
2712 -----> 2896None
2712 -----> 2900None
2712 -----> 2718None
2712 -----> 2715None
2721 -----> 2741ep
2904 -----> 2771i
2904 -----> 2767i
2896 -----> 2842tp
2896 -----> 2838tp
2896 -----> 2834tp
2896 -----> 2816tp
2896 -----> 2810tp
2896 -----> 2729tp
2900 -----> 2816cp
2900 -----> 2777cp
2900 -----> 2756cp
2900 -----> 2741cp
2900 -----> 2733cp
2816 -----> 2810tp
2816 -----> 2729tp
----------------------------pdg--------------------------------------------------
2939 : u_int nsap_lengthParameter601:8:12563:12579
2972 : ( ( nsap_idx & 1 ) == 0 ) && ( nsap_idx + 1 < nsap_length )Condition621:6:13110:13169
3002 : nsap_idx < nsap_lengthCondition619:20:13032:13053
3058 : tp = lookup_nsap ( ndo , nsap , nsap_length )ExpressionStatement610:1:12740:12780
3074 : nsap_length < 1 || nsap_length > ISONSAP_MAX_LENGTHCondition607:5:12640:12690
2942 : const unsigned char * nsapParameter600:40:12528:12552
2984 : cp = octet_to_hex ( cp , * nsap ++ )ExpressionStatement620:2:13072:13102
2945 : netdissect_options * ndoParameter600:15:12503:12525
3011 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: malloc" , __func__ )ExpressionStatement616:2:12937:13009
2964 : * cp ++ = '.'ExpressionStatement623:3:13177:13188
2954 : * cp = '\0'ExpressionStatement626:1:13198:13208
2999 : nsap_idx ++IncDecOp619:44:13056:13065
3006 : nsap_idx = 0 ;ForInit619:6:13018:13030
3032 : tp -> e_name = cp = ( char * ) malloc ( sizeof ( "xx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xx" ) )ExpressionStatement614:1:12822:12916
3028 : cp == NULLCondition615:5:12923:12932
2950 : return ( tp -> e_name ) ;ReturnStatement627:1:13211:13230
3050 : return tp -> e_name ;ReturnStatement612:2:12801:12818
3054 : tp -> e_nameCondition611:5:12787:12796
3072 : return ( "isonsap_string: illegal length" ) ;ReturnStatement608:2:12695:12736
2936 : isonsap_stringFunction599:0:12475:13232
3090 : u_int nsap_idx ;IdentifierDeclStatement603:1:12585:12599
3082 : struct enamemem * tp ;IdentifierDeclStatement605:1:12613:12632
3086 : char * cp ;IdentifierDeclStatement604:1:12602:12610
2939 -----> 2972nsap_length
2939 -----> 3002nsap_length
2939 -----> 3058nsap_length
2939 -----> 3074nsap_length
2942 -----> 2984nsap
2942 -----> 3058nsap
2945 -----> 3011ndo
2945 -----> 3058ndo
2964 -----> 2954cp
2964 -----> 2984cp
2984 -----> 2954cp
2984 -----> 2964cp
2984 -----> 2984cp
2984 -----> 2984nsap
2999 -----> 2972nsap_idx
2999 -----> 3002nsap_idx
2999 -----> 2999nsap_idx
3006 -----> 2972nsap_idx
3006 -----> 2999nsap_idx
3006 -----> 3002nsap_idx
3032 -----> 2954cp
3032 -----> 2984cp
3032 -----> 3028cp
3032 -----> 2950 tp
3032 -----> 2950tp -> e_name
3058 -----> 2950tp
3058 -----> 3032tp
3058 -----> 3050tp
3058 -----> 3054tp
2972 -----> 2964None
3002 -----> 2972None
3002 -----> 2984None
3002 -----> 2999None
3028 -----> 3011None
3054 -----> 2950None
3054 -----> 3032None
3054 -----> 3006None
3054 -----> 3050None
3054 -----> 2954None
3054 -----> 3028None
3054 -----> 3002None
3074 -----> 3058None
3074 -----> 3072None
3074 -----> 3054None
2936 -----> 3090None
2936 -----> 2942None
2936 -----> 3082None
2936 -----> 2945None
2936 -----> 2939None
2936 -----> 3074None
2936 -----> 3086None
3090 -----> 3006nsap_idx
3090 -----> 3002nsap_idx
3090 -----> 2999nsap_idx
3090 -----> 2972nsap_idx
3082 -----> 3058tp
3082 -----> 3054tp
3082 -----> 3050tp
3082 -----> 3032tp
3082 -----> 2950tp
3086 -----> 3032cp
3086 -----> 3028cp
3086 -----> 2984cp
3086 -----> 2964cp
3086 -----> 2954cp
3032 -----> 2950tp
----------------------------pdg--------------------------------------------------
3120 : u_short portParameter631:40:13288:13299
3241 : unsigned int i = port ;IdentifierDeclStatement634:1:13327:13348
3123 : netdissect_options * ndoParameter631:15:13263:13285
3133 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement647:2:13631:13708
3184 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement642:1:13508:13534
3156 : tp -> name = strdup ( buf )ExpressionStatement645:1:13582:13604
3128 : return ( tp -> name ) ;ReturnStatement649:1:13711:13728
3150 : tp -> name == NULLCondition646:5:13611:13626
3213 : tp = tp -> nxtAssignmentExpr637:55:13434:13445
3195 : tp -> addr = iExpressionStatement641:1:13493:13505
3203 : return ( tp -> name ) ;ReturnStatement639:3:13472:13489
3207 : tp -> addr == iCondition638:6:13454:13466
3218 : tp -> nxtCondition637:46:13425:13431
3222 : tp = & tporttable [ i & ( HASHNAMESIZE - 1 ) ] ;ForInit637:6:13385:13423
3234 : char buf [ sizeof ( "00000" ) ] ;IdentifierDeclStatement635:1:13351:13376
3167 : ( void ) snprintf ( buf , sizeof ( buf ) , "%u" , i )ExpressionStatement644:1:13538:13579
3117 : tcpport_stringFunction630:0:13235:13730
3248 : struct hnamemem * tp ;IdentifierDeclStatement633:1:13305:13324
3120 -----> 3241port
3123 -----> 3133ndo
3123 -----> 3184ndo
3156 -----> 3128tp -> name
3156 -----> 3150tp -> name
3156 -----> 3128 tp
3156 -----> 3150 tp
3213 -----> 3128tp
3213 -----> 3184tp
3213 -----> 3195tp
3213 -----> 3150tp
3213 -----> 3203tp
3213 -----> 3207tp
3213 -----> 3156tp
3213 -----> 3218tp
3213 -----> 3213tp
3222 -----> 3184tp
3222 -----> 3156tp
3222 -----> 3195tp
3222 -----> 3150tp
3222 -----> 3128tp
3222 -----> 3203tp
3222 -----> 3207tp
3222 -----> 3213tp
3222 -----> 3218tp
3234 -----> 3156buf
3234 -----> 3167buf
3241 -----> 3167i
3241 -----> 3195i
3241 -----> 3207i
3241 -----> 3222i
3150 -----> 3133None
3207 -----> 3218None
3207 -----> 3213None
3207 -----> 3203None
3218 -----> 3156None
3218 -----> 3150None
3218 -----> 3184None
3218 -----> 3167None
3218 -----> 3195None
3218 -----> 3207None
3218 -----> 3128None
3117 -----> 3123None
3117 -----> 3234None
3117 -----> 3120None
3117 -----> 3218None
3117 -----> 3222None
3117 -----> 3248None
3117 -----> 3241None
3248 -----> 3222tp
3248 -----> 3218tp
3248 -----> 3213tp
3248 -----> 3207tp
3248 -----> 3203tp
3248 -----> 3195tp
3248 -----> 3184tp
3248 -----> 3156tp
3248 -----> 3150tp
3248 -----> 3128tp
3195 -----> 3184tp
3184 -----> 3156tp
3156 -----> 3150tp
3156 -----> 3128tp
----------------------------pdg--------------------------------------------------
3278 : u_short portParameter653:40:13786:13797
3399 : unsigned int i = port ;IdentifierDeclStatement656:1:13825:13846
3281 : netdissect_options * ndoParameter653:15:13761:13783
3291 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement669:2:14129:14206
3342 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement664:1:14006:14032
3314 : tp -> name = strdup ( buf )ExpressionStatement667:1:14080:14102
3286 : return ( tp -> name ) ;ReturnStatement671:1:14209:14226
3308 : tp -> name == NULLCondition668:5:14109:14124
3371 : tp = tp -> nxtAssignmentExpr659:55:13932:13943
3353 : tp -> addr = iExpressionStatement663:1:13991:14003
3361 : return ( tp -> name ) ;ReturnStatement661:3:13970:13987
3365 : tp -> addr == iCondition660:6:13952:13964
3376 : tp -> nxtCondition659:46:13923:13929
3380 : tp = & uporttable [ i & ( HASHNAMESIZE - 1 ) ] ;ForInit659:6:13883:13921
3392 : char buf [ sizeof ( "00000" ) ] ;IdentifierDeclStatement657:1:13849:13874
3325 : ( void ) snprintf ( buf , sizeof ( buf ) , "%u" , i )ExpressionStatement666:1:14036:14077
3275 : udpport_stringFunction652:0:13733:14228
3406 : struct hnamemem * tp ;IdentifierDeclStatement655:1:13803:13822
3278 -----> 3399port
3281 -----> 3291ndo
3281 -----> 3342ndo
3314 -----> 3286tp -> name
3314 -----> 3308tp -> name
3314 -----> 3286 tp
3314 -----> 3308 tp
3371 -----> 3342tp
3371 -----> 3308tp
3371 -----> 3353tp
3371 -----> 3361tp
3371 -----> 3314tp
3371 -----> 3286tp
3371 -----> 3365tp
3371 -----> 3376tp
3371 -----> 3371tp
3380 -----> 3353tp
3380 -----> 3361tp
3380 -----> 3342tp
3380 -----> 3308tp
3380 -----> 3314tp
3380 -----> 3365tp
3380 -----> 3286tp
3380 -----> 3371tp
3380 -----> 3376tp
3392 -----> 3314buf
3392 -----> 3325buf
3399 -----> 3325i
3399 -----> 3353i
3399 -----> 3365i
3399 -----> 3380i
3308 -----> 3291None
3365 -----> 3371None
3365 -----> 3361None
3365 -----> 3376None
3376 -----> 3314None
3376 -----> 3286None
3376 -----> 3342None
3376 -----> 3308None
3376 -----> 3365None
3376 -----> 3325None
3376 -----> 3353None
3275 -----> 3278None
3275 -----> 3392None
3275 -----> 3376None
3275 -----> 3281None
3275 -----> 3399None
3275 -----> 3406None
3275 -----> 3380None
3406 -----> 3380tp
3406 -----> 3376tp
3406 -----> 3371tp
3406 -----> 3365tp
3406 -----> 3361tp
3406 -----> 3353tp
3406 -----> 3342tp
3406 -----> 3314tp
3406 -----> 3308tp
3406 -----> 3286tp
3353 -----> 3342tp
3342 -----> 3314tp
3314 -----> 3308tp
3314 -----> 3286tp
----------------------------pdg--------------------------------------------------
3436 : u_short portParameter675:39:14283:14294
3545 : port = ntohs ( port )ExpressionStatement690:1:14555:14573
3615 : unsigned int i = port ;IdentifierDeclStatement679:1:14333:14354
3439 : netdissect_options * ndoParameter675:14:14258:14280
3449 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement698:2:14760:14837
3558 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement687:1:14514:14540
3472 : tp -> name = strdup ( buf )ExpressionStatement696:1:14711:14733
3444 : return ( tp -> name ) ;ReturnStatement700:1:14840:14857
3466 : tp -> name == NULLCondition697:5:14740:14755
3491 : * cp ++ = hex [ port & 0xf ]ExpressionStatement694:1:14670:14693
3483 : * cp ++ = '\0'ExpressionStatement695:1:14696:14708
3503 : * cp ++ = hex [ port >> 4 & 0xf ]ExpressionStatement693:1:14639:14667
3517 : * cp ++ = hex [ port >> 8 & 0xf ]ExpressionStatement692:1:14608:14636
3531 : * cp ++ = hex [ port >> 12 & 0xf ]ExpressionStatement691:1:14576:14605
3554 : cp = bufExpressionStatement689:1:14544:14552
3587 : tp = tp -> nxtAssignmentExpr682:56:14440:14451
3569 : tp -> addr = iExpressionStatement686:1:14499:14511
3581 : tp -> addr == iCondition683:6:14460:14472
3592 : tp -> nxtCondition682:47:14431:14437
3577 : return ( tp -> name ) ;ReturnStatement684:3:14478:14495
3596 : tp = & ipxsaptable [ i & ( HASHNAMESIZE - 1 ) ] ;ForInit682:6:14390:14429
3608 : char buf [ sizeof ( "0000" ) ] ;IdentifierDeclStatement680:1:14357:14381
3433 : ipxsap_stringFunction674:0:14231:14859
3622 : struct hnamemem * tp ;IdentifierDeclStatement678:1:14311:14330
3626 : char * cp ;IdentifierDeclStatement677:1:14300:14308
3436 -----> 3545port
3436 -----> 3615port
3439 -----> 3449ndo
3439 -----> 3558ndo
3472 -----> 3444tp -> name
3472 -----> 3466tp -> name
3472 -----> 3444 tp
3472 -----> 3466 tp
3491 -----> 3483cp
3503 -----> 3491cp
3517 -----> 3503cp
3531 -----> 3517cp
3545 -----> 3491port
3545 -----> 3503port
3545 -----> 3517port
3545 -----> 3531port
3554 -----> 3531cp
3587 -----> 3558tp
3587 -----> 3569tp
3587 -----> 3472tp
3587 -----> 3581tp
3587 -----> 3444tp
3587 -----> 3466tp
3587 -----> 3592tp
3587 -----> 3577tp
3587 -----> 3587tp
3596 -----> 3558tp
3596 -----> 3569tp
3596 -----> 3577tp
3596 -----> 3472tp
3596 -----> 3466tp
3596 -----> 3581tp
3596 -----> 3444tp
3596 -----> 3587tp
3596 -----> 3592tp
3608 -----> 3472buf
3608 -----> 3554buf
3615 -----> 3569i
3615 -----> 3581i
3615 -----> 3596i
3466 -----> 3449None
3581 -----> 3592None
3581 -----> 3577None
3581 -----> 3587None
3592 -----> 3444None
3592 -----> 3483None
3592 -----> 3558None
3592 -----> 3569None
3592 -----> 3545None
3592 -----> 3466None
3592 -----> 3472None
3592 -----> 3554None
3592 -----> 3517None
3592 -----> 3503None
3592 -----> 3491None
3592 -----> 3531None
3592 -----> 3581None
3433 -----> 3622None
3433 -----> 3615None
3433 -----> 3608None
3433 -----> 3436None
3433 -----> 3596None
3433 -----> 3626None
3433 -----> 3592None
3433 -----> 3439None
3622 -----> 3596tp
3622 -----> 3592tp
3622 -----> 3587tp
3622 -----> 3581tp
3622 -----> 3577tp
3622 -----> 3569tp
3622 -----> 3558tp
3622 -----> 3472tp
3622 -----> 3466tp
3622 -----> 3444tp
3626 -----> 3554cp
3626 -----> 3531cp
3626 -----> 3517cp
3626 -----> 3503cp
3626 -----> 3491cp
3626 -----> 3483cp
3569 -----> 3558tp
3558 -----> 3472tp
3472 -----> 3466tp
3472 -----> 3444tp
----------------------------pdg--------------------------------------------------
3663 : netdissect_options * ndoParameter704:15:14889:14911
3675 : table -> nxt = newhnamemem ( ndo )ExpressionStatement733:2:15588:15617
3693 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup" , __func__ )ExpressionStatement729:3:15488:15561
3760 : ndo -> ndo_nflagCondition723:6:15315:15328
3765 : table = table -> nxtExpressionStatement722:3:15289:15307
3771 : table -> nameCondition721:9:15273:15283
3718 : table -> name = strdup ( sv -> s_name )ExpressionStatement727:3:15424:15456
3710 : table -> name == NULLCondition728:6:15464:15482
3732 : table -> name = strdup ( buf )ExpressionStatement725:3:15385:15410
3686 : table -> addr = portExpressionStatement732:2:15566:15584
3780 : table = & uporttable [ i ]ExpressionStatement717:3:15219:15241
3801 : table = & tporttable [ i ]ExpressionStatement715:3:15148:15170
3822 : i = port & ( HASHNAMESIZE - 1 )ExpressionStatement713:2:15077:15104
3830 : int port = ntohs ( sv -> s_port ) ;IdentifierDeclStatement712:2:15045:15073
3743 : ( void ) snprintf ( buf , sizeof ( buf ) , "%d" , port )ExpressionStatement724:3:15336:15380
3844 : ( sv = getservent ( ) ) != NULLCondition711:8:15012:15038
3788 : strcmp ( sv -> s_proto , "udp" ) == 0Condition716:11:15183:15213
3809 : strcmp ( sv -> s_proto , "tcp" ) == 0Condition714:6:15112:15142
3853 : char buf [ sizeof ( "0000000000" ) ] ;IdentifierDeclStatement709:1:14971:15001
3779 : continue ;ContinueStatement719:3:15253:15261
3660 : init_servarrayFunction703:0:14862:15637
3864 : struct hnamemem * table ;IdentifierDeclStatement707:1:14938:14960
3860 : int i ;IdentifierDeclStatement708:1:14963:14968
3668 : endservent ( )ExpressionStatement735:1:15623:15635
3868 : struct servent * sv ;IdentifierDeclStatement706:1:14917:14935
3663 -----> 3675ndo
3663 -----> 3693ndo
3663 -----> 3760ndo
3675 -----> 3765 table
3675 -----> 3771 table
3675 -----> 3765table -> nxt
3718 -----> 3710 table
3718 -----> 3710table -> name
3718 -----> 3771table -> name
3732 -----> 3710 table
3732 -----> 3710table -> name
3732 -----> 3771table -> name
3765 -----> 3710table
3765 -----> 3718table
3765 -----> 3675table
3765 -----> 3686table
3765 -----> 3732table
3765 -----> 3771table
3765 -----> 3765table
3780 -----> 3718table
3780 -----> 3710table
3780 -----> 3732table
3780 -----> 3765table
3780 -----> 3686table
3780 -----> 3675table
3780 -----> 3771table
3801 -----> 3732table
3801 -----> 3710table
3801 -----> 3675table
3801 -----> 3718table
3801 -----> 3686table
3801 -----> 3771table
3801 -----> 3765table
3822 -----> 3780i
3822 -----> 3801i
3830 -----> 3686port
3830 -----> 3743port
3830 -----> 3822port
3844 -----> 3718sv
3844 -----> 3788sv
3844 -----> 3809sv
3844 -----> 3830sv
3853 -----> 3732buf
3853 -----> 3743buf
3710 -----> 3693None
3760 -----> 3718None
3760 -----> 3743None
3760 -----> 3732None
3771 -----> 3765None
3788 -----> 3771None
3788 -----> 3760None
3788 -----> 3779None
3788 -----> 3710None
3788 -----> 3675None
3788 -----> 3686None
3788 -----> 3780None
3809 -----> 3771None
3809 -----> 3760None
3809 -----> 3788None
3809 -----> 3801None
3809 -----> 3710None
3809 -----> 3675None
3809 -----> 3686None
3844 -----> 3809None
3844 -----> 3822None
3844 -----> 3830None
3660 -----> 3864None
3660 -----> 3844None
3660 -----> 3860None
3660 -----> 3853None
3660 -----> 3663None
3660 -----> 3668None
3660 -----> 3868None
3864 -----> 3801table
3864 -----> 3780table
3864 -----> 3771table
3864 -----> 3765table
3864 -----> 3732table
3864 -----> 3718table
3864 -----> 3710table
3864 -----> 3686table
3864 -----> 3675table
3860 -----> 3822i
3868 -----> 3844sv
3868 -----> 3809sv
3868 -----> 3788sv
3718 -----> 3710table
3718 -----> 3686table
3686 -----> 3675table
----------------------------pdg--------------------------------------------------
3915 : netdissect_options * ndoParameter758:17:16119:16141
3922 : table -> nxt = newhnamemem ( ndo )ExpressionStatement770:2:16413:16442
3959 : table = table -> nxtExpressionStatement767:3:16320:16338
3965 : table -> nameCondition766:9:16304:16314
3948 : table -> name = eproto_db [ i ] . sExpressionStatement768:2:16342:16370
3933 : table -> addr = htons ( eproto_db [ i ] . p )ExpressionStatement769:2:16374:16409
3969 : table = & eprototable [ j ]ExpressionStatement765:2:16270:16293
3977 : int j = htons ( eproto_db [ i ] . p ) & ( HASHNAMESIZE - 1 ) ;IdentifierDeclStatement764:2:16218:16266
3997 : i ++IncDecOp763:29:16209:16211
4000 : eproto_db [ i ] . sCondition763:13:16193:16206
4006 : i = 0 ;ForInit763:6:16186:16191
3912 : init_eprotoarrayFunction757:0:16090:16447
4010 : struct hnamemem * table ;IdentifierDeclStatement761:1:16155:16177
4014 : int i ;IdentifierDeclStatement760:1:16147:16152
3915 -----> 3922ndo
3922 -----> 3959 table
3922 -----> 3965 table
3922 -----> 3959table -> nxt
3948 -----> 3965table -> name
3959 -----> 3933table
3959 -----> 3948table
3959 -----> 3922table
3959 -----> 3965table
3959 -----> 3959table
3969 -----> 3922table
3969 -----> 3933table
3969 -----> 3948table
3969 -----> 3959table
3969 -----> 3965table
3977 -----> 3969j
3997 -----> 3977i
3997 -----> 3948i
3997 -----> 3933i
3997 -----> 4000i
3997 -----> 3997i
4006 -----> 3933i
4006 -----> 3948i
4006 -----> 3977i
4006 -----> 3997i
4006 -----> 4000i
3965 -----> 3959None
4000 -----> 3969None
4000 -----> 3977None
4000 -----> 3922None
4000 -----> 3948None
4000 -----> 3933None
4000 -----> 3997None
4000 -----> 3965None
3912 -----> 4000None
3912 -----> 3915None
3912 -----> 4006None
3912 -----> 4010None
3912 -----> 4014None
4010 -----> 3969table
4010 -----> 3965table
4010 -----> 3959table
4010 -----> 3948table
4010 -----> 3933table
4010 -----> 3922table
4014 -----> 4006i
4014 -----> 4000i
4014 -----> 3997i
3948 -----> 3933table
3933 -----> 3922table
----------------------------pdg--------------------------------------------------
4049 : netdissect_options * ndoParameter788:18:16880:16902
4072 : tp = lookup_protoid ( ndo , pl -> protoid )ExpressionStatement810:2:17420:17457
4101 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(eproto_db[i].s)" , __func__ )ExpressionStatement805:3:17275:17361
4139 : tp = lookup_protoid ( ndo , protoid )ExpressionStatement802:2:17172:17205
4056 : tp -> p_name = pl -> nameExpressionStatement815:2:17504:17525
4066 : tp -> p_name != NULLCondition812:6:17468:17485
4094 : pl = protoidlist ;ForInit809:6:17374:17390
4088 : pl -> name != NULLCondition809:24:17392:17407
4124 : tp -> p_name = strdup ( eproto_db [ i ] . s )ExpressionStatement803:2:17209:17244
4118 : tp -> p_name == NULLCondition804:6:17252:17269
4187 : i ++IncDecOp798:29:17071:17073
4171 : u_short etype = htons ( eproto_db [ i ] . p ) ;IdentifierDeclStatement799:2:17080:17117
4190 : eproto_db [ i ] . sCondition798:13:17055:17068
4196 : i = 0 ;ForInit798:6:17048:17053
4218 : u_char protoid [ 5 ] ;IdentifierDeclStatement793:1:16971:16988
4150 : memcpy ( ( char * ) & protoid [ 3 ] , ( char * ) & etype , 2 )ExpressionStatement801:2:17122:17168
4200 : protoid [ 2 ] = 0ExpressionStatement797:1:17026:17040
4206 : protoid [ 1 ] = 0ExpressionStatement796:1:17009:17023
4212 : protoid [ 0 ] = 0ExpressionStatement795:1:16992:17006
4065 : continue ;ContinueStatement813:3:17491:17499
4085 : ++ plUnaryExpression809:42:17410:17413
4046 : init_protoidarrayFunction787:0:16850:17530
4231 : int i ;IdentifierDeclStatement790:1:16908:16913
4223 : const struct protoidlist * pl ;IdentifierDeclStatement792:1:16940:16968
4227 : struct protoidmem * tp ;IdentifierDeclStatement791:1:16916:16937
4049 -----> 4072ndo
4049 -----> 4101ndo
4049 -----> 4139ndo
4056 -----> 4066 tp
4056 -----> 4066tp -> p_name
4072 -----> 4056tp
4072 -----> 4066tp
4094 -----> 4056pl
4094 -----> 4072pl
4094 -----> 4088pl
4124 -----> 4066 tp
4124 -----> 4118 tp
4124 -----> 4066tp -> p_name
4124 -----> 4118tp -> p_name
4139 -----> 4118tp
4139 -----> 4124tp
4187 -----> 4124i
4187 -----> 4171i
4187 -----> 4190i
4187 -----> 4187i
4196 -----> 4124i
4196 -----> 4171i
4196 -----> 4187i
4196 -----> 4190i
4218 -----> 4139protoid
4218 -----> 4150protoid
4218 -----> 4200protoid
4218 -----> 4206protoid
4218 -----> 4212protoid
4066 -----> 4065None
4066 -----> 4085None
4066 -----> 4056None
4088 -----> 4072None
4088 -----> 4066None
4118 -----> 4101None
4190 -----> 4187None
4190 -----> 4150None
4190 -----> 4171None
4190 -----> 4124None
4190 -----> 4139None
4190 -----> 4118None
4046 -----> 4231None
4046 -----> 4212None
4046 -----> 4094None
4046 -----> 4223None
4046 -----> 4088None
4046 -----> 4049None
4046 -----> 4227None
4046 -----> 4196None
4046 -----> 4218None
4046 -----> 4200None
4046 -----> 4190None
4046 -----> 4206None
4231 -----> 4196i
4231 -----> 4190i
4231 -----> 4187i
4223 -----> 4094pl
4223 -----> 4088pl
4227 -----> 4139tp
4227 -----> 4124tp
4227 -----> 4118tp
4227 -----> 4072tp
4227 -----> 4066tp
4227 -----> 4056tp
4212 -----> 4206protoid
4206 -----> 4200protoid
4200 -----> 4150protoid
4200 -----> 4139protoid
4124 -----> 4118tp
4124 -----> 4066tp
4124 -----> 4056tp
----------------------------pdg--------------------------------------------------
4275 : netdissect_options * ndoParameter829:16:17763:17785
4294 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(name)" , __func__ )ExpressionStatement868:4:18574:18651
4368 : tp = lookup_emem ( ndo , el -> addr )ExpressionStatement855:2:18306:18337
4282 : tp -> e_name = el -> nameExpressionStatement873:2:18679:18700
4362 : tp -> e_name != NULLCondition857:6:18348:18365
4317 : tp -> e_name = strdup ( name )ExpressionStatement866:3:18516:18541
4311 : tp -> e_name == NULLCondition867:7:18550:18567
4390 : el = etherlist ;ForInit854:6:18262:18276
4341 : memcpy ( & ea , el -> addr , MAC48_LEN )ExpressionStatement864:2:18439:18472
4384 : el -> name != NULLCondition854:22:18278:18293
4394 : char name [ 256 ] ;IdentifierDeclStatement834:1:17867:17881
4328 : ether_ntohost ( name , & ea ) == 0Condition865:6:18480:18508
4381 : ++ elUnaryExpression854:40:18296:18299
4292 : continue ;ContinueStatement870:3:18656:18664
4356 : struct ether_addr ea ;IdentifierDeclStatement863:2:18415:18435
4361 : continue ;ContinueStatement858:3:18371:18379
4272 : init_etherarrayFunction828:0:17735:18705
4403 : const struct etherlist * el ;IdentifierDeclStatement831:1:17791:17817
4399 : struct enamemem * tp ;IdentifierDeclStatement832:1:17820:17839
4275 -----> 4294ndo
4275 -----> 4368ndo
4282 -----> 4362tp -> e_name
4282 -----> 4362 tp
4317 -----> 4311tp -> e_name
4317 -----> 4362tp -> e_name
4317 -----> 4311 tp
4317 -----> 4362 tp
4368 -----> 4282tp
4368 -----> 4311tp
4368 -----> 4317tp
4368 -----> 4362tp
4390 -----> 4282el
4390 -----> 4341el
4390 -----> 4368el
4390 -----> 4384el
4394 -----> 4317name
4394 -----> 4328name
4311 -----> 4294None
4328 -----> 4282None
4328 -----> 4381None
4328 -----> 4311None
4328 -----> 4292None
4328 -----> 4317None
4362 -----> 4356None
4362 -----> 4328None
4362 -----> 4341None
4362 -----> 4361None
4384 -----> 4362None
4384 -----> 4368None
4272 -----> 4275None
4272 -----> 4403None
4272 -----> 4394None
4272 -----> 4384None
4272 -----> 4390None
4272 -----> 4399None
4356 -----> 4341ea
4356 -----> 4328ea
4403 -----> 4390el
4403 -----> 4384el
4399 -----> 4368tp
4399 -----> 4362tp
4399 -----> 4317tp
4399 -----> 4311tp
4399 -----> 4282tp
4341 -----> 4328ea
4317 -----> 4311tp
----------------------------pdg--------------------------------------------------
4440 : netdissect_options * ndoParameter1098:17:26194:26216
4447 : table -> nxt = newhnamemem ( ndo )ExpressionStatement1110:2:26498:26527
4484 : table = table -> nxtExpressionStatement1107:3:26405:26423
4490 : table -> nameCondition1106:9:26389:26399
4473 : table -> name = ipxsap_db [ i ] . sExpressionStatement1108:2:26427:26455
4458 : table -> addr = htons ( ipxsap_db [ i ] . v )ExpressionStatement1109:2:26459:26494
4494 : table = & ipxsaptable [ j ]ExpressionStatement1105:2:26355:26378
4502 : u_int j = htons ( ipxsap_db [ i ] . v ) & ( HASHNAMESIZE - 1 ) ;IdentifierDeclStatement1104:2:26301:26351
4522 : i ++IncDecOp1103:37:26292:26294
4525 : ipxsap_db [ i ] . s != NULLCondition1103:13:26268:26289
4533 : i = 0 ;ForInit1103:6:26261:26266
4437 : init_ipxsaparrayFunction1097:0:26165:26532
4537 : struct hnamemem * table ;IdentifierDeclStatement1101:1:26230:26252
4541 : int i ;IdentifierDeclStatement1100:1:26222:26227
4440 -----> 4447ndo
4447 -----> 4484 table
4447 -----> 4490 table
4447 -----> 4484table -> nxt
4473 -----> 4490table -> name
4484 -----> 4447table
4484 -----> 4458table
4484 -----> 4473table
4484 -----> 4490table
4484 -----> 4484table
4494 -----> 4458table
4494 -----> 4447table
4494 -----> 4473table
4494 -----> 4484table
4494 -----> 4490table
4502 -----> 4494j
4522 -----> 4458i
4522 -----> 4473i
4522 -----> 4502i
4522 -----> 4525i
4522 -----> 4522i
4533 -----> 4473i
4533 -----> 4502i
4533 -----> 4458i
4533 -----> 4525i
4533 -----> 4522i
4490 -----> 4484None
4525 -----> 4494None
4525 -----> 4490None
4525 -----> 4473None
4525 -----> 4458None
4525 -----> 4502None
4525 -----> 4522None
4525 -----> 4447None
4437 -----> 4440None
4437 -----> 4533None
4437 -----> 4537None
4437 -----> 4541None
4437 -----> 4525None
4537 -----> 4494table
4537 -----> 4490table
4537 -----> 4484table
4537 -----> 4473table
4537 -----> 4458table
4537 -----> 4447table
4541 -----> 4533i
4541 -----> 4525i
4541 -----> 4522i
4473 -----> 4458table
4458 -----> 4447table
----------------------------pdg--------------------------------------------------
4570 : unsigned int maskParameter1116:64:26605:26621
4624 : f_netmask = maskExpressionStatement1120:2:26676:26692
4573 : unsigned int localnetParameter1116:41:26582:26602
4628 : f_localnet = localnetExpressionStatement1119:2:26651:26672
4576 : netdissect_options * ndoParameter1116:16:26557:26579
4581 : init_ipxsaparray ( ndo )ExpressionStatement1130:1:26827:26848
4588 : init_protoidarray ( ndo )ExpressionStatement1129:1:26802:26824
4595 : init_eprotoarray ( ndo )ExpressionStatement1128:1:26778:26799
4602 : init_servarray ( ndo )ExpressionStatement1127:1:26756:26775
4609 : init_etherarray ( ndo )ExpressionStatement1126:1:26733:26753
4618 : ndo -> ndo_nflagCondition1122:5:26702:26715
4632 : ndo -> ndo_fflagCondition1118:5:26631:26644
4617 : return ;ReturnStatement1124:2:26723:26729
4567 : init_addrtonameFunction1115:0:26536:26850
4570 -----> 4624mask
4573 -----> 4628localnet
4576 -----> 4581ndo
4576 -----> 4588ndo
4576 -----> 4595ndo
4576 -----> 4602ndo
4576 -----> 4609ndo
4576 -----> 4618ndo
4576 -----> 4632ndo
4618 -----> 4609None
4618 -----> 4588None
4618 -----> 4617None
4618 -----> 4581None
4618 -----> 4595None
4618 -----> 4602None
4632 -----> 4628None
4632 -----> 4624None
4567 -----> 4570None
4567 -----> 4576None
4567 -----> 4618None
4567 -----> 4573None
4567 -----> 4632None
----------------------------pdg--------------------------------------------------
4649 : u_short dnaddrParameter1134:39:26905:26918
4661 : tp -> name = dnnum_string ( ndo , dnaddr )ExpressionStatement1145:1:27134:27170
4685 : tp -> addr = dnaddrExpressionStatement1143:1:27085:27102
4697 : tp -> addr == dnaddrCondition1140:6:27041:27058
4714 : tp = & dnaddrtable [ dnaddr & ( HASHNAMESIZE - 1 ) ] ;ForInit1138:6:26952:26996
4652 : netdissect_options * ndoParameter1134:14:26880:26902
4674 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement1144:1:27105:27131
4657 : return ( tp -> name ) ;ReturnStatement1147:1:27174:27190
4703 : tp = tp -> nxtAssignmentExpr1139:6:27021:27032
4693 : return ( tp -> name ) ;ReturnStatement1141:3:27064:27081
4708 : tp -> nxt != NULLCondition1138:52:26998:27012
4646 : dnaddr_stringFunction1133:0:26853:27192
4726 : struct hnamemem * tp ;IdentifierDeclStatement1136:1:26924:26943
4649 -----> 4661dnaddr
4649 -----> 4685dnaddr
4649 -----> 4697dnaddr
4649 -----> 4714dnaddr
4652 -----> 4661ndo
4652 -----> 4674ndo
4661 -----> 4657tp -> name
4661 -----> 4657 tp
4703 -----> 4685tp
4703 -----> 4693tp
4703 -----> 4697tp
4703 -----> 4674tp
4703 -----> 4657tp
4703 -----> 4661tp
4703 -----> 4708tp
4703 -----> 4703tp
4714 -----> 4661tp
4714 -----> 4657tp
4714 -----> 4674tp
4714 -----> 4685tp
4714 -----> 4693tp
4714 -----> 4697tp
4714 -----> 4703tp
4714 -----> 4708tp
4697 -----> 4693None
4697 -----> 4703None
4697 -----> 4708None
4708 -----> 4697None
4708 -----> 4661None
4708 -----> 4657None
4708 -----> 4685None
4708 -----> 4674None
4646 -----> 4726None
4646 -----> 4714None
4646 -----> 4652None
4646 -----> 4649None
4646 -----> 4708None
4726 -----> 4714tp
4726 -----> 4708tp
4726 -----> 4703tp
4726 -----> 4697tp
4726 -----> 4693tp
4726 -----> 4685tp
4726 -----> 4674tp
4726 -----> 4661tp
4726 -----> 4657tp
4685 -----> 4674tp
4674 -----> 4661tp
4661 -----> 4657tp
----------------------------pdg--------------------------------------------------
4750 : netdissect_options * ndoParameter1152:12:27226:27248
4770 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement1162:3:27442:27515
4757 : p = ptr ++ExpressionStatement1166:1:27529:27538
4755 : return ( p ) ;ReturnStatement1167:1:27541:27551
4791 : ptr = ( struct hnamemem * ) calloc ( num , sizeof ( * ptr ) )ExpressionStatement1160:2:27367:27418
4787 : ptr == NULLCondition1161:6:27426:27436
4808 : num = 64ExpressionStatement1159:2:27355:27363
4816 : static u_int num = 0 ;IdentifierDeclStatement1156:8:27319:27332
4812 : num == 0Condition1158:5:27340:27348
4824 : static struct hnamemem * ptr = NULL ;IdentifierDeclStatement1155:8:27282:27309
4747 : newhnamememFunction1151:0:27196:27553
4763 : -- numExpressionStatement1165:1:27521:27526
4832 : struct hnamemem * p ;IdentifierDeclStatement1154:1:27254:27272
4750 -----> 4770ndo
4757 -----> 4755p
4791 -----> 4757ptr
4791 -----> 4787ptr
4808 -----> 4791num
4816 -----> 4812num
4824 -----> 4757ptr
4824 -----> 4791ptr
4787 -----> 4770None
4812 -----> 4787None
4812 -----> 4791None
4812 -----> 4808None
4747 -----> 4816None
4747 -----> 4812None
4747 -----> 4757None
4747 -----> 4763None
4747 -----> 4832None
4747 -----> 4750None
4747 -----> 4755None
4747 -----> 4824None
4832 -----> 4757p
4832 -----> 4755p
----------------------------pdg--------------------------------------------------
4852 : netdissect_options * ndoParameter1172:13:27589:27611
4872 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement1182:3:27808:27881
4859 : p = ptr ++ExpressionStatement1186:1:27895:27904
4857 : return ( p ) ;ReturnStatement1187:1:27907:27917
4893 : ptr = ( struct h6namemem * ) calloc ( num , sizeof ( * ptr ) )ExpressionStatement1180:2:27732:27784
4889 : ptr == NULLCondition1181:6:27792:27802
4910 : num = 64ExpressionStatement1179:2:27720:27728
4918 : static u_int num = 0 ;IdentifierDeclStatement1176:8:27684:27697
4914 : num == 0Condition1178:5:27705:27713
4926 : static struct h6namemem * ptr = NULL ;IdentifierDeclStatement1175:8:27646:27674
4849 : newh6namememFunction1171:0:27557:27919
4865 : -- numExpressionStatement1185:1:27887:27892
4934 : struct h6namemem * p ;IdentifierDeclStatement1174:1:27617:27636
4852 -----> 4872ndo
4859 -----> 4857p
4893 -----> 4859ptr
4893 -----> 4889ptr
4910 -----> 4893num
4918 -----> 4914num
4926 -----> 4859ptr
4926 -----> 4893ptr
4889 -----> 4872None
4914 -----> 4889None
4914 -----> 4910None
4914 -----> 4893None
4849 -----> 4926None
4849 -----> 4859None
4849 -----> 4918None
4849 -----> 4914None
4849 -----> 4865None
4849 -----> 4934None
4849 -----> 4852None
4849 -----> 4857None
4934 -----> 4859p
4934 -----> 4857p
----------------------------pdg--------------------------------------------------
4954 : const unsigned short tciParameter1192:21:27957:27980
4961 : snprintf ( buf , sizeof ( buf ) , "vlan %u, p %u%s" , tci & 0xfff , tci >> 13 , ( tci & 0x1000 ) ? ", DEI" : "" )ExpressionStatement1195:1:28009:28139
4990 : static char buf [ 128 ] ;IdentifierDeclStatement1194:8:27993:28006
4959 : return buf ;ReturnStatement1199:1:28142:28152
4951 : ieee8021q_tci_stringFunction1191:0:27923:28154
4954 -----> 4961tci
4990 -----> 4959buf
4990 -----> 4961buf
4951 -----> 4954None
4951 -----> 4961None
4951 -----> 4959None
4951 -----> 4990None
4961 -----> 4959buf
----------------------------pdg--------------------------------------------------
17 : const char * fileParameter16:21:284:299
26 : snprintf ( path , sizeof ( path ) , "%s%s%s" , env , __PATH_ETC_INET , file )ExpressionStatement26:4:473:539
45 : return ( file ) ;ReturnStatement23:8:431:444
47 : fopen ( file , "r" ) || ! envCondition22:8:397:420
60 : static char path [ _MAX_PATH ] ;IdentifierDeclStatement19:11:361:381
22 : return ( path ) ;ReturnStatement30:4:611:624
66 : const char * env = getenv ( __PATH_SYSROOT ) ;IdentifierDeclStatement18:4:308:348
14 : etc_pathFunction16:0:263:626
17 -----> 26file
17 -----> 45file
17 -----> 47file
60 -----> 22path
60 -----> 26path
66 -----> 26env
66 -----> 47env
47 -----> 26None
47 -----> 45None
47 -----> 22None
14 -----> 60None
14 -----> 17None
14 -----> 47None
14 -----> 66None
26 -----> 22path
----------------------------pdg--------------------------------------------------
90 : int fParameter34:11:645:649
95 : _serv_stayopen |= fExpressionStatement40:4:768:787
124 : servf == NULLCondition36:8:662:674
101 : rewind ( servf )ExpressionStatement39:8:749:762
108 : servf = fopen ( etc_path ( __PATH_SERVICES ) , "r" )ExpressionStatement37:8:685:730
87 : setserventFunction33:0:629:789
90 -----> 95f
124 -----> 101None
124 -----> 108None
87 -----> 95None
87 -----> 90None
87 -----> 124None
----------------------------pdg--------------------------------------------------
159 : servfCondition46:8:824:828
148 : servf = NULLExpressionStatement48:8:864:876
152 : fclose ( servf )ExpressionStatement47:8:841:854
137 : endserventFunction43:0:792:908
142 : _serv_stayopen = 0ExpressionStatement50:4:888:906
159 -----> 148None
159 -----> 152None
137 -----> 142None
137 -----> 159None
----------------------------pdg--------------------------------------------------
184 : * cp ++ = '\0'ExpressionStatement97:12:1957:1969
245 : cp && * cpCondition88:11:1714:1722
233 : * cp == ' ' || * cp == '\t'Condition89:12:1739:1763
229 : cp ++ExpressionStatement90:12:1780:1784
196 : cp = strpbrk ( cp , " \t" )ExpressionStatement95:8:1896:1919
208 : * q ++ = cpExpressionStatement94:12:1877:1886
192 : cp != NULLCondition96:12:1933:1942
175 : * q = NULLExpressionStatement99:4:1981:1990
216 : q < & serv_aliases [ MAXALIASES - 1 ]Condition93:12:1830:1862
252 : * cp ++ = '\0'ExpressionStatement87:8:1689:1701
264 : cp = strpbrk ( cp , " \t" )ExpressionStatement85:4:1636:1659
260 : cp != NULLCondition86:8:1669:1678
275 : q = serv . s_aliases = serv_aliasesExpressionStatement84:4:1597:1630
283 : serv . s_proto = cpExpressionStatement83:4:1574:1591
289 : serv . s_port = htons ( ( u_short ) atoi ( p ) )ExpressionStatement82:4:1531:1568
307 : * cp ++ = '\0'ExpressionStatement81:4:1513:1525
322 : cp = strpbrk ( p , ",/" )ExpressionStatement78:4:1446:1467
318 : cp == NULLCondition79:8:1477:1486
334 : p ++ExpressionStatement77:8:1437:1440
338 : * p == ' ' || * p == '\t'Condition76:11:1404:1426
350 : * p ++ = '\0'ExpressionStatement75:4:1380:1391
409 : * p == '#'Condition65:8:1174:1182
365 : p = strpbrk ( p , " \t" )ExpressionStatement72:4:1314:1335
361 : p == NULLCondition73:8:1345:1353
376 : serv . s_name = pExpressionStatement71:4:1293:1308
395 : cp = strpbrk ( p , "#\n" )ExpressionStatement67:4:1209:1231
382 : * cp = '\0'ExpressionStatement70:4:1277:1287
391 : cp == NULLCondition68:8:1241:1250
418 : ( p = fgets ( line , BUFSIZ , servf ) ) == NULLCondition63:8:1101:1140
438 : servf == NULL && ( servf = fopen ( etc_path ( __PATH_SERVICES ) , "r" ) ) == NULLCondition59:8:988:1059
228 : continue ;ContinueStatement91:12:1798:1806
316 : goto again ;GotoStatement80:8:1497:1507
433 : again :Label62:0:1086:1091
171 : return ( & serv ) ;ReturnStatement100:4:1996:2010
359 : goto again ;GotoStatement74:8:1364:1374
389 : goto again ;GotoStatement69:8:1261:1271
407 : goto again ;GotoStatement66:8:1193:1203
416 : return ( NULL ) ;ReturnStatement64:8:1151:1164
436 : return ( NULL ) ;ReturnStatement60:8:1070:1083
166 : getserventFunction53:0:911:2012
467 : char * p ;IdentifierDeclStatement56:4:951:958
460 : char * cp , * * q ;IdentifierDeclStatement57:4:964:977
184 -----> 245cp
184 -----> 233cp
184 -----> 229cp
184 -----> 196cp
184 -----> 208cp
184 -----> 233 cp
184 -----> 245 cp
196 -----> 184cp
196 -----> 233cp
196 -----> 192cp
196 -----> 245cp
196 -----> 208cp
196 -----> 229cp
196 -----> 196cp
208 -----> 175q
208 -----> 216q
208 -----> 208q
229 -----> 208cp
229 -----> 233cp
229 -----> 196cp
229 -----> 245cp
229 -----> 229cp
252 -----> 245cp
252 -----> 233cp
252 -----> 229cp
252 -----> 208cp
252 -----> 196cp
252 -----> 233 cp
252 -----> 245 cp
264 -----> 245cp
264 -----> 252cp
264 -----> 260cp
264 -----> 229cp
264 -----> 208cp
264 -----> 196cp
264 -----> 233cp
275 -----> 175q
275 -----> 208q
275 -----> 216q
283 -----> 275serv
289 -----> 283serv
307 -----> 264cp
307 -----> 283cp
307 -----> 233 cp
307 -----> 245 cp
322 -----> 307cp
322 -----> 318cp
334 -----> 289p
334 -----> 338p
334 -----> 322p
334 -----> 334p
350 -----> 338 p
350 -----> 409 p
350 -----> 334p
350 -----> 338p
350 -----> 289p
350 -----> 322p
365 -----> 361p
365 -----> 350p
376 -----> 289serv
376 -----> 376serv
395 -----> 382cp
395 -----> 391cp
418 -----> 365p
418 -----> 395p
418 -----> 409p
418 -----> 376p
438 -----> 418servf
192 -----> 184None
216 -----> 208None
233 -----> 228None
233 -----> 229None
233 -----> 196None
233 -----> 216None
233 -----> 192None
245 -----> 233None
260 -----> 252None
318 -----> 245None
318 -----> 307None
318 -----> 264None
318 -----> 316None
318 -----> 433None
318 -----> 260None
318 -----> 283None
318 -----> 275None
318 -----> 289None
318 -----> 175None
318 -----> 418None
318 -----> 171None
338 -----> 334None
361 -----> 338None
361 -----> 350None
361 -----> 433None
361 -----> 418None
361 -----> 359None
361 -----> 318None
361 -----> 322None
391 -----> 389None
391 -----> 433None
391 -----> 376None
391 -----> 361None
391 -----> 418None
391 -----> 365None
391 -----> 382None
409 -----> 433None
409 -----> 407None
409 -----> 418None
409 -----> 395None
409 -----> 391None
418 -----> 409None
418 -----> 416None
438 -----> 436None
438 -----> 433None
438 -----> 418None
166 -----> 467None
166 -----> 438None
166 -----> 460None
467 -----> 418p
467 -----> 409p
467 -----> 365p
467 -----> 361p
467 -----> 350p
467 -----> 338p
467 -----> 334p
460 -----> 275q
460 -----> 216q
460 -----> 208q
460 -----> 175q
460 -----> 395cp
460 -----> 391cp
460 -----> 382cp
460 -----> 322cp
460 -----> 318cp
460 -----> 307cp
460 -----> 264cp
460 -----> 260cp
460 -----> 252cp
460 -----> 245cp
460 -----> 233cp
460 -----> 229cp
460 -----> 196cp
460 -----> 192cp
460 -----> 184cp
275 -----> 171serv
----------------------------pdg--------------------------------------------------
29 : int typeParameter90:47:1886:1893
141 : return gethostbyaddr ( addr , len , type ) ;ReturnStatement99:2:2045:2082
154 : typeCondition97:9:2020:2023
32 : int lenParameter90:38:1877:1883
98 : memcpy ( & addr6 . sin6_addr , addr , len )ExpressionStatement106:2:2226:2261
35 : const char * addrParameter90:20:1859:1874
113 : addr6 . sin6_family = AF_INET6ExpressionStatement105:2:2194:2222
134 : struct sockaddr_in6 addr6 ;IdentifierDeclStatement103:2:2129:2154
156 : host . h_name = hostbufExpressionStatement96:1:1988:2009
55 : strlcpy ( host . h_name , hname , NI_MAXHOST )ExpressionStatement111:3:2396:2435
162 : char hname [ NI_MAXHOST ] ;IdentifierDeclStatement94:1:1962:1984
71 : getnameinfo ( ( struct sockaddr * ) & addr6 , sizeof ( addr6 ) , hname , sizeof ( hname ) , NULL , 0 , 0 )Condition107:6:2269:2361
167 : static char hostbuf [ NI_MAXHOST ] ;IdentifierDeclStatement93:8:1935:1959
173 : static struct hostent host ;IdentifierDeclStatement92:8:1906:1925
51 : return & host ;ReturnStatement112:3:2440:2452
69 : return NULL ;ReturnStatement109:3:2369:2380
44 : default :Label117:1:2479:2486
138 : case AF_INET6 :Label102:1:2110:2123
42 : return NULL ;ReturnStatement118:2:2490:2501
119 : memset ( & addr6 , 0 , sizeof ( addr6 ) )ExpressionStatement104:2:2158:2190
152 : case AF_INET :Label98:1:2029:2041
26 : win32_gethostbyaddrFunction89:0:1815:2506
29 -----> 141type
29 -----> 154type
32 -----> 98len
32 -----> 141len
35 -----> 98addr
35 -----> 141addr
113 -----> 98addr6
134 -----> 113addr6
156 -----> 55host . h_name
156 -----> 55host
162 -----> 55hname
162 -----> 71hname
167 -----> 156hostbuf
173 -----> 156host
71 -----> 55None
71 -----> 51None
71 -----> 69None
154 -----> 113None
154 -----> 44None
154 -----> 134None
154 -----> 71None
154 -----> 138None
154 -----> 42None
154 -----> 119None
154 -----> 141None
154 -----> 98None
154 -----> 152None
26 -----> 35None
26 -----> 29None
26 -----> 162None
26 -----> 154None
26 -----> 156None
26 -----> 32None
26 -----> 167None
26 -----> 173None
134 -----> 119addr6
134 -----> 98addr6
134 -----> 71addr6
173 -----> 55host
173 -----> 51host
156 -----> 51host
119 -----> 113addr6
98 -----> 71addr6
----------------------------pdg--------------------------------------------------
254 : unsigned int addrParameter167:6:3340:3356
368 : addr = ntohl ( addr )ExpressionStatement174:1:3441:3459
271 : addr >>= 8ExpressionStatement190:2:3724:3734
342 : byte = addr & 0xffExpressionStatement180:2:3518:3536
302 : byte /= 10ExpressionStatement185:3:3644:3654
286 : * -- cp = ( char ) byte + '0'ExpressionStatement187:4:3677:3701
298 : byte > 0Condition186:7:3663:3670
324 : byte /= 10ExpressionStatement182:2:3575:3585
306 : * -- cp = ( char ) ( byte % 10 ) + '0'ExpressionStatement184:3:3608:3639
320 : byte > 0Condition183:6:3593:3600
328 : * -- cp = ( char ) ( byte % 10 ) + '0'ExpressionStatement181:2:3540:3571
348 : n = 4ExpressionStatement178:1:3503:3508
264 : -- n > 0Condition191:10:3746:3752
360 : cp = buf + sizeof ( buf )ExpressionStatement175:1:3462:3484
259 : return cp + 1 ;ReturnStatement193:1:3758:3771
275 : * -- cp = '.'ExpressionStatement189:2:3709:3720
352 : * -- cp = '\0'ExpressionStatement176:1:3487:3499
377 : static char buf [ sizeof ( ".xxx.xxx.xxx.xxx" ) ] ;IdentifierDeclStatement172:8:3401:3437
251 : intoaFunction166:0:3321:3773
393 : char * cp ;IdentifierDeclStatement169:1:3362:3370
389 : u_int byte ;IdentifierDeclStatement170:1:3373:3383
385 : int n ;IdentifierDeclStatement171:1:3386:3391
254 -----> 368addr
271 -----> 342addr
271 -----> 271addr
302 -----> 286byte
302 -----> 298byte
324 -----> 302byte
324 -----> 306byte
324 -----> 320byte
342 -----> 324byte
342 -----> 328byte
348 -----> 264n
360 -----> 259cp
360 -----> 275cp
360 -----> 286cp
360 -----> 306cp
360 -----> 328cp
360 -----> 352cp
368 -----> 271addr
368 -----> 342addr
377 -----> 360buf
264 -----> 324None
264 -----> 328None
264 -----> 275None
264 -----> 271None
264 -----> 342None
264 -----> 320None
298 -----> 286None
320 -----> 306None
320 -----> 302None
320 -----> 298None
251 -----> 324None
251 -----> 348None
251 -----> 328None
251 -----> 275None
251 -----> 264None
251 -----> 254None
251 -----> 271None
251 -----> 342None
251 -----> 368None
251 -----> 360None
251 -----> 259None
251 -----> 320None
251 -----> 352None
251 -----> 393None
251 -----> 389None
251 -----> 385None
251 -----> 377None
254 -----> 271addr
393 -----> 360cp
393 -----> 352cp
393 -----> 328cp
393 -----> 306cp
393 -----> 286cp
393 -----> 275cp
393 -----> 259cp
389 -----> 342byte
389 -----> 324byte
389 -----> 320byte
389 -----> 302byte
389 -----> 298byte
385 -----> 348n
385 -----> 264n
352 -----> 328cp
328 -----> 306cp
306 -----> 286cp
286 -----> 275cp
275 -----> 259cp
----------------------------pdg--------------------------------------------------
416 : const u_char * apParameter204:39:3942:3957
653 : memcpy ( & addr , ap , sizeof ( addr ) )ExpressionStatement210:1:4026:4057
419 : netdissect_options * ndoParameter204:14:3917:3939
429 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(intoa(addr))" , __func__ )ExpressionStatement247:2:4829:4914
500 : ndo -> ndo_NflagCondition236:7:4651:4664
505 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(hp->h_name)" , __func__ )ExpressionStatement234:4:4559:4642
590 : ! ndo -> ndo_nflag && ( addr & f_netmask ) == f_localnetCondition220:5:4232:4287
602 : p -> nxt = newhnamemem ( ndo )ExpressionStatement217:1:4197:4222
452 : p -> name = strdup ( intoa ( addr ) )ExpressionStatement245:1:4774:4803
424 : return ( p -> name ) ;ReturnStatement249:1:4917:4933
446 : p -> name == NULLCondition246:5:4810:4824
487 : dotp = strchr ( p -> name , '.' )ExpressionStatement238:4:4678:4705
479 : * dotp = '\0'ExpressionStatement240:5:4726:4738
485 : dotpCondition239:8:4715:4718
528 : p -> name = strdup ( hp -> h_name )ExpressionStatement232:3:4501:4529
472 : return ( p -> name ) ;ReturnStatement242:3:4748:4764
522 : p -> name == NULLCondition233:7:4538:4552
549 : hp = gethostbyaddr ( ( char * ) & addr , 4 , AF_INET )ExpressionStatement228:3:4423:4468
545 : hpCondition229:6:4476:4477
567 : hp = cap_gethostbyaddr ( capdns , ( char * ) & addr , 4 , AF_INET )ExpressionStatement224:3:4338:4402
632 : p = p -> nxtAssignmentExpr212:16:4118:4127
613 : p -> addr = addrExpressionStatement216:1:4180:4194
622 : return ( p -> name ) ;ReturnStatement214:3:4158:4174
626 : p -> addr == addrCondition213:6:4138:4152
637 : p -> nxtCondition212:8:4110:4115
641 : p = & hnametable [ addr & ( HASHNAMESIZE - 1 ) ]ExpressionStatement211:1:4060:4100
672 : unsigned int addr ;IdentifierDeclStatement207:1:3984:4001
541 : char * dotp ;IdentifierDeclStatement230:3:4485:4495
586 : capdns != NULLCondition223:6:4317:4330
413 : ipaddr_stringFunction203:0:3890:4935
676 : struct hostent * hp ;IdentifierDeclStatement206:1:3963:3981
668 : struct hnamemem * p ;IdentifierDeclStatement208:1:4004:4022
416 -----> 653ap
419 -----> 429ndo
419 -----> 500ndo
419 -----> 505ndo
419 -----> 590ndo
419 -----> 602ndo
452 -----> 424 p
452 -----> 446 p
452 -----> 424p -> name
452 -----> 446p -> name
487 -----> 479dotp
487 -----> 485dotp
528 -----> 472 p
528 -----> 487 p
528 -----> 522 p
528 -----> 472p -> name
528 -----> 487p -> name
528 -----> 522p -> name
549 -----> 528hp
549 -----> 545hp
567 -----> 528hp
567 -----> 545hp
632 -----> 487p
632 -----> 602p
632 -----> 522p
632 -----> 472p
632 -----> 452p
632 -----> 446p
632 -----> 613p
632 -----> 424p
632 -----> 528p
632 -----> 622p
632 -----> 626p
632 -----> 637p
632 -----> 632p
641 -----> 487p
641 -----> 602p
641 -----> 452p
641 -----> 446p
641 -----> 522p
641 -----> 528p
641 -----> 613p
641 -----> 622p
641 -----> 424p
641 -----> 626p
641 -----> 472p
641 -----> 637p
641 -----> 632p
672 -----> 452addr
672 -----> 590addr
672 -----> 613addr
672 -----> 626addr
672 -----> 641addr
446 -----> 429None
485 -----> 479None
500 -----> 487None
500 -----> 485None
522 -----> 505None
545 -----> 452None
545 -----> 500None
545 -----> 528None
545 -----> 522None
545 -----> 446None
545 -----> 472None
545 -----> 424None
545 -----> 541None
586 -----> 567None
586 -----> 549None
590 -----> 452None
590 -----> 586None
590 -----> 545None
590 -----> 446None
590 -----> 424None
626 -----> 637None
626 -----> 632None
626 -----> 622None
637 -----> 590None
637 -----> 626None
637 -----> 613None
637 -----> 602None
413 -----> 676None
413 -----> 668None
413 -----> 672None
413 -----> 419None
413 -----> 653None
413 -----> 637None
413 -----> 641None
413 -----> 416None
672 -----> 653addr
541 -----> 487dotp
541 -----> 485dotp
541 -----> 479dotp
676 -----> 567hp
676 -----> 549hp
676 -----> 545hp
668 -----> 641p
668 -----> 637p
668 -----> 632p
668 -----> 626p
668 -----> 622p
668 -----> 613p
668 -----> 602p
668 -----> 528p
668 -----> 522p
668 -----> 472p
668 -----> 452p
668 -----> 446p
668 -----> 424p
653 -----> 641addr
653 -----> 626addr
653 -----> 613addr
653 -----> 590addr
653 -----> 567addr
653 -----> 549addr
653 -----> 452addr
613 -----> 602p
602 -----> 528p
528 -----> 522p
528 -----> 487p
452 -----> 446p
452 -----> 424p
----------------------------pdg--------------------------------------------------
721 : const u_char * apParameter254:40:4992:5007
768 : cp = addrtostr6 ( ap , ntop_buf , sizeof ( ntop_buf ) )ExpressionStatement305:1:6045:6092
996 : memcpy ( & addr , ap , sizeof ( addr ) )ExpressionStatement268:1:5217:5248
724 : netdissect_options * ndoParameter254:15:4967:4989
734 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(cp)" , __func__ )ExpressionStatement308:2:6141:6217
815 : ndo -> ndo_NflagCondition295:7:5914:5927
820 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(hp->h_name)" , __func__ )ExpressionStatement293:4:5822:5905
909 : ! ndo -> ndo_nflagCondition279:5:5505:5519
915 : p -> nxt = newh6namemem ( ndo )ExpressionStatement275:1:5453:5479
757 : p -> name = strdup ( cp )ExpressionStatement306:1:6095:6115
729 : return ( p -> name ) ;ReturnStatement310:1:6220:6236
751 : p -> name == NULLCondition307:5:6122:6136
802 : dotp = strchr ( p -> name , '.' )ExpressionStatement297:4:5941:5968
794 : * dotp = '\0'ExpressionStatement299:5:5989:6001
800 : dotpCondition298:8:5978:5981
843 : p -> name = strdup ( hp -> h_name )ExpressionStatement291:3:5764:5792
787 : return ( p -> name ) ;ReturnStatement301:3:6011:6027
837 : p -> name == NULLCondition292:7:5801:5815
864 : hp = gethostbyaddr ( ( char * ) & addr , sizeof ( addr ) , AF_INET6 )ExpressionStatement286:3:5667:5731
860 : hpCondition288:6:5739:5740
884 : hp = cap_gethostbyaddr ( capdns , ( char * ) & addr , sizeof ( addr ) , AF_INET6 )ExpressionStatement282:3:5570:5646
971 : p = p -> nxtAssignmentExpr270:16:5318:5327
926 : memcpy ( p -> addr , addr . addr , sizeof ( nd_ipv6 ) )ExpressionStatement274:1:5407:5450
946 : return ( p -> name ) ;ReturnStatement272:3:5385:5401
950 : memcmp ( & p -> addr , & addr , sizeof ( addr ) ) == 0Condition271:6:5338:5379
976 : p -> nxtCondition270:8:5310:5315
980 : p = & h6nametable [ addr . addra . d & ( HASHNAMESIZE - 1 ) ]ExpressionStatement269:1:5251:5300
1011 : char ntop_buf [ INET6_ADDRSTRLEN ] ;IdentifierDeclStatement266:1:5182:5213
1024 : union { nd_ipv6 addr ; struct for_hash_addr { char fill [ 14 ] ; unsigned short d ; } addra ; } addr ;ClassDefStatement257:1:5034:5140
856 : char * dotp ;IdentifierDeclStatement289:3:5748:5758
905 : capdns != NULLCondition281:6:5549:5562
718 : ip6addr_stringFunction253:0:4939:6238
1020 : struct h6namemem * p ;IdentifierDeclStatement264:1:5143:5162
1028 : struct hostent * hp ;IdentifierDeclStatement256:1:5013:5031
1016 : const char * cp ;IdentifierDeclStatement265:1:5165:5179
721 -----> 768ap
721 -----> 996ap
724 -----> 734ndo
724 -----> 815ndo
724 -----> 820ndo
724 -----> 909ndo
724 -----> 915ndo
757 -----> 729 p
757 -----> 751 p
757 -----> 729p -> name
757 -----> 751p -> name
768 -----> 757cp
802 -----> 794dotp
802 -----> 800dotp
843 -----> 787 p
843 -----> 802 p
843 -----> 837 p
843 -----> 787p -> name
843 -----> 802p -> name
843 -----> 837p -> name
864 -----> 843hp
864 -----> 860hp
884 -----> 843hp
884 -----> 860hp
971 -----> 751p
971 -----> 926p
971 -----> 837p
971 -----> 915p
971 -----> 787p
971 -----> 757p
971 -----> 946p
971 -----> 950p
971 -----> 802p
971 -----> 729p
971 -----> 843p
971 -----> 976p
971 -----> 971p
980 -----> 915p
980 -----> 837p
980 -----> 751p
980 -----> 926p
980 -----> 787p
980 -----> 946p
980 -----> 729p
980 -----> 757p
980 -----> 950p
980 -----> 843p
980 -----> 802p
980 -----> 976p
980 -----> 971p
1011 -----> 768ntop_buf
1024 -----> 926addr
1024 -----> 980addr
751 -----> 734None
800 -----> 794None
815 -----> 800None
815 -----> 802None
837 -----> 820None
860 -----> 815None
860 -----> 751None
860 -----> 787None
860 -----> 843None
860 -----> 757None
860 -----> 768None
860 -----> 729None
860 -----> 837None
860 -----> 856None
905 -----> 864None
905 -----> 884None
909 -----> 905None
909 -----> 751None
909 -----> 860None
909 -----> 757None
909 -----> 768None
909 -----> 729None
950 -----> 971None
950 -----> 946None
950 -----> 976None
976 -----> 915None
976 -----> 950None
976 -----> 909None
976 -----> 926None
718 -----> 1024None
718 -----> 1020None
718 -----> 980None
718 -----> 1028None
718 -----> 1016None
718 -----> 996None
718 -----> 724None
718 -----> 1011None
718 -----> 721None
718 -----> 976None
856 -----> 802dotp
856 -----> 800dotp
856 -----> 794dotp
1020 -----> 980p
1020 -----> 976p
1020 -----> 971p
1020 -----> 950p
1020 -----> 946p
1020 -----> 926p
1020 -----> 915p
1020 -----> 843p
1020 -----> 837p
1020 -----> 787p
1020 -----> 757p
1020 -----> 751p
1020 -----> 729p
1028 -----> 884hp
1028 -----> 864hp
1028 -----> 860hp
1016 -----> 768cp
1024 -----> 996addr
996 -----> 980addr
996 -----> 950addr
996 -----> 926addr
996 -----> 884addr
996 -----> 864addr
926 -----> 915p
915 -----> 843p
843 -----> 837p
843 -----> 802p
757 -----> 751p
757 -----> 729p
----------------------------pdg--------------------------------------------------
1083 : unsigned char octetParameter320:23:6401:6419
1093 : * cp ++ = hex [ ( octet >> 0 ) & 0xf ]ExpressionStatement323:1:6459:6490
1107 : * cp ++ = hex [ ( octet >> 4 ) & 0xf ]ExpressionStatement322:1:6425:6456
1086 : char * cpParameter320:13:6391:6398
1091 : return ( cp ) ;ReturnStatement324:1:6493:6504
1080 : octet_to_hexFunction319:0:6357:6506
1083 -----> 1093octet
1083 -----> 1107octet
1086 -----> 1107cp
1093 -----> 1091cp
1107 -----> 1093cp
1080 -----> 1083None
1080 -----> 1093None
1080 -----> 1091None
1080 -----> 1086None
1080 -----> 1107None
1086 -----> 1093cp
1086 -----> 1091cp
----------------------------pdg--------------------------------------------------
1133 : const u_char * epParameter330:37:6573:6588
1257 : i = ( ep [ 4 ] << 8 ) | ep [ 5 ]ExpressionStatement337:1:6687:6711
1269 : j = ( ep [ 2 ] << 8 ) | ep [ 3 ]ExpressionStatement336:1:6660:6684
1281 : k = ( ep [ 0 ] << 8 ) | ep [ 1 ]ExpressionStatement335:1:6633:6657
1136 : netdissect_options * ndoParameter330:12:6548:6570
1144 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement352:2:7059:7125
1167 : tp -> e_nxt = ( struct enamemem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement350:1:6978:7031
1161 : tp -> e_nxt == NULLCondition351:5:7038:7054
1186 : tp -> e_addr2 = ( u_short ) kExpressionStatement349:1:6951:6975
1213 : tp = tp -> e_nxtExpressionStatement346:3:6880:6894
1202 : tp -> e_addr0 = ( u_short ) iExpressionStatement347:1:6897:6921
1219 : return tp ;ReturnStatement344:3:6859:6868
1221 : tp -> e_addr0 == i && tp -> e_addr1 == j && tp -> e_addr2 == kCondition341:6:6786:6853
1194 : tp -> e_addr1 = ( u_short ) jExpressionStatement348:1:6924:6948
1141 : return tp ;ReturnStatement354:1:7129:7138
1239 : tp -> e_nxtCondition340:8:6769:6777
1243 : tp = & enametable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement339:1:6715:6759
1130 : lookup_ememFunction329:0:6511:7140
1297 : u_int i , j , k ;IdentifierDeclStatement332:1:6594:6607
1293 : struct enamemem * tp ;IdentifierDeclStatement333:1:6610:6629
1133 -----> 1257ep
1133 -----> 1269ep
1133 -----> 1281ep
1136 -----> 1144ndo
1167 -----> 1161tp -> e_nxt
1167 -----> 1161 tp
1186 -----> 1167 tp
1213 -----> 1202tp
1213 -----> 1219tp
1213 -----> 1221tp
1213 -----> 1186tp
1213 -----> 1167tp
1213 -----> 1194tp
1213 -----> 1161tp
1213 -----> 1141tp
1213 -----> 1239tp
1213 -----> 1213tp
1243 -----> 1202tp
1243 -----> 1213tp
1243 -----> 1141tp
1243 -----> 1219tp
1243 -----> 1221tp
1243 -----> 1186tp
1243 -----> 1194tp
1243 -----> 1239tp
1243 -----> 1161tp
1243 -----> 1167tp
1257 -----> 1202i
1257 -----> 1221i
1257 -----> 1243i
1269 -----> 1194j
1269 -----> 1221j
1269 -----> 1243j
1281 -----> 1186k
1281 -----> 1221k
1161 -----> 1144None
1221 -----> 1239None
1221 -----> 1219None
1221 -----> 1213None
1239 -----> 1221None
1239 -----> 1186None
1239 -----> 1167None
1239 -----> 1202None
1239 -----> 1194None
1239 -----> 1161None
1239 -----> 1141None
1130 -----> 1136None
1130 -----> 1297None
1130 -----> 1257None
1130 -----> 1133None
1130 -----> 1293None
1130 -----> 1239None
1130 -----> 1281None
1130 -----> 1243None
1130 -----> 1269None
1297 -----> 1281k
1297 -----> 1221k
1297 -----> 1269j
1297 -----> 1221j
1297 -----> 1257i
1297 -----> 1221i
1293 -----> 1243tp
1293 -----> 1239tp
1293 -----> 1221tp
1293 -----> 1219tp
1293 -----> 1213tp
1293 -----> 1202tp
1293 -----> 1194tp
1293 -----> 1186tp
1293 -----> 1167tp
1293 -----> 1161tp
1293 -----> 1141tp
1202 -----> 1194tp
1194 -----> 1186tp
1186 -----> 1167tp
1167 -----> 1161tp
1167 -----> 1141tp
----------------------------pdg--------------------------------------------------
1336 : const unsigned int nlenParameter361:4:7236:7258
1392 : tp -> bs_nbytes = nlenExpressionStatement398:1:8087:8107
1398 : memcpy ( tp -> bs_bytes , bs , nlen )ExpressionStatement397:1:8054:8084
1435 : tp -> bs_bytes = ( u_char * ) calloc ( 1 , nlen )ExpressionStatement392:1:7906:7947
1485 : nlen == tp -> bs_nbytes && tp -> bs_addr0 == i && tp -> bs_addr1 == j && tp -> bs_addr2 == k && memcmp ( ( const char * ) bs , ( const char * ) ( tp -> bs_bytes ) , nlen ) == 0Condition379:6:7599:7775
1587 : nlen >= 4Condition370:12:7417:7425
1628 : nlen >= 6Condition366:5:7308:7316
1339 : const u_char * bsParameter360:43:7214:7229
1563 : j = ( bs [ 2 ] << 8 ) | bs [ 3 ]ExpressionStatement372:2:7460:7484
1575 : k = ( bs [ 0 ] << 8 ) | bs [ 1 ]ExpressionStatement371:2:7432:7456
1592 : i = ( bs [ 4 ] << 8 ) | bs [ 5 ]ExpressionStatement369:2:7379:7403
1604 : j = ( bs [ 2 ] << 8 ) | bs [ 3 ]ExpressionStatement368:2:7351:7375
1616 : k = ( bs [ 0 ] << 8 ) | bs [ 1 ]ExpressionStatement367:2:7323:7347
1342 : netdissect_options * ndoParameter360:18:7189:7211
1350 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement401:2:8194:8266
1412 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement394:2:7978:8050
1373 : tp -> bs_nxt = ( struct bsnamemem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement399:1:8110:8165
1367 : tp -> bs_nxt == NULLCondition400:5:8172:8189
1429 : tp -> bs_bytes == NULLCondition393:5:7954:7973
1477 : tp = tp -> bs_nxtExpressionStatement386:3:7802:7817
1458 : tp -> bs_addr1 = ( u_short ) jExpressionStatement389:1:7849:7874
1466 : tp -> bs_addr0 = ( u_short ) iExpressionStatement388:1:7821:7846
1483 : return tp ;ReturnStatement384:3:7781:7790
1450 : tp -> bs_addr2 = ( u_short ) kExpressionStatement390:1:7877:7902
1347 : return tp ;ReturnStatement404:1:8270:8279
1528 : tp -> bs_nxtCondition378:8:7581:7590
1532 : tp = & bytestringtable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement377:1:7522:7571
1550 : i = j = k = 0ExpressionStatement375:2:7505:7518
1559 : i = 0ExpressionStatement373:2:7488:7493
1333 : lookup_bytestringFunction359:0:7145:8281
1632 : u_int i , j , k ;IdentifierDeclStatement364:1:7287:7300
1642 : struct bsnamemem * tp ;IdentifierDeclStatement363:1:7264:7284
1336 -----> 1392nlen
1336 -----> 1398nlen
1336 -----> 1435nlen
1336 -----> 1485nlen
1336 -----> 1587nlen
1336 -----> 1628nlen
1339 -----> 1398bs
1339 -----> 1485bs
1339 -----> 1563bs
1339 -----> 1575bs
1339 -----> 1592bs
1339 -----> 1604bs
1339 -----> 1616bs
1342 -----> 1350ndo
1342 -----> 1412ndo
1373 -----> 1367tp -> bs_nxt
1373 -----> 1367 tp
1392 -----> 1373 tp
1435 -----> 1398 tp
1435 -----> 1429 tp
1435 -----> 1398tp -> bs_bytes
1435 -----> 1429tp -> bs_bytes
1477 -----> 1429tp
1477 -----> 1373tp
1477 -----> 1458tp
1477 -----> 1466tp
1477 -----> 1483tp
1477 -----> 1485tp
1477 -----> 1450tp
1477 -----> 1392tp
1477 -----> 1398tp
1477 -----> 1367tp
1477 -----> 1435tp
1477 -----> 1347tp
1477 -----> 1528tp
1477 -----> 1477tp
1532 -----> 1466tp
1532 -----> 1429tp
1532 -----> 1373tp
1532 -----> 1398tp
1532 -----> 1347tp
1532 -----> 1477tp
1532 -----> 1450tp
1532 -----> 1483tp
1532 -----> 1435tp
1532 -----> 1367tp
1532 -----> 1485tp
1532 -----> 1392tp
1532 -----> 1528tp
1532 -----> 1458tp
1550 -----> 1450k
1550 -----> 1485k
1550 -----> 1485j
1550 -----> 1532j
1550 -----> 1458j
1550 -----> 1466i
1550 -----> 1485i
1550 -----> 1532i
1559 -----> 1466i
1559 -----> 1485i
1559 -----> 1532i
1563 -----> 1458j
1563 -----> 1485j
1563 -----> 1532j
1575 -----> 1450k
1575 -----> 1485k
1592 -----> 1466i
1592 -----> 1485i
1592 -----> 1532i
1604 -----> 1458j
1604 -----> 1485j
1604 -----> 1532j
1616 -----> 1450k
1616 -----> 1485k
1367 -----> 1350None
1429 -----> 1412None
1485 -----> 1483None
1485 -----> 1477None
1485 -----> 1528None
1528 -----> 1398None
1528 -----> 1347None
1528 -----> 1373None
1528 -----> 1458None
1528 -----> 1392None
1528 -----> 1367None
1528 -----> 1485None
1528 -----> 1429None
1528 -----> 1466None
1528 -----> 1435None
1528 -----> 1450None
1587 -----> 1559None
1587 -----> 1563None
1587 -----> 1550None
1587 -----> 1575None
1628 -----> 1604None
1628 -----> 1587None
1628 -----> 1616None
1628 -----> 1592None
1333 -----> 1532None
1333 -----> 1342None
1333 -----> 1336None
1333 -----> 1528None
1333 -----> 1632None
1333 -----> 1628None
1333 -----> 1339None
1333 -----> 1642None
1632 -----> 1616k
1632 -----> 1575k
1632 -----> 1550k
1632 -----> 1485k
1632 -----> 1604j
1632 -----> 1563j
1632 -----> 1550j
1632 -----> 1485j
1632 -----> 1592i
1632 -----> 1559i
1632 -----> 1550i
1632 -----> 1485i
1642 -----> 1532tp
1642 -----> 1528tp
1642 -----> 1485tp
1642 -----> 1483tp
1642 -----> 1477tp
1642 -----> 1466tp
1642 -----> 1458tp
1642 -----> 1450tp
1642 -----> 1435tp
1642 -----> 1429tp
1642 -----> 1398tp
1642 -----> 1392tp
1642 -----> 1373tp
1642 -----> 1367tp
1642 -----> 1347tp
1466 -----> 1458tp
1458 -----> 1450tp
1450 -----> 1435tp
1435 -----> 1429tp
1435 -----> 1398tp
1398 -----> 1392tp
1392 -----> 1373tp
1373 -----> 1367tp
1373 -----> 1347tp
----------------------------pdg--------------------------------------------------
1679 : u_int nsap_lengthParameter411:5:8373:8389
1735 : memcpy ( ( char * ) & tp -> e_nsap [ 1 ] , ( const char * ) nsap , nsap_length )ExpressionStatement443:1:9208:9271
1756 : tp -> e_nsap [ 0 ] = ( u_char ) nsap_lengthExpressionStatement442:1:9169:9204
1790 : tp -> e_nsap = ( u_char * ) malloc ( nsap_length + 1 )ExpressionStatement439:1:9025:9071
1840 : nsap_length == tp -> e_nsap [ 0 ] && tp -> e_addr0 == i && tp -> e_addr1 == j && tp -> e_addr2 == k && memcmp ( ( const char * ) nsap , ( char * ) & ( tp -> e_nsap [ 1 ] ) , nsap_length ) == 0Condition427:6:8712:8900
1954 : ensap = nsap + nsap_length - 6ExpressionStatement418:2:8481:8511
1962 : nsap_length > 6Condition417:5:8460:8474
1682 : const u_char * nsapParameter410:37:8348:8365
1685 : netdissect_options * ndoParameter410:12:8323:8345
1693 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement446:2:9355:9421
1767 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: malloc" , __func__ )ExpressionStatement441:2:9100:9166
1716 : tp -> e_nxt = ( struct enamemem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement444:1:9274:9327
1710 : tp -> e_nxt == NULLCondition445:5:9334:9350
1784 : tp -> e_nsap == NULLCondition440:5:9078:9095
1832 : tp = tp -> e_nxtExpressionStatement435:3:8927:8941
1821 : tp -> e_addr0 = ( u_short ) iExpressionStatement436:1:8944:8968
1838 : return tp ;ReturnStatement433:3:8906:8915
1813 : tp -> e_addr1 = ( u_short ) jExpressionStatement437:1:8971:8995
1805 : tp -> e_addr2 = ( u_short ) kExpressionStatement438:1:8998:9022
1889 : tp -> e_nxtCondition426:8:8695:8703
1690 : return tp ;ReturnStatement448:1:9425:9434
1893 : tp = & nsaptable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement425:1:8642:8685
1909 : i = j = k = 0ExpressionStatement423:2:8625:8638
1918 : i = ( ensap [ 4 ] << 8 ) | ensap [ 5 ]ExpressionStatement421:2:8583:8613
1930 : j = ( ensap [ 2 ] << 8 ) | ensap [ 3 ]ExpressionStatement420:2:8549:8579
1942 : k = ( ensap [ 0 ] << 8 ) | ensap [ 1 ]ExpressionStatement419:2:8515:8545
1676 : lookup_nsapFunction409:0:8286:9436
1974 : u_int i , j , k ;IdentifierDeclStatement413:1:8395:8408
1966 : const u_char * ensap ;IdentifierDeclStatement415:1:8433:8452
1970 : struct enamemem * tp ;IdentifierDeclStatement414:1:8411:8430
1679 -----> 1735nsap_length
1679 -----> 1756nsap_length
1679 -----> 1790nsap_length
1679 -----> 1840nsap_length
1679 -----> 1954nsap_length
1679 -----> 1962nsap_length
1682 -----> 1735nsap
1682 -----> 1840nsap
1682 -----> 1954nsap
1685 -----> 1693ndo
1685 -----> 1767ndo
1716 -----> 1710tp -> e_nxt
1716 -----> 1710 tp
1790 -----> 1735tp -> e_nsap
1790 -----> 1756tp -> e_nsap
1790 -----> 1784tp -> e_nsap
1790 -----> 1716 tp
1790 -----> 1735 tp
1790 -----> 1756 tp
1790 -----> 1784 tp
1832 -----> 1784tp
1832 -----> 1716tp
1832 -----> 1756tp
1832 -----> 1790tp
1832 -----> 1821tp
1832 -----> 1838tp
1832 -----> 1813tp
1832 -----> 1840tp
1832 -----> 1805tp
1832 -----> 1735tp
1832 -----> 1889tp
1832 -----> 1710tp
1832 -----> 1690tp
1832 -----> 1832tp
1893 -----> 1710tp
1893 -----> 1716tp
1893 -----> 1790tp
1893 -----> 1832tp
1893 -----> 1690tp
1893 -----> 1784tp
1893 -----> 1813tp
1893 -----> 1838tp
1893 -----> 1735tp
1893 -----> 1805tp
1893 -----> 1756tp
1893 -----> 1889tp
1893 -----> 1840tp
1893 -----> 1821tp
1909 -----> 1805k
1909 -----> 1840k
1909 -----> 1813j
1909 -----> 1840j
1909 -----> 1893j
1909 -----> 1821i
1909 -----> 1840i
1909 -----> 1893i
1918 -----> 1821i
1918 -----> 1840i
1918 -----> 1893i
1930 -----> 1813j
1930 -----> 1840j
1930 -----> 1893j
1942 -----> 1805k
1942 -----> 1840k
1954 -----> 1918ensap
1954 -----> 1930ensap
1954 -----> 1942ensap
1710 -----> 1693None
1784 -----> 1767None
1840 -----> 1832None
1840 -----> 1838None
1840 -----> 1889None
1889 -----> 1756None
1889 -----> 1813None
1889 -----> 1735None
1889 -----> 1784None
1889 -----> 1710None
1889 -----> 1821None
1889 -----> 1805None
1889 -----> 1716None
1889 -----> 1790None
1889 -----> 1840None
1889 -----> 1690None
1962 -----> 1954None
1962 -----> 1909None
1962 -----> 1918None
1962 -----> 1942None
1962 -----> 1930None
1676 -----> 1974None
1676 -----> 1966None
1676 -----> 1685None
1676 -----> 1962None
1676 -----> 1893None
1676 -----> 1889None
1676 -----> 1682None
1676 -----> 1679None
1676 -----> 1970None
1974 -----> 1942k
1974 -----> 1909k
1974 -----> 1840k
1974 -----> 1930j
1974 -----> 1909j
1974 -----> 1840j
1974 -----> 1918i
1974 -----> 1909i
1974 -----> 1840i
1966 -----> 1954ensap
1970 -----> 1893tp
1970 -----> 1889tp
1970 -----> 1840tp
1970 -----> 1838tp
1970 -----> 1832tp
1970 -----> 1821tp
1970 -----> 1813tp
1970 -----> 1805tp
1970 -----> 1790tp
1970 -----> 1784tp
1970 -----> 1756tp
1970 -----> 1735tp
1970 -----> 1716tp
1970 -----> 1710tp
1970 -----> 1690tp
1821 -----> 1813tp
1813 -----> 1805tp
1805 -----> 1790tp
1790 -----> 1784tp
1790 -----> 1756tp
1756 -----> 1735tp -> e_nsap
1756 -----> 1735tp
1735 -----> 1716tp
1716 -----> 1710tp
1716 -----> 1690tp
----------------------------pdg--------------------------------------------------
2022 : const u_char * piParameter454:40:9508:9523
2130 : j = ( pi [ 3 ] << 8 ) + pi [ 4 ]ExpressionStatement461:1:9613:9639
2142 : i = ( ( ( pi [ 0 ] << 8 ) + pi [ 1 ] ) << 8 ) + pi [ 2 ]ExpressionStatement460:1:9569:9610
2025 : netdissect_options * ndoParameter454:15:9483:9505
2033 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement474:2:9921:9987
2056 : tp -> p_nxt = ( struct protoidmem * ) calloc ( 1 , sizeof ( * tp ) )ExpressionStatement472:1:9838:9893
2050 : tp -> p_nxt == NULLCondition473:5:9900:9916
2075 : tp -> p_proto = ( u_short ) jExpressionStatement471:1:9811:9835
2092 : tp = tp -> p_nxtExpressionStatement469:3:9778:9792
2083 : tp -> p_oui = iExpressionStatement470:1:9795:9808
2098 : return tp ;ReturnStatement467:3:9757:9766
2030 : return tp ;ReturnStatement476:1:9991:10000
2100 : tp -> p_oui == i && tp -> p_proto == jCondition466:6:9718:9751
2112 : tp -> p_nxtCondition465:8:9701:9709
2116 : tp = & protoidtable [ ( i ^ j ) & ( HASHNAMESIZE - 1 ) ]ExpressionStatement464:1:9645:9691
2019 : lookup_protoidFunction453:0:9441:10002
2164 : u_int i , j ;IdentifierDeclStatement456:1:9529:9539
2160 : struct protoidmem * tp ;IdentifierDeclStatement457:1:9542:9563
2022 -----> 2130pi
2022 -----> 2142pi
2025 -----> 2033ndo
2056 -----> 2050 tp
2056 -----> 2050tp -> p_nxt
2075 -----> 2056 tp
2092 -----> 2050tp
2092 -----> 2056tp
2092 -----> 2075tp
2092 -----> 2083tp
2092 -----> 2098tp
2092 -----> 2030tp
2092 -----> 2100tp
2092 -----> 2112tp
2092 -----> 2092tp
2116 -----> 2056tp
2116 -----> 2050tp
2116 -----> 2083tp
2116 -----> 2030tp
2116 -----> 2075tp
2116 -----> 2092tp
2116 -----> 2098tp
2116 -----> 2112tp
2116 -----> 2100tp
2130 -----> 2075j
2130 -----> 2100j
2130 -----> 2116j
2142 -----> 2083i
2142 -----> 2100i
2142 -----> 2116i
2050 -----> 2033None
2100 -----> 2092None
2100 -----> 2112None
2100 -----> 2098None
2112 -----> 2100None
2112 -----> 2056None
2112 -----> 2030None
2112 -----> 2050None
2112 -----> 2083None
2112 -----> 2075None
2019 -----> 2116None
2019 -----> 2112None
2019 -----> 2142None
2019 -----> 2164None
2019 -----> 2022None
2019 -----> 2160None
2019 -----> 2130None
2019 -----> 2025None
2164 -----> 2130j
2164 -----> 2100j
2164 -----> 2142i
2164 -----> 2100i
2160 -----> 2116tp
2160 -----> 2112tp
2160 -----> 2100tp
2160 -----> 2098tp
2160 -----> 2092tp
2160 -----> 2083tp
2160 -----> 2075tp
2160 -----> 2056tp
2160 -----> 2050tp
2160 -----> 2030tp
2083 -----> 2075tp
2075 -----> 2056tp
2056 -----> 2050tp
2056 -----> 2030tp
----------------------------pdg--------------------------------------------------
2198 : const unsigned char * epParameter480:38:10056:10078
2323 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement509:1:10609:10637
2338 : oui = EXTRACT_BE_U_3 ( ep )ExpressionStatement508:1:10582:10606
2407 : memcpy ( & ea , ep , MAC48_LEN )ExpressionStatement497:2:10324:10351
2444 : tp = lookup_emem ( ndo , ep )ExpressionStatement488:1:10156:10181
2201 : netdissect_options * ndoParameter480:13:10031:10053
2211 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement522:2:10909:10986
2282 : ! ndo -> ndo_nflagCondition515:5:10721:10735
2360 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf2)" , __func__ )ExpressionStatement501:4:10453:10530
2429 : ! ndo -> ndo_nflagCondition492:5:10253:10267
2234 : tp -> e_name = strdup ( buf )ExpressionStatement520:1:10856:10880
2206 : return ( tp -> e_name ) ;ReturnStatement524:1:10989:11008
2228 : tp -> e_name == NULLCondition521:5:10887:10904
2290 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement512:2:10682:10710
2247 : * cp = '\0'ExpressionStatement519:2:10843:10853
2254 : snprintf ( cp , BUFSIZE - ( 2 + 5 * 3 ) , " (oui %s)" , tok2str ( oui_values , "Unknown" , oui ) )ExpressionStatement516:2:10742:10831
2305 : * cp ++ = ':'ExpressionStatement511:2:10667:10678
2319 : i = 5 ;ForInit510:6:10645:10650
2313 : -- i >= 0Condition510:13:10652:10659
2347 : cp = bufExpressionStatement507:1:10571:10579
2383 : tp -> e_name = strdup ( buf2 )ExpressionStatement499:3:10395:10420
2355 : return ( tp -> e_name ) ;ReturnStatement503:3:10535:10554
2377 : tp -> e_name == NULLCondition500:7:10429:10446
2424 : char buf2 [ BUFSIZE ] ;IdentifierDeclStatement493:2:10274:10292
2394 : ether_ntohost ( buf2 , & ea ) == 0Condition498:6:10359:10387
2436 : return ( tp -> e_name ) ;ReturnStatement490:2:10202:10221
2440 : tp -> e_nameCondition489:5:10188:10197
2455 : char buf [ BUFSIZE ] ;IdentifierDeclStatement486:1:10135:10152
2420 : struct ether_addr ea ;IdentifierDeclStatement495:2:10299:10319
2195 : mac48_stringFunction479:0:10005:11010
2468 : char * cp ;IdentifierDeclStatement483:1:10092:10100
2472 : int i ;IdentifierDeclStatement482:1:10084:10089
2460 : int oui ;IdentifierDeclStatement485:1:10125:10132
2464 : struct enamemem * tp ;IdentifierDeclStatement484:1:10103:10122
2198 -----> 2323ep
2198 -----> 2338ep
2198 -----> 2407ep
2198 -----> 2444ep
2201 -----> 2211ndo
2201 -----> 2282ndo
2201 -----> 2360ndo
2201 -----> 2429ndo
2201 -----> 2444ndo
2234 -----> 2206 tp
2234 -----> 2228 tp
2234 -----> 2206tp -> e_name
2234 -----> 2228tp -> e_name
2290 -----> 2247cp
2290 -----> 2254cp
2290 -----> 2305cp
2290 -----> 2290ep
2305 -----> 2290cp
2319 -----> 2313i
2323 -----> 2247cp
2323 -----> 2254cp
2323 -----> 2305cp
2323 -----> 2290ep
2338 -----> 2254oui
2347 -----> 2323cp
2383 -----> 2355 tp
2383 -----> 2377 tp
2383 -----> 2355tp -> e_name
2383 -----> 2377tp -> e_name
2424 -----> 2383buf2
2424 -----> 2394buf2
2444 -----> 2206tp
2444 -----> 2228tp
2444 -----> 2234tp
2444 -----> 2355tp
2444 -----> 2377tp
2444 -----> 2383tp
2444 -----> 2436tp
2444 -----> 2440tp
2455 -----> 2234buf
2455 -----> 2347buf
2228 -----> 2211None
2282 -----> 2247None
2282 -----> 2254None
2313 -----> 2305None
2313 -----> 2290None
2377 -----> 2360None
2394 -----> 2338None
2394 -----> 2383None
2394 -----> 2355None
2394 -----> 2347None
2394 -----> 2282None
2394 -----> 2234None
2394 -----> 2323None
2394 -----> 2319None
2394 -----> 2228None
2394 -----> 2377None
2394 -----> 2313None
2394 -----> 2206None
2429 -----> 2338None
2429 -----> 2424None
2429 -----> 2347None
2429 -----> 2282None
2429 -----> 2394None
2429 -----> 2234None
2429 -----> 2323None
2429 -----> 2319None
2429 -----> 2228None
2429 -----> 2407None
2429 -----> 2420None
2429 -----> 2313None
2429 -----> 2206None
2440 -----> 2436None
2440 -----> 2429None
2195 -----> 2444None
2195 -----> 2468None
2195 -----> 2198None
2195 -----> 2472None
2195 -----> 2460None
2195 -----> 2464None
2195 -----> 2455None
2195 -----> 2201None
2195 -----> 2440None
2198 -----> 2290ep
2420 -----> 2407ea
2420 -----> 2394ea
2468 -----> 2347cp
2468 -----> 2323cp
2468 -----> 2305cp
2468 -----> 2290cp
2468 -----> 2254cp
2468 -----> 2247cp
2472 -----> 2319i
2472 -----> 2313i
2460 -----> 2338oui
2464 -----> 2444tp
2464 -----> 2440tp
2464 -----> 2436tp
2464 -----> 2383tp
2464 -----> 2377tp
2464 -----> 2355tp
2464 -----> 2234tp
2464 -----> 2228tp
2464 -----> 2206tp
2407 -----> 2394ea
2383 -----> 2377tp
2234 -----> 2228tp
2234 -----> 2206tp
----------------------------pdg--------------------------------------------------
2512 : const unsigned char * epParameter528:38:11064:11086
2520 : return ( linkaddr_string ( ndo , ep , LINKADDR_EUI64 , EUI64_LEN ) ) ;ReturnStatement530:1:11092:11152
2515 : netdissect_options * ndoParameter528:13:11039:11061
2509 : eui64_stringFunction527:0:11013:11154
2512 -----> 2520ep
2515 -----> 2520ndo
2509 -----> 2515None
2509 -----> 2512None
2509 -----> 2520None
----------------------------pdg--------------------------------------------------
2543 : const unsigned char * epParameter535:40:11211:11233
2610 : cp = octet_to_hex ( cp , * ( ep + i - 1 ) )ExpressionStatement549:2:11457:11493
2651 : tp = lookup_bytestring ( ndo , ep , len )ExpressionStatement543:1:11333:11369
2546 : netdissect_options * ndoParameter535:15:11186:11208
2556 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement558:2:11592:11669
2579 : tp -> bs_name = strdup ( buf )ExpressionStatement556:1:11537:11562
2551 : return ( tp -> bs_name ) ;ReturnStatement561:1:11673:11693
2573 : tp -> bs_name == NULLCondition557:5:11569:11587
2596 : cp --ExpressionStatement552:1:11514:11519
2590 : * cp = '\0'ExpressionStatement554:1:11523:11533
2602 : * cp ++ = ':'ExpressionStatement550:2:11497:11508
2634 : i = len ;ForInit548:6:11431:11438
2630 : i > 0Condition548:15:11440:11444
2638 : cp = bufExpressionStatement547:1:11415:11423
2643 : return ( tp -> bs_name ) ;ReturnStatement545:2:11391:11411
2647 : tp -> bs_nameCondition544:5:11376:11386
2664 : char buf [ BUFSIZE ] ;IdentifierDeclStatement541:1:11312:11329
2681 : const unsigned int len = 8 ;IdentifierDeclStatement537:1:11239:11265
2627 : -- iUnaryExpression548:23:11448:11450
2540 : eui64le_stringFunction534:0:11158:11695
2673 : char * cp ;IdentifierDeclStatement539:1:11278:11286
2677 : u_int i ;IdentifierDeclStatement538:1:11268:11275
2669 : struct bsnamemem * tp ;IdentifierDeclStatement540:1:11289:11309
2543 -----> 2610ep
2543 -----> 2651ep
2546 -----> 2556ndo
2546 -----> 2651ndo
2579 -----> 2551tp -> bs_name
2579 -----> 2573tp -> bs_name
2579 -----> 2551 tp
2579 -----> 2573 tp
2596 -----> 2590cp
2602 -----> 2596cp
2602 -----> 2610cp
2610 -----> 2602cp
2634 -----> 2610i
2634 -----> 2630i
2638 -----> 2596cp
2638 -----> 2610cp
2651 -----> 2551tp
2651 -----> 2573tp
2651 -----> 2579tp
2651 -----> 2643tp
2651 -----> 2647tp
2664 -----> 2579buf
2664 -----> 2638buf
2681 -----> 2634len
2681 -----> 2651len
2573 -----> 2556None
2630 -----> 2627None
2630 -----> 2602None
2630 -----> 2610None
2647 -----> 2634None
2647 -----> 2551None
2647 -----> 2638None
2647 -----> 2630None
2647 -----> 2643None
2647 -----> 2596None
2647 -----> 2579None
2647 -----> 2573None
2647 -----> 2590None
2540 -----> 2543None
2540 -----> 2651None
2540 -----> 2546None
2540 -----> 2673None
2540 -----> 2664None
2540 -----> 2677None
2540 -----> 2647None
2540 -----> 2669None
2540 -----> 2681None
2673 -----> 2638cp
2673 -----> 2610cp
2673 -----> 2602cp
2673 -----> 2596cp
2673 -----> 2590cp
2677 -----> 2634i
2677 -----> 2630i
2669 -----> 2651tp
2669 -----> 2647tp
2669 -----> 2643tp
2669 -----> 2579tp
2669 -----> 2573tp
2669 -----> 2551tp
2579 -----> 2573tp
2579 -----> 2551tp
----------------------------pdg--------------------------------------------------
2715 : const unsigned int lenParameter566:27:11804:11825
2771 : i = len - 1 ;ForInit590:6:12330:12339
2816 : tp -> bs_name = cp = ( char * ) malloc ( len * 3 )ExpressionStatement585:1:12149:12189
2842 : tp = lookup_bytestring ( ndo , ep , len )ExpressionStatement581:1:12067:12103
2856 : return ( q922_string ( ndo , ep , len ) ) ;ReturnStatement579:2:12029:12063
2881 : type == LINKADDR_MAC48 && len == MAC48_LENCondition575:5:11918:11959
2892 : len == 0Condition572:5:11880:11887
2718 : const unsigned int typeParameter566:2:11779:11801
2867 : type == LINKADDR_FRELAYCondition578:5:12002:12024
2721 : const unsigned char * epParameter565:41:11752:11774
2777 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement589:1:12294:12322
2872 : return ( mac48_string ( ndo , ep ) ) ;ReturnStatement576:2:11964:11994
2724 : netdissect_options * ndoParameter565:16:11727:11749
2793 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: malloc" , __func__ )ExpressionStatement587:2:12219:12291
2741 : cp = octet_to_hex ( cp , * ep ++ )ExpressionStatement592:2:12373:12401
2733 : * cp = '\0'ExpressionStatement594:1:12407:12417
2756 : * cp ++ = ':'ExpressionStatement591:2:12358:12369
2767 : i > 0Condition590:17:12341:12345
2729 : return ( tp -> bs_name ) ;ReturnStatement595:1:12420:12440
2810 : tp -> bs_name == NULLCondition586:5:12196:12214
2834 : return ( tp -> bs_name ) ;ReturnStatement583:2:12125:12145
2838 : tp -> bs_nameCondition582:5:12110:12120
2764 : -- iUnaryExpression590:25:12349:12351
2890 : return ( "<empty>" ) ;ReturnStatement573:2:11892:11910
2712 : linkaddr_stringFunction564:0:11698:12442
2904 : u_int i ;IdentifierDeclStatement568:1:11831:11838
2896 : struct bsnamemem * tp ;IdentifierDeclStatement570:1:11852:11872
2900 : char * cp ;IdentifierDeclStatement569:1:11841:11849
2715 -----> 2771len
2715 -----> 2816len
2715 -----> 2842len
2715 -----> 2856len
2715 -----> 2881len
2715 -----> 2892len
2718 -----> 2867type
2718 -----> 2881type
2721 -----> 2777ep
2721 -----> 2842ep
2721 -----> 2856ep
2721 -----> 2872ep
2724 -----> 2793ndo
2724 -----> 2842ndo
2724 -----> 2856ndo
2724 -----> 2872ndo
2741 -----> 2733cp
2741 -----> 2756cp
2741 -----> 2741ep
2756 -----> 2741cp
2771 -----> 2767i
2777 -----> 2733cp
2777 -----> 2756cp
2777 -----> 2741ep
2816 -----> 2729tp -> bs_name
2816 -----> 2810tp -> bs_name
2816 -----> 2777cp
2816 -----> 2729 tp
2816 -----> 2810 tp
2842 -----> 2729tp
2842 -----> 2810tp
2842 -----> 2816tp
2842 -----> 2834tp
2842 -----> 2838tp
2767 -----> 2764None
2767 -----> 2756None
2767 -----> 2741None
2810 -----> 2793None
2838 -----> 2834None
2838 -----> 2810None
2838 -----> 2771None
2838 -----> 2777None
2838 -----> 2767None
2838 -----> 2729None
2838 -----> 2816None
2838 -----> 2733None
2867 -----> 2842None
2867 -----> 2838None
2867 -----> 2856None
2881 -----> 2867None
2881 -----> 2872None
2892 -----> 2890None
2892 -----> 2881None
2712 -----> 2892None
2712 -----> 2721None
2712 -----> 2724None
2712 -----> 2904None
2712 -----> 2896None
2712 -----> 2900None
2712 -----> 2718None
2712 -----> 2715None
2721 -----> 2741ep
2904 -----> 2771i
2904 -----> 2767i
2896 -----> 2842tp
2896 -----> 2838tp
2896 -----> 2834tp
2896 -----> 2816tp
2896 -----> 2810tp
2896 -----> 2729tp
2900 -----> 2816cp
2900 -----> 2777cp
2900 -----> 2756cp
2900 -----> 2741cp
2900 -----> 2733cp
2816 -----> 2810tp
2816 -----> 2729tp
----------------------------pdg--------------------------------------------------
2939 : u_int nsap_lengthParameter601:8:12563:12579
2972 : ( ( nsap_idx & 1 ) == 0 ) && ( nsap_idx + 1 < nsap_length )Condition621:6:13110:13169
3002 : nsap_idx < nsap_lengthCondition619:20:13032:13053
3058 : tp = lookup_nsap ( ndo , nsap , nsap_length )ExpressionStatement610:1:12740:12780
3074 : nsap_length < 1 || nsap_length > ISONSAP_MAX_LENGTHCondition607:5:12640:12690
2942 : const unsigned char * nsapParameter600:40:12528:12552
2984 : cp = octet_to_hex ( cp , * nsap ++ )ExpressionStatement620:2:13072:13102
2945 : netdissect_options * ndoParameter600:15:12503:12525
3011 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: malloc" , __func__ )ExpressionStatement616:2:12937:13009
2964 : * cp ++ = '.'ExpressionStatement623:3:13177:13188
2954 : * cp = '\0'ExpressionStatement626:1:13198:13208
2999 : nsap_idx ++IncDecOp619:44:13056:13065
3006 : nsap_idx = 0 ;ForInit619:6:13018:13030
3032 : tp -> e_name = cp = ( char * ) malloc ( sizeof ( "xx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xxxx.xx" ) )ExpressionStatement614:1:12822:12916
3028 : cp == NULLCondition615:5:12923:12932
2950 : return ( tp -> e_name ) ;ReturnStatement627:1:13211:13230
3050 : return tp -> e_name ;ReturnStatement612:2:12801:12818
3054 : tp -> e_nameCondition611:5:12787:12796
3072 : return ( "isonsap_string: illegal length" ) ;ReturnStatement608:2:12695:12736
2936 : isonsap_stringFunction599:0:12475:13232
3090 : u_int nsap_idx ;IdentifierDeclStatement603:1:12585:12599
3082 : struct enamemem * tp ;IdentifierDeclStatement605:1:12613:12632
3086 : char * cp ;IdentifierDeclStatement604:1:12602:12610
2939 -----> 2972nsap_length
2939 -----> 3002nsap_length
2939 -----> 3058nsap_length
2939 -----> 3074nsap_length
2942 -----> 2984nsap
2942 -----> 3058nsap
2945 -----> 3011ndo
2945 -----> 3058ndo
2964 -----> 2954cp
2964 -----> 2984cp
2984 -----> 2954cp
2984 -----> 2964cp
2984 -----> 2984cp
2984 -----> 2984nsap
2999 -----> 2972nsap_idx
2999 -----> 3002nsap_idx
2999 -----> 2999nsap_idx
3006 -----> 2972nsap_idx
3006 -----> 2999nsap_idx
3006 -----> 3002nsap_idx
3032 -----> 2954cp
3032 -----> 2984cp
3032 -----> 3028cp
3032 -----> 2950 tp
3032 -----> 2950tp -> e_name
3058 -----> 2950tp
3058 -----> 3032tp
3058 -----> 3050tp
3058 -----> 3054tp
2972 -----> 2964None
3002 -----> 2972None
3002 -----> 2984None
3002 -----> 2999None
3028 -----> 3011None
3054 -----> 2950None
3054 -----> 3032None
3054 -----> 3006None
3054 -----> 3050None
3054 -----> 2954None
3054 -----> 3028None
3054 -----> 3002None
3074 -----> 3058None
3074 -----> 3072None
3074 -----> 3054None
2936 -----> 3090None
2936 -----> 2942None
2936 -----> 3082None
2936 -----> 2945None
2936 -----> 2939None
2936 -----> 3074None
2936 -----> 3086None
3090 -----> 3006nsap_idx
3090 -----> 3002nsap_idx
3090 -----> 2999nsap_idx
3090 -----> 2972nsap_idx
3082 -----> 3058tp
3082 -----> 3054tp
3082 -----> 3050tp
3082 -----> 3032tp
3082 -----> 2950tp
3086 -----> 3032cp
3086 -----> 3028cp
3086 -----> 2984cp
3086 -----> 2964cp
3086 -----> 2954cp
3032 -----> 2950tp
----------------------------pdg--------------------------------------------------
3120 : u_short portParameter631:40:13288:13299
3241 : unsigned int i = port ;IdentifierDeclStatement634:1:13327:13348
3123 : netdissect_options * ndoParameter631:15:13263:13285
3133 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement647:2:13631:13708
3184 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement642:1:13508:13534
3156 : tp -> name = strdup ( buf )ExpressionStatement645:1:13582:13604
3128 : return ( tp -> name ) ;ReturnStatement649:1:13711:13728
3150 : tp -> name == NULLCondition646:5:13611:13626
3213 : tp = tp -> nxtAssignmentExpr637:55:13434:13445
3195 : tp -> addr = iExpressionStatement641:1:13493:13505
3203 : return ( tp -> name ) ;ReturnStatement639:3:13472:13489
3207 : tp -> addr == iCondition638:6:13454:13466
3218 : tp -> nxtCondition637:46:13425:13431
3222 : tp = & tporttable [ i & ( HASHNAMESIZE - 1 ) ] ;ForInit637:6:13385:13423
3234 : char buf [ sizeof ( "00000" ) ] ;IdentifierDeclStatement635:1:13351:13376
3167 : ( void ) snprintf ( buf , sizeof ( buf ) , "%u" , i )ExpressionStatement644:1:13538:13579
3117 : tcpport_stringFunction630:0:13235:13730
3248 : struct hnamemem * tp ;IdentifierDeclStatement633:1:13305:13324
3120 -----> 3241port
3123 -----> 3133ndo
3123 -----> 3184ndo
3156 -----> 3128tp -> name
3156 -----> 3150tp -> name
3156 -----> 3128 tp
3156 -----> 3150 tp
3213 -----> 3128tp
3213 -----> 3184tp
3213 -----> 3195tp
3213 -----> 3150tp
3213 -----> 3203tp
3213 -----> 3207tp
3213 -----> 3156tp
3213 -----> 3218tp
3213 -----> 3213tp
3222 -----> 3184tp
3222 -----> 3156tp
3222 -----> 3195tp
3222 -----> 3150tp
3222 -----> 3128tp
3222 -----> 3203tp
3222 -----> 3207tp
3222 -----> 3213tp
3222 -----> 3218tp
3234 -----> 3156buf
3234 -----> 3167buf
3241 -----> 3167i
3241 -----> 3195i
3241 -----> 3207i
3241 -----> 3222i
3150 -----> 3133None
3207 -----> 3218None
3207 -----> 3213None
3207 -----> 3203None
3218 -----> 3156None
3218 -----> 3150None
3218 -----> 3184None
3218 -----> 3167None
3218 -----> 3195None
3218 -----> 3207None
3218 -----> 3128None
3117 -----> 3123None
3117 -----> 3234None
3117 -----> 3120None
3117 -----> 3218None
3117 -----> 3222None
3117 -----> 3248None
3117 -----> 3241None
3248 -----> 3222tp
3248 -----> 3218tp
3248 -----> 3213tp
3248 -----> 3207tp
3248 -----> 3203tp
3248 -----> 3195tp
3248 -----> 3184tp
3248 -----> 3156tp
3248 -----> 3150tp
3248 -----> 3128tp
3195 -----> 3184tp
3184 -----> 3156tp
3156 -----> 3150tp
3156 -----> 3128tp
----------------------------pdg--------------------------------------------------
3278 : u_short portParameter653:40:13786:13797
3399 : unsigned int i = port ;IdentifierDeclStatement656:1:13825:13846
3281 : netdissect_options * ndoParameter653:15:13761:13783
3291 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement669:2:14129:14206
3342 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement664:1:14006:14032
3314 : tp -> name = strdup ( buf )ExpressionStatement667:1:14080:14102
3286 : return ( tp -> name ) ;ReturnStatement671:1:14209:14226
3308 : tp -> name == NULLCondition668:5:14109:14124
3371 : tp = tp -> nxtAssignmentExpr659:55:13932:13943
3353 : tp -> addr = iExpressionStatement663:1:13991:14003
3361 : return ( tp -> name ) ;ReturnStatement661:3:13970:13987
3365 : tp -> addr == iCondition660:6:13952:13964
3376 : tp -> nxtCondition659:46:13923:13929
3380 : tp = & uporttable [ i & ( HASHNAMESIZE - 1 ) ] ;ForInit659:6:13883:13921
3392 : char buf [ sizeof ( "00000" ) ] ;IdentifierDeclStatement657:1:13849:13874
3325 : ( void ) snprintf ( buf , sizeof ( buf ) , "%u" , i )ExpressionStatement666:1:14036:14077
3275 : udpport_stringFunction652:0:13733:14228
3406 : struct hnamemem * tp ;IdentifierDeclStatement655:1:13803:13822
3278 -----> 3399port
3281 -----> 3291ndo
3281 -----> 3342ndo
3314 -----> 3286tp -> name
3314 -----> 3308tp -> name
3314 -----> 3286 tp
3314 -----> 3308 tp
3371 -----> 3342tp
3371 -----> 3308tp
3371 -----> 3353tp
3371 -----> 3361tp
3371 -----> 3314tp
3371 -----> 3286tp
3371 -----> 3365tp
3371 -----> 3376tp
3371 -----> 3371tp
3380 -----> 3353tp
3380 -----> 3361tp
3380 -----> 3342tp
3380 -----> 3308tp
3380 -----> 3314tp
3380 -----> 3365tp
3380 -----> 3286tp
3380 -----> 3371tp
3380 -----> 3376tp
3392 -----> 3314buf
3392 -----> 3325buf
3399 -----> 3325i
3399 -----> 3353i
3399 -----> 3365i
3399 -----> 3380i
3308 -----> 3291None
3365 -----> 3371None
3365 -----> 3361None
3365 -----> 3376None
3376 -----> 3314None
3376 -----> 3286None
3376 -----> 3342None
3376 -----> 3308None
3376 -----> 3365None
3376 -----> 3325None
3376 -----> 3353None
3275 -----> 3278None
3275 -----> 3392None
3275 -----> 3376None
3275 -----> 3281None
3275 -----> 3399None
3275 -----> 3406None
3275 -----> 3380None
3406 -----> 3380tp
3406 -----> 3376tp
3406 -----> 3371tp
3406 -----> 3365tp
3406 -----> 3361tp
3406 -----> 3353tp
3406 -----> 3342tp
3406 -----> 3314tp
3406 -----> 3308tp
3406 -----> 3286tp
3353 -----> 3342tp
3342 -----> 3314tp
3314 -----> 3308tp
3314 -----> 3286tp
----------------------------pdg--------------------------------------------------
3436 : u_short portParameter675:39:14283:14294
3545 : port = ntohs ( port )ExpressionStatement690:1:14555:14573
3615 : unsigned int i = port ;IdentifierDeclStatement679:1:14333:14354
3439 : netdissect_options * ndoParameter675:14:14258:14280
3449 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(buf)" , __func__ )ExpressionStatement698:2:14760:14837
3558 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement687:1:14514:14540
3472 : tp -> name = strdup ( buf )ExpressionStatement696:1:14711:14733
3444 : return ( tp -> name ) ;ReturnStatement700:1:14840:14857
3466 : tp -> name == NULLCondition697:5:14740:14755
3491 : * cp ++ = hex [ port & 0xf ]ExpressionStatement694:1:14670:14693
3483 : * cp ++ = '\0'ExpressionStatement695:1:14696:14708
3503 : * cp ++ = hex [ port >> 4 & 0xf ]ExpressionStatement693:1:14639:14667
3517 : * cp ++ = hex [ port >> 8 & 0xf ]ExpressionStatement692:1:14608:14636
3531 : * cp ++ = hex [ port >> 12 & 0xf ]ExpressionStatement691:1:14576:14605
3554 : cp = bufExpressionStatement689:1:14544:14552
3587 : tp = tp -> nxtAssignmentExpr682:56:14440:14451
3569 : tp -> addr = iExpressionStatement686:1:14499:14511
3581 : tp -> addr == iCondition683:6:14460:14472
3592 : tp -> nxtCondition682:47:14431:14437
3577 : return ( tp -> name ) ;ReturnStatement684:3:14478:14495
3596 : tp = & ipxsaptable [ i & ( HASHNAMESIZE - 1 ) ] ;ForInit682:6:14390:14429
3608 : char buf [ sizeof ( "0000" ) ] ;IdentifierDeclStatement680:1:14357:14381
3433 : ipxsap_stringFunction674:0:14231:14859
3622 : struct hnamemem * tp ;IdentifierDeclStatement678:1:14311:14330
3626 : char * cp ;IdentifierDeclStatement677:1:14300:14308
3436 -----> 3545port
3436 -----> 3615port
3439 -----> 3449ndo
3439 -----> 3558ndo
3472 -----> 3444tp -> name
3472 -----> 3466tp -> name
3472 -----> 3444 tp
3472 -----> 3466 tp
3491 -----> 3483cp
3503 -----> 3491cp
3517 -----> 3503cp
3531 -----> 3517cp
3545 -----> 3491port
3545 -----> 3503port
3545 -----> 3517port
3545 -----> 3531port
3554 -----> 3531cp
3587 -----> 3558tp
3587 -----> 3569tp
3587 -----> 3472tp
3587 -----> 3581tp
3587 -----> 3444tp
3587 -----> 3466tp
3587 -----> 3592tp
3587 -----> 3577tp
3587 -----> 3587tp
3596 -----> 3558tp
3596 -----> 3569tp
3596 -----> 3577tp
3596 -----> 3472tp
3596 -----> 3466tp
3596 -----> 3581tp
3596 -----> 3444tp
3596 -----> 3587tp
3596 -----> 3592tp
3608 -----> 3472buf
3608 -----> 3554buf
3615 -----> 3569i
3615 -----> 3581i
3615 -----> 3596i
3466 -----> 3449None
3581 -----> 3592None
3581 -----> 3577None
3581 -----> 3587None
3592 -----> 3444None
3592 -----> 3483None
3592 -----> 3558None
3592 -----> 3569None
3592 -----> 3545None
3592 -----> 3466None
3592 -----> 3472None
3592 -----> 3554None
3592 -----> 3517None
3592 -----> 3503None
3592 -----> 3491None
3592 -----> 3531None
3592 -----> 3581None
3433 -----> 3622None
3433 -----> 3615None
3433 -----> 3608None
3433 -----> 3436None
3433 -----> 3596None
3433 -----> 3626None
3433 -----> 3592None
3433 -----> 3439None
3622 -----> 3596tp
3622 -----> 3592tp
3622 -----> 3587tp
3622 -----> 3581tp
3622 -----> 3577tp
3622 -----> 3569tp
3622 -----> 3558tp
3622 -----> 3472tp
3622 -----> 3466tp
3622 -----> 3444tp
3626 -----> 3554cp
3626 -----> 3531cp
3626 -----> 3517cp
3626 -----> 3503cp
3626 -----> 3491cp
3626 -----> 3483cp
3569 -----> 3558tp
3558 -----> 3472tp
3472 -----> 3466tp
3472 -----> 3444tp
----------------------------pdg--------------------------------------------------
3663 : netdissect_options * ndoParameter704:15:14889:14911
3675 : table -> nxt = newhnamemem ( ndo )ExpressionStatement733:2:15588:15617
3693 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup" , __func__ )ExpressionStatement729:3:15488:15561
3760 : ndo -> ndo_nflagCondition723:6:15315:15328
3765 : table = table -> nxtExpressionStatement722:3:15289:15307
3771 : table -> nameCondition721:9:15273:15283
3718 : table -> name = strdup ( sv -> s_name )ExpressionStatement727:3:15424:15456
3710 : table -> name == NULLCondition728:6:15464:15482
3732 : table -> name = strdup ( buf )ExpressionStatement725:3:15385:15410
3686 : table -> addr = portExpressionStatement732:2:15566:15584
3780 : table = & uporttable [ i ]ExpressionStatement717:3:15219:15241
3801 : table = & tporttable [ i ]ExpressionStatement715:3:15148:15170
3822 : i = port & ( HASHNAMESIZE - 1 )ExpressionStatement713:2:15077:15104
3830 : int port = ntohs ( sv -> s_port ) ;IdentifierDeclStatement712:2:15045:15073
3743 : ( void ) snprintf ( buf , sizeof ( buf ) , "%d" , port )ExpressionStatement724:3:15336:15380
3844 : ( sv = getservent ( ) ) != NULLCondition711:8:15012:15038
3788 : strcmp ( sv -> s_proto , "udp" ) == 0Condition716:11:15183:15213
3809 : strcmp ( sv -> s_proto , "tcp" ) == 0Condition714:6:15112:15142
3853 : char buf [ sizeof ( "0000000000" ) ] ;IdentifierDeclStatement709:1:14971:15001
3779 : continue ;ContinueStatement719:3:15253:15261
3660 : init_servarrayFunction703:0:14862:15637
3864 : struct hnamemem * table ;IdentifierDeclStatement707:1:14938:14960
3860 : int i ;IdentifierDeclStatement708:1:14963:14968
3668 : endservent ( )ExpressionStatement735:1:15623:15635
3868 : struct servent * sv ;IdentifierDeclStatement706:1:14917:14935
3663 -----> 3675ndo
3663 -----> 3693ndo
3663 -----> 3760ndo
3675 -----> 3765 table
3675 -----> 3771 table
3675 -----> 3765table -> nxt
3718 -----> 3710 table
3718 -----> 3710table -> name
3718 -----> 3771table -> name
3732 -----> 3710 table
3732 -----> 3710table -> name
3732 -----> 3771table -> name
3765 -----> 3710table
3765 -----> 3718table
3765 -----> 3675table
3765 -----> 3686table
3765 -----> 3732table
3765 -----> 3771table
3765 -----> 3765table
3780 -----> 3718table
3780 -----> 3710table
3780 -----> 3732table
3780 -----> 3765table
3780 -----> 3686table
3780 -----> 3675table
3780 -----> 3771table
3801 -----> 3732table
3801 -----> 3710table
3801 -----> 3675table
3801 -----> 3718table
3801 -----> 3686table
3801 -----> 3771table
3801 -----> 3765table
3822 -----> 3780i
3822 -----> 3801i
3830 -----> 3686port
3830 -----> 3743port
3830 -----> 3822port
3844 -----> 3718sv
3844 -----> 3788sv
3844 -----> 3809sv
3844 -----> 3830sv
3853 -----> 3732buf
3853 -----> 3743buf
3710 -----> 3693None
3760 -----> 3718None
3760 -----> 3743None
3760 -----> 3732None
3771 -----> 3765None
3788 -----> 3771None
3788 -----> 3760None
3788 -----> 3779None
3788 -----> 3710None
3788 -----> 3675None
3788 -----> 3686None
3788 -----> 3780None
3809 -----> 3771None
3809 -----> 3760None
3809 -----> 3788None
3809 -----> 3801None
3809 -----> 3710None
3809 -----> 3675None
3809 -----> 3686None
3844 -----> 3809None
3844 -----> 3822None
3844 -----> 3830None
3660 -----> 3864None
3660 -----> 3844None
3660 -----> 3860None
3660 -----> 3853None
3660 -----> 3663None
3660 -----> 3668None
3660 -----> 3868None
3864 -----> 3801table
3864 -----> 3780table
3864 -----> 3771table
3864 -----> 3765table
3864 -----> 3732table
3864 -----> 3718table
3864 -----> 3710table
3864 -----> 3686table
3864 -----> 3675table
3860 -----> 3822i
3868 -----> 3844sv
3868 -----> 3809sv
3868 -----> 3788sv
3718 -----> 3710table
3718 -----> 3686table
3686 -----> 3675table
----------------------------pdg--------------------------------------------------
3915 : netdissect_options * ndoParameter758:17:16119:16141
3922 : table -> nxt = newhnamemem ( ndo )ExpressionStatement770:2:16413:16442
3959 : table = table -> nxtExpressionStatement767:3:16320:16338
3965 : table -> nameCondition766:9:16304:16314
3948 : table -> name = eproto_db [ i ] . sExpressionStatement768:2:16342:16370
3933 : table -> addr = htons ( eproto_db [ i ] . p )ExpressionStatement769:2:16374:16409
3969 : table = & eprototable [ j ]ExpressionStatement765:2:16270:16293
3977 : int j = htons ( eproto_db [ i ] . p ) & ( HASHNAMESIZE - 1 ) ;IdentifierDeclStatement764:2:16218:16266
3997 : i ++IncDecOp763:29:16209:16211
4000 : eproto_db [ i ] . sCondition763:13:16193:16206
4006 : i = 0 ;ForInit763:6:16186:16191
3912 : init_eprotoarrayFunction757:0:16090:16447
4010 : struct hnamemem * table ;IdentifierDeclStatement761:1:16155:16177
4014 : int i ;IdentifierDeclStatement760:1:16147:16152
3915 -----> 3922ndo
3922 -----> 3959 table
3922 -----> 3965 table
3922 -----> 3959table -> nxt
3948 -----> 3965table -> name
3959 -----> 3933table
3959 -----> 3948table
3959 -----> 3922table
3959 -----> 3965table
3959 -----> 3959table
3969 -----> 3922table
3969 -----> 3933table
3969 -----> 3948table
3969 -----> 3959table
3969 -----> 3965table
3977 -----> 3969j
3997 -----> 3977i
3997 -----> 3948i
3997 -----> 3933i
3997 -----> 4000i
3997 -----> 3997i
4006 -----> 3933i
4006 -----> 3948i
4006 -----> 3977i
4006 -----> 3997i
4006 -----> 4000i
3965 -----> 3959None
4000 -----> 3969None
4000 -----> 3977None
4000 -----> 3922None
4000 -----> 3948None
4000 -----> 3933None
4000 -----> 3997None
4000 -----> 3965None
3912 -----> 4000None
3912 -----> 3915None
3912 -----> 4006None
3912 -----> 4010None
3912 -----> 4014None
4010 -----> 3969table
4010 -----> 3965table
4010 -----> 3959table
4010 -----> 3948table
4010 -----> 3933table
4010 -----> 3922table
4014 -----> 4006i
4014 -----> 4000i
4014 -----> 3997i
3948 -----> 3933table
3933 -----> 3922table
----------------------------pdg--------------------------------------------------
4049 : netdissect_options * ndoParameter788:18:16880:16902
4072 : tp = lookup_protoid ( ndo , pl -> protoid )ExpressionStatement810:2:17420:17457
4101 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(eproto_db[i].s)" , __func__ )ExpressionStatement805:3:17275:17361
4139 : tp = lookup_protoid ( ndo , protoid )ExpressionStatement802:2:17172:17205
4056 : tp -> p_name = pl -> nameExpressionStatement815:2:17504:17525
4066 : tp -> p_name != NULLCondition812:6:17468:17485
4094 : pl = protoidlist ;ForInit809:6:17374:17390
4088 : pl -> name != NULLCondition809:24:17392:17407
4124 : tp -> p_name = strdup ( eproto_db [ i ] . s )ExpressionStatement803:2:17209:17244
4118 : tp -> p_name == NULLCondition804:6:17252:17269
4187 : i ++IncDecOp798:29:17071:17073
4171 : u_short etype = htons ( eproto_db [ i ] . p ) ;IdentifierDeclStatement799:2:17080:17117
4190 : eproto_db [ i ] . sCondition798:13:17055:17068
4196 : i = 0 ;ForInit798:6:17048:17053
4218 : u_char protoid [ 5 ] ;IdentifierDeclStatement793:1:16971:16988
4150 : memcpy ( ( char * ) & protoid [ 3 ] , ( char * ) & etype , 2 )ExpressionStatement801:2:17122:17168
4200 : protoid [ 2 ] = 0ExpressionStatement797:1:17026:17040
4206 : protoid [ 1 ] = 0ExpressionStatement796:1:17009:17023
4212 : protoid [ 0 ] = 0ExpressionStatement795:1:16992:17006
4065 : continue ;ContinueStatement813:3:17491:17499
4085 : ++ plUnaryExpression809:42:17410:17413
4046 : init_protoidarrayFunction787:0:16850:17530
4231 : int i ;IdentifierDeclStatement790:1:16908:16913
4223 : const struct protoidlist * pl ;IdentifierDeclStatement792:1:16940:16968
4227 : struct protoidmem * tp ;IdentifierDeclStatement791:1:16916:16937
4049 -----> 4072ndo
4049 -----> 4101ndo
4049 -----> 4139ndo
4056 -----> 4066 tp
4056 -----> 4066tp -> p_name
4072 -----> 4056tp
4072 -----> 4066tp
4094 -----> 4056pl
4094 -----> 4072pl
4094 -----> 4088pl
4124 -----> 4066 tp
4124 -----> 4118 tp
4124 -----> 4066tp -> p_name
4124 -----> 4118tp -> p_name
4139 -----> 4118tp
4139 -----> 4124tp
4187 -----> 4124i
4187 -----> 4171i
4187 -----> 4190i
4187 -----> 4187i
4196 -----> 4124i
4196 -----> 4171i
4196 -----> 4187i
4196 -----> 4190i
4218 -----> 4139protoid
4218 -----> 4150protoid
4218 -----> 4200protoid
4218 -----> 4206protoid
4218 -----> 4212protoid
4066 -----> 4065None
4066 -----> 4085None
4066 -----> 4056None
4088 -----> 4072None
4088 -----> 4066None
4118 -----> 4101None
4190 -----> 4187None
4190 -----> 4150None
4190 -----> 4171None
4190 -----> 4124None
4190 -----> 4139None
4190 -----> 4118None
4046 -----> 4231None
4046 -----> 4212None
4046 -----> 4094None
4046 -----> 4223None
4046 -----> 4088None
4046 -----> 4049None
4046 -----> 4227None
4046 -----> 4196None
4046 -----> 4218None
4046 -----> 4200None
4046 -----> 4190None
4046 -----> 4206None
4231 -----> 4196i
4231 -----> 4190i
4231 -----> 4187i
4223 -----> 4094pl
4223 -----> 4088pl
4227 -----> 4139tp
4227 -----> 4124tp
4227 -----> 4118tp
4227 -----> 4072tp
4227 -----> 4066tp
4227 -----> 4056tp
4212 -----> 4206protoid
4206 -----> 4200protoid
4200 -----> 4150protoid
4200 -----> 4139protoid
4124 -----> 4118tp
4124 -----> 4066tp
4124 -----> 4056tp
----------------------------pdg--------------------------------------------------
4275 : netdissect_options * ndoParameter829:16:17763:17785
4294 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: strdup(name)" , __func__ )ExpressionStatement868:4:18574:18651
4368 : tp = lookup_emem ( ndo , el -> addr )ExpressionStatement855:2:18306:18337
4282 : tp -> e_name = el -> nameExpressionStatement873:2:18679:18700
4362 : tp -> e_name != NULLCondition857:6:18348:18365
4317 : tp -> e_name = strdup ( name )ExpressionStatement866:3:18516:18541
4311 : tp -> e_name == NULLCondition867:7:18550:18567
4390 : el = etherlist ;ForInit854:6:18262:18276
4341 : memcpy ( & ea , el -> addr , MAC48_LEN )ExpressionStatement864:2:18439:18472
4384 : el -> name != NULLCondition854:22:18278:18293
4394 : char name [ 256 ] ;IdentifierDeclStatement834:1:17867:17881
4328 : ether_ntohost ( name , & ea ) == 0Condition865:6:18480:18508
4381 : ++ elUnaryExpression854:40:18296:18299
4292 : continue ;ContinueStatement870:3:18656:18664
4356 : struct ether_addr ea ;IdentifierDeclStatement863:2:18415:18435
4361 : continue ;ContinueStatement858:3:18371:18379
4272 : init_etherarrayFunction828:0:17735:18705
4403 : const struct etherlist * el ;IdentifierDeclStatement831:1:17791:17817
4399 : struct enamemem * tp ;IdentifierDeclStatement832:1:17820:17839
4275 -----> 4294ndo
4275 -----> 4368ndo
4282 -----> 4362tp -> e_name
4282 -----> 4362 tp
4317 -----> 4311tp -> e_name
4317 -----> 4362tp -> e_name
4317 -----> 4311 tp
4317 -----> 4362 tp
4368 -----> 4282tp
4368 -----> 4311tp
4368 -----> 4317tp
4368 -----> 4362tp
4390 -----> 4282el
4390 -----> 4341el
4390 -----> 4368el
4390 -----> 4384el
4394 -----> 4317name
4394 -----> 4328name
4311 -----> 4294None
4328 -----> 4282None
4328 -----> 4381None
4328 -----> 4311None
4328 -----> 4292None
4328 -----> 4317None
4362 -----> 4356None
4362 -----> 4328None
4362 -----> 4341None
4362 -----> 4361None
4384 -----> 4362None
4384 -----> 4368None
4272 -----> 4275None
4272 -----> 4403None
4272 -----> 4394None
4272 -----> 4384None
4272 -----> 4390None
4272 -----> 4399None
4356 -----> 4341ea
4356 -----> 4328ea
4403 -----> 4390el
4403 -----> 4384el
4399 -----> 4368tp
4399 -----> 4362tp
4399 -----> 4317tp
4399 -----> 4311tp
4399 -----> 4282tp
4341 -----> 4328ea
4317 -----> 4311tp
----------------------------pdg--------------------------------------------------
4440 : netdissect_options * ndoParameter1098:17:26194:26216
4447 : table -> nxt = newhnamemem ( ndo )ExpressionStatement1110:2:26498:26527
4484 : table = table -> nxtExpressionStatement1107:3:26405:26423
4490 : table -> nameCondition1106:9:26389:26399
4473 : table -> name = ipxsap_db [ i ] . sExpressionStatement1108:2:26427:26455
4458 : table -> addr = htons ( ipxsap_db [ i ] . v )ExpressionStatement1109:2:26459:26494
4494 : table = & ipxsaptable [ j ]ExpressionStatement1105:2:26355:26378
4502 : u_int j = htons ( ipxsap_db [ i ] . v ) & ( HASHNAMESIZE - 1 ) ;IdentifierDeclStatement1104:2:26301:26351
4522 : i ++IncDecOp1103:37:26292:26294
4525 : ipxsap_db [ i ] . s != NULLCondition1103:13:26268:26289
4533 : i = 0 ;ForInit1103:6:26261:26266
4437 : init_ipxsaparrayFunction1097:0:26165:26532
4537 : struct hnamemem * table ;IdentifierDeclStatement1101:1:26230:26252
4541 : int i ;IdentifierDeclStatement1100:1:26222:26227
4440 -----> 4447ndo
4447 -----> 4484 table
4447 -----> 4490 table
4447 -----> 4484table -> nxt
4473 -----> 4490table -> name
4484 -----> 4447table
4484 -----> 4458table
4484 -----> 4473table
4484 -----> 4490table
4484 -----> 4484table
4494 -----> 4458table
4494 -----> 4447table
4494 -----> 4473table
4494 -----> 4484table
4494 -----> 4490table
4502 -----> 4494j
4522 -----> 4458i
4522 -----> 4473i
4522 -----> 4502i
4522 -----> 4525i
4522 -----> 4522i
4533 -----> 4473i
4533 -----> 4502i
4533 -----> 4458i
4533 -----> 4525i
4533 -----> 4522i
4490 -----> 4484None
4525 -----> 4494None
4525 -----> 4490None
4525 -----> 4473None
4525 -----> 4458None
4525 -----> 4502None
4525 -----> 4522None
4525 -----> 4447None
4437 -----> 4440None
4437 -----> 4533None
4437 -----> 4537None
4437 -----> 4541None
4437 -----> 4525None
4537 -----> 4494table
4537 -----> 4490table
4537 -----> 4484table
4537 -----> 4473table
4537 -----> 4458table
4537 -----> 4447table
4541 -----> 4533i
4541 -----> 4525i
4541 -----> 4522i
4473 -----> 4458table
4458 -----> 4447table
----------------------------pdg--------------------------------------------------
4570 : unsigned int maskParameter1116:64:26605:26621
4624 : f_netmask = maskExpressionStatement1120:2:26676:26692
4573 : unsigned int localnetParameter1116:41:26582:26602
4628 : f_localnet = localnetExpressionStatement1119:2:26651:26672
4576 : netdissect_options * ndoParameter1116:16:26557:26579
4581 : init_ipxsaparray ( ndo )ExpressionStatement1130:1:26827:26848
4588 : init_protoidarray ( ndo )ExpressionStatement1129:1:26802:26824
4595 : init_eprotoarray ( ndo )ExpressionStatement1128:1:26778:26799
4602 : init_servarray ( ndo )ExpressionStatement1127:1:26756:26775
4609 : init_etherarray ( ndo )ExpressionStatement1126:1:26733:26753
4618 : ndo -> ndo_nflagCondition1122:5:26702:26715
4632 : ndo -> ndo_fflagCondition1118:5:26631:26644
4617 : return ;ReturnStatement1124:2:26723:26729
4567 : init_addrtonameFunction1115:0:26536:26850
4570 -----> 4624mask
4573 -----> 4628localnet
4576 -----> 4581ndo
4576 -----> 4588ndo
4576 -----> 4595ndo
4576 -----> 4602ndo
4576 -----> 4609ndo
4576 -----> 4618ndo
4576 -----> 4632ndo
4618 -----> 4609None
4618 -----> 4588None
4618 -----> 4617None
4618 -----> 4581None
4618 -----> 4595None
4618 -----> 4602None
4632 -----> 4628None
4632 -----> 4624None
4567 -----> 4570None
4567 -----> 4576None
4567 -----> 4618None
4567 -----> 4573None
4567 -----> 4632None
----------------------------pdg--------------------------------------------------
4649 : u_short dnaddrParameter1134:39:26905:26918
4661 : tp -> name = dnnum_string ( ndo , dnaddr )ExpressionStatement1145:1:27134:27170
4685 : tp -> addr = dnaddrExpressionStatement1143:1:27085:27102
4697 : tp -> addr == dnaddrCondition1140:6:27041:27058
4714 : tp = & dnaddrtable [ dnaddr & ( HASHNAMESIZE - 1 ) ] ;ForInit1138:6:26952:26996
4652 : netdissect_options * ndoParameter1134:14:26880:26902
4674 : tp -> nxt = newhnamemem ( ndo )ExpressionStatement1144:1:27105:27131
4657 : return ( tp -> name ) ;ReturnStatement1147:1:27174:27190
4703 : tp = tp -> nxtAssignmentExpr1139:6:27021:27032
4693 : return ( tp -> name ) ;ReturnStatement1141:3:27064:27081
4708 : tp -> nxt != NULLCondition1138:52:26998:27012
4646 : dnaddr_stringFunction1133:0:26853:27192
4726 : struct hnamemem * tp ;IdentifierDeclStatement1136:1:26924:26943
4649 -----> 4661dnaddr
4649 -----> 4685dnaddr
4649 -----> 4697dnaddr
4649 -----> 4714dnaddr
4652 -----> 4661ndo
4652 -----> 4674ndo
4661 -----> 4657tp -> name
4661 -----> 4657 tp
4703 -----> 4685tp
4703 -----> 4693tp
4703 -----> 4697tp
4703 -----> 4674tp
4703 -----> 4657tp
4703 -----> 4661tp
4703 -----> 4708tp
4703 -----> 4703tp
4714 -----> 4661tp
4714 -----> 4657tp
4714 -----> 4674tp
4714 -----> 4685tp
4714 -----> 4693tp
4714 -----> 4697tp
4714 -----> 4703tp
4714 -----> 4708tp
4697 -----> 4693None
4697 -----> 4703None
4697 -----> 4708None
4708 -----> 4697None
4708 -----> 4661None
4708 -----> 4657None
4708 -----> 4685None
4708 -----> 4674None
4646 -----> 4726None
4646 -----> 4714None
4646 -----> 4652None
4646 -----> 4649None
4646 -----> 4708None
4726 -----> 4714tp
4726 -----> 4708tp
4726 -----> 4703tp
4726 -----> 4697tp
4726 -----> 4693tp
4726 -----> 4685tp
4726 -----> 4674tp
4726 -----> 4661tp
4726 -----> 4657tp
4685 -----> 4674tp
4674 -----> 4661tp
4661 -----> 4657tp
----------------------------pdg--------------------------------------------------
4750 : netdissect_options * ndoParameter1152:12:27226:27248
4770 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement1162:3:27442:27515
4757 : p = ptr ++ExpressionStatement1166:1:27529:27538
4755 : return ( p ) ;ReturnStatement1167:1:27541:27551
4791 : ptr = ( struct hnamemem * ) calloc ( num , sizeof ( * ptr ) )ExpressionStatement1160:2:27367:27418
4787 : ptr == NULLCondition1161:6:27426:27436
4808 : num = 64ExpressionStatement1159:2:27355:27363
4816 : static u_int num = 0 ;IdentifierDeclStatement1156:8:27319:27332
4812 : num == 0Condition1158:5:27340:27348
4824 : static struct hnamemem * ptr = NULL ;IdentifierDeclStatement1155:8:27282:27309
4747 : newhnamememFunction1151:0:27196:27553
4763 : -- numExpressionStatement1165:1:27521:27526
4832 : struct hnamemem * p ;IdentifierDeclStatement1154:1:27254:27272
4750 -----> 4770ndo
4757 -----> 4755p
4791 -----> 4757ptr
4791 -----> 4787ptr
4808 -----> 4791num
4816 -----> 4812num
4824 -----> 4757ptr
4824 -----> 4791ptr
4787 -----> 4770None
4812 -----> 4787None
4812 -----> 4791None
4812 -----> 4808None
4747 -----> 4816None
4747 -----> 4812None
4747 -----> 4757None
4747 -----> 4763None
4747 -----> 4832None
4747 -----> 4750None
4747 -----> 4755None
4747 -----> 4824None
4832 -----> 4757p
4832 -----> 4755p
----------------------------pdg--------------------------------------------------
4852 : netdissect_options * ndoParameter1172:13:27589:27611
4872 : ( * ndo -> ndo_error ) ( ndo , S_ERR_ND_MEM_ALLOC , "%s: calloc" , __func__ )ExpressionStatement1182:3:27808:27881
4859 : p = ptr ++ExpressionStatement1186:1:27895:27904
4857 : return ( p ) ;ReturnStatement1187:1:27907:27917
4893 : ptr = ( struct h6namemem * ) calloc ( num , sizeof ( * ptr ) )ExpressionStatement1180:2:27732:27784
4889 : ptr == NULLCondition1181:6:27792:27802
4910 : num = 64ExpressionStatement1179:2:27720:27728
4918 : static u_int num = 0 ;IdentifierDeclStatement1176:8:27684:27697
4914 : num == 0Condition1178:5:27705:27713
4926 : static struct h6namemem * ptr = NULL ;IdentifierDeclStatement1175:8:27646:27674
4849 : newh6namememFunction1171:0:27557:27919
4865 : -- numExpressionStatement1185:1:27887:27892
4934 : struct h6namemem * p ;IdentifierDeclStatement1174:1:27617:27636
4852 -----> 4872ndo
4859 -----> 4857p
4893 -----> 4859ptr
4893 -----> 4889ptr
4910 -----> 4893num
4918 -----> 4914num
4926 -----> 4859ptr
4926 -----> 4893ptr
4889 -----> 4872None
4914 -----> 4889None
4914 -----> 4910None
4914 -----> 4893None
4849 -----> 4926None
4849 -----> 4859None
4849 -----> 4918None
4849 -----> 4914None
4849 -----> 4865None
4849 -----> 4934None
4849 -----> 4852None
4849 -----> 4857None
4934 -----> 4859p
4934 -----> 4857p
----------------------------pdg--------------------------------------------------
4954 : const unsigned short tciParameter1192:21:27957:27980
4961 : snprintf ( buf , sizeof ( buf ) , "vlan %u, p %u%s" , tci & 0xfff , tci >> 13 , ( tci & 0x1000 ) ? ", DEI" : "" )ExpressionStatement1195:1:28009:28139
4990 : static char buf [ 128 ] ;IdentifierDeclStatement1194:8:27993:28006
4959 : return buf ;ReturnStatement1199:1:28142:28152
4951 : ieee8021q_tci_stringFunction1191:0:27923:28154
4954 -----> 4961tci
4990 -----> 4959buf
4990 -----> 4961buf
4951 -----> 4954None
4951 -----> 4961None
4951 -----> 4959None
4951 -----> 4990None
4961 -----> 4959buf
----------------------------pdg--------------------------------------------------
17 : const char * fileParameter16:21:284:299
26 : snprintf ( path , sizeof ( path ) , "%s%s%s" , env , __PATH_ETC_INET , file )ExpressionStatement26:4:473:539
45 : return ( file ) ;ReturnStatement23:8:431:444
47 : fopen ( file , "r" ) || ! envCondition22:8:397:420
60 : static char path [ _MAX_PATH ] ;IdentifierDeclStatement19:11:361:381
22 : return ( path ) ;ReturnStatement30:4:611:624
66 : const char * env = getenv ( __PATH_SYSROOT ) ;IdentifierDeclStatement18:4:308:348
14 : etc_pathFunction16:0:263:626
17 -----> 26file
17 -----> 45file
17 -----> 47file
60 -----> 22path
60 -----> 26path
66 -----> 26env
66 -----> 47env
47 -----> 26None
47 -----> 45None
47 -----> 22None
14 -----> 60None
14 -----> 17None
14 -----> 47None
14 -----> 66None
26 -----> 22path
----------------------------pdg--------------------------------------------------
90 : int fParameter34:11:645:649
95 : _serv_stayopen |= fExpressionStatement40:4:768:787
124 : servf == NULLCondition36:8:662:674
101 : rewind ( servf )ExpressionStatement39:8:749:762
108 : servf = fopen ( etc_path ( __PATH_SERVICES ) , "r" )ExpressionStatement37:8:685:730
87 : setserventFunction33:0:629:789
90 -----> 95f
124 -----> 101None
124 -----> 108None
87 -----> 95None
87 -----> 90None
87 -----> 124None
----------------------------pdg--------------------------------------------------
159 : servfCondition46:8:824:828
148 : servf = NULLExpressionStatement48:8:864:876
152 : fclose ( servf )ExpressionStatement47:8:841:854
137 : endserventFunction43:0:792:908
142 : _serv_stayopen = 0ExpressionStatement50:4:888:906
159 -----> 148None
159 -----> 152None
137 -----> 142None
137 -----> 159None
----------------------------pdg--------------------------------------------------
184 : * cp ++ = '\0'ExpressionStatement97:12:1957:1969
245 : cp && * cpCondition88:11:1714:1722
233 : * cp == ' ' || * cp == '\t'Condition89:12:1739:1763
229 : cp ++ExpressionStatement90:12:1780:1784
196 : cp = strpbrk ( cp , " \t" )ExpressionStatement95:8:1896:1919
208 : * q ++ = cpExpressionStatement94:12:1877:1886
192 : cp != NULLCondition96:12:1933:1942
175 : * q = NULLExpressionStatement99:4:1981:1990
216 : q < & serv_aliases [ MAXALIASES - 1 ]Condition93:12:1830:1862
252 : * cp ++ = '\0'ExpressionStatement87:8:1689:1701
264 : cp = strpbrk ( cp , " \t" )ExpressionStatement85:4:1636:1659
260 : cp != NULLCondition86:8:1669:1678
275 : q = serv . s_aliases = serv_aliasesExpressionStatement84:4:1597:1630
283 : serv . s_proto = cpExpressionStatement83:4:1574:1591
289 : serv . s_port = htons ( ( u_short ) atoi ( p ) )ExpressionStatement82:4:1531:1568
307 : * cp ++ = '\0'ExpressionStatement81:4:1513:1525
322 : cp = strpbrk ( p , ",/" )ExpressionStatement78:4:1446:1467
318 : cp == NULLCondition79:8:1477:1486
334 : p ++ExpressionStatement77:8:1437:1440
338 : * p == ' ' || * p == '\t'Condition76:11:1404:1426
350 : * p ++ = '\0'ExpressionStatement75:4:1380:1391
409 : * p == '#'Condition65:8:1174:1182
365 : p = strpbrk ( p , " \t" )ExpressionStatement72:4:1314:1335
361 : p == NULLCondition73:8:1345:1353
376 : serv . s_name = pExpressionStatement71:4:1293:1308
395 : cp = strpbrk ( p , "#\n" )ExpressionStatement67:4:1209:1231
382 : * cp = '\0'ExpressionStatement70:4:1277:1287
391 : cp == NULLCondition68:8:1241:1250
418 : ( p = fgets ( line , BUFSIZ , servf ) ) == NULLCondition63:8:1101:1140
438 : servf == NULL && ( servf = fopen ( etc_path ( __PATH_SERVICES ) , "r" ) ) == NULLCondition59:8:988:1059
228 : continue ;ContinueStatement91:12:1798:1806
316 : goto again ;GotoStatement80:8:1497:1507
433 : again :Label62:0:1086:1091
171 : return ( & serv ) ;ReturnStatement100:4:1996:2010
359 : goto again ;GotoStatement74:8:1364:1374
389 : goto again ;GotoStatement69:8:1261:1271
407 : goto again ;GotoStatement66:8:1193:1203
416 : return ( NULL ) ;ReturnStatement64:8:1151:1164
436 : return ( NULL ) ;ReturnStatement60:8:1070:1083
166 : getserventFunction53:0:911:2012
467 : char * p ;IdentifierDeclStatement56:4:951:958
460 : char * cp , * * q ;IdentifierDeclStatement57:4:964:977
184 -----> 245cp
184 -----> 233cp
184 -----> 229cp
184 -----> 196cp
184 -----> 208cp
184 -----> 233 cp
184 -----> 245 cp
196 -----> 184cp
196 -----> 233cp
196 -----> 192cp
196 -----> 245cp
196 -----> 208cp
196 -----> 229cp
196 -----> 196cp
208 -----> 175q
208 -----> 216q
208 -----> 208q
229 -----> 208cp
229 -----> 233cp
229 -----> 196cp
229 -----> 245cp
229 -----> 229cp
252 -----> 245cp
252 -----> 233cp
252 -----> 229cp
252 -----> 208cp
252 -----> 196cp
252 -----> 233 cp
252 -----> 245 cp
264 -----> 245cp
264 -----> 252cp
264 -----> 260cp
264 -----> 229cp
264 -----> 208cp
264 -----> 196cp
264 -----> 233cp
275 -----> 175q
275 -----> 208q
275 -----> 216q
283 -----> 275serv
289 -----> 283serv
307 -----> 264cp
307 -----> 283cp
307 -----> 233 cp
307 -----> 245 cp
322 -----> 307cp
322 -----> 318cp
334 -----> 289p
334 -----> 338p
334 -----> 322p
334 -----> 334p
350 -----> 338 p
350 -----> 409 p
350 -----> 334p
350 -----> 338p
350 -----> 289p
350 -----> 322p
365 -----> 361p
365 -----> 350p
376 -----> 289serv
376 -----> 376serv
395 -----> 382cp
395 -----> 391cp
418 -----> 365p
418 -----> 395p
418 -----> 409p
418 -----> 376p
438 -----> 418servf
192 -----> 184None
216 -----> 208None
233 -----> 228None
233 -----> 229None
233 -----> 196None
233 -----> 216None
233 -----> 192None
245 -----> 233None
260 -----> 252None
318 -----> 245None
318 -----> 307None
318 -----> 264None
318 -----> 316None
318 -----> 433None
318 -----> 260None
318 -----> 283None
318 -----> 275None
318 -----> 289None
318 -----> 175None
318 -----> 418None
318 -----> 171None
338 -----> 334None
361 -----> 338None
361 -----> 350None
361 -----> 433None
361 -----> 418None
361 -----> 359None
361 -----> 318None
361 -----> 322None
391 -----> 389None
391 -----> 433None
391 -----> 376None
391 -----> 361None
391 -----> 418None
391 -----> 365None
391 -----> 382None
409 -----> 433None
409 -----> 407None
409 -----> 418None
409 -----> 395None
409 -----> 391None
418 -----> 409None
418 -----> 416None
438 -----> 436None
438 -----> 433None
438 -----> 418None
166 -----> 467None
166 -----> 438None
166 -----> 460None
467 -----> 418p
467 -----> 409p
467 -----> 365p
467 -----> 361p
467 -----> 350p
467 -----> 338p
467 -----> 334p
460 -----> 275q
460 -----> 216q
460 -----> 208q
460 -----> 175q
460 -----> 395cp
460 -----> 391cp
460 -----> 382cp
460 -----> 322cp
460 -----> 318cp
460 -----> 307cp
460 -----> 264cp
460 -----> 260cp
460 -----> 252cp
460 -----> 245cp
460 -----> 233cp
460 -----> 229cp
460 -----> 196cp
460 -----> 192cp
460 -----> 184cp
275 -----> 171serv
----------------------------pdg--------------------------------------------------
5 : size_t errbuf_sizeParameter21:22:255:272
15 : strlcpy ( errbuf , "" , errbuf_size )ExpressionStatement44:1:609:641
39 : strlcpy ( errbuf , "Attempting to initialize Winsock failed" , errbuf_size )ExpressionStatement32:2:451:528
8 : char * errbufParameter21:8:241:252
54 : err = WSAStartup ( wVersionRequested , & wsaData )ExpressionStatement30:1:385:430
50 : err != 0Condition31:5:437:444
67 : wVersionRequested = MAKEWORD ( 2 , 2 )ExpressionStatement29:1:348:382
26 : smiInit ( "tcpdump" )ExpressionStatement40:1:578:596
13 : return ( 0 ) ;ReturnStatement45:1:644:654
35 : return ( - 1 ) ;ReturnStatement34:2:532:543
2 : nd_initFunction20:0:229:656
82 : WSADATA wsaData ;IdentifierDeclStatement25:1:317:332
86 : WORD wVersionRequested ;IdentifierDeclStatement24:1:292:314
78 : int err ;IdentifierDeclStatement26:1:335:342
5 -----> 15errbuf_size
5 -----> 39errbuf_size
8 -----> 15errbuf
8 -----> 39errbuf
54 -----> 50err
67 -----> 54wVersionRequested
50 -----> 26None
50 -----> 39None
50 -----> 13None
50 -----> 15None
50 -----> 35None
2 -----> 54None
2 -----> 8None
2 -----> 67None
2 -----> 5None
2 -----> 82None
2 -----> 50None
2 -----> 86None
2 -----> 78None
86 -----> 67wVersionRequested
78 -----> 54err
78 -----> 50err
----------------------------pdg--------------------------------------------------
100 : nd_cleanupFunction49:0:660:762
105 : WSACleanup ( )ExpressionStatement59:1:741:753
110 : smiExit ( )ExpressionStatement54:1:705:714
100 -----> 105None
100 -----> 110None
----------------------------pdg--------------------------------------------------
117 : nd_have_smi_supportFunction63:0:765:854
122 : return ( 1 ) ;ReturnStatement67:1:816:826
117 -----> 122None
----------------------------pdg--------------------------------------------------
131 : size_t errbuf_sizeParameter77:53:942:959
154 : snprintf ( errbuf , errbuf_size , "could not load MIB module %s" , module )ExpressionStatement81:2:1019:1094
134 : char * errbufParameter77:39:928:939
137 : const char * moduleParameter77:19:908:925
167 : smiLoadModule ( module ) == 0Condition80:5:987:1012
142 : return ( 0 ) ;ReturnStatement86:1:1142:1152
150 : return ( - 1 ) ;ReturnStatement83:2:1098:1109
144 : nd_smi_module_loaded = 1ExpressionStatement85:1:1115:1139
128 : nd_load_smi_moduleFunction76:0:885:1273
131 -----> 154errbuf_size
134 -----> 154errbuf
137 -----> 154module
137 -----> 167module
167 -----> 154None
167 -----> 142None
167 -----> 150None
167 -----> 144None
128 -----> 167None
128 -----> 131None
128 -----> 134None
128 -----> 137None
----------------------------pdg--------------------------------------------------
183 : nd_smi_version_stringFunction94:0:1276:1396
188 : return ( smi_version_string ) ;ReturnStatement98:1:1338:1365
183 -----> 188None
----------------------------pdg--------------------------------------------------
196 : const u_int newlenParameter107:35:1499:1516
218 : ndo -> ndo_snapend = new_packetp + newlenExpressionStatement120:1:1906:1945
199 : const u_char * new_packetpParameter107:8:1472:1496
226 : ndo -> ndo_packetp = new_packetpExpressionStatement119:1:1873:1903
202 : u_char * new_bufferParameter106:40:1444:1461
256 : ndspi -> ndspi_buffer = new_bufferExpressionStatement114:1:1704:1736
205 : netdissect_options * ndoParameter106:15:1419:1441
212 : ndo -> ndo_packet_info_stack = ndspiExpressionStatement121:1:1948:1982
232 : ndspi -> ndspi_prev = ndo -> ndo_packet_info_stackExpressionStatement117:1:1823:1869
240 : ndspi -> ndspi_snapend = ndo -> ndo_snapendExpressionStatement116:1:1781:1820
248 : ndspi -> ndspi_packetp = ndo -> ndo_packetpExpressionStatement115:1:1739:1778
269 : ndspi = ( struct netdissect_saved_packet_info * ) malloc ( sizeof ( struct netdissect_saved_packet_info ) )ExpressionStatement111:1:1568:1666
265 : ndspi == NULLCondition112:5:1673:1685
210 : return ( 1 ) ;ReturnStatement123:1:1986:1996
263 : return ( 0 ) ;ReturnStatement113:2:1690:1700
193 : nd_push_bufferFunction105:0:1400:1999
282 : struct netdissect_saved_packet_info * ndspi ;IdentifierDeclStatement109:1:1522:1564
196 -----> 218newlen
199 -----> 218new_packetp
199 -----> 226new_packetp
202 -----> 256new_buffer
205 -----> 212ndo
205 -----> 218ndo
205 -----> 226ndo
205 -----> 232ndo
205 -----> 240ndo
205 -----> 248ndo
269 -----> 212ndspi
269 -----> 232ndspi
269 -----> 240ndspi
269 -----> 248ndspi
269 -----> 256ndspi
269 -----> 265ndspi
265 -----> 240None
265 -----> 210None
265 -----> 248None
265 -----> 256None
265 -----> 218None
265 -----> 232None
265 -----> 212None
265 -----> 263None
265 -----> 226None
193 -----> 269None
193 -----> 196None
193 -----> 205None
193 -----> 202None
193 -----> 282None
193 -----> 199None
193 -----> 265None
282 -----> 269ndspi
282 -----> 265ndspi
282 -----> 256ndspi
282 -----> 248ndspi
282 -----> 240ndspi
282 -----> 232ndspi
256 -----> 248ndspi
248 -----> 240ndspi
240 -----> 232ndspi
232 -----> 212ndspi
226 -----> 218ndo
218 -----> 212ndo
----------------------------pdg--------------------------------------------------
307 : const u_int newlenParameter129:59:2067:2084
322 : ndo -> ndo_snapend = bp + newlenExpressionStatement151:2:2600:2630
330 : newlen <= snaplen_remainingCondition149:5:2564:2590
310 : const u_char * bpParameter129:41:2049:2064
334 : snaplen_remaining = ( u_int ) ( ndo -> ndo_snapend - bp )ExpressionStatement146:1:2504:2554
313 : netdissect_options * ndoParameter129:16:2024:2046
344 : ndo -> ndo_packet_info_stack = ndspiExpressionStatement143:1:2464:2498
350 : ndspi -> ndspi_prev = ndo -> ndo_packet_info_stackExpressionStatement140:1:2412:2458
358 : ndspi -> ndspi_snapend = ndo -> ndo_snapendExpressionStatement139:1:2370:2409
366 : ndspi -> ndspi_packetp = ndo -> ndo_packetpExpressionStatement138:1:2328:2367
387 : ndspi = ( struct netdissect_saved_packet_info * ) malloc ( sizeof ( struct netdissect_saved_packet_info ) )ExpressionStatement134:1:2162:2260
374 : ndspi -> ndspi_buffer = NULLExpressionStatement137:1:2298:2324
383 : ndspi == NULLCondition135:5:2267:2279
381 : return ( 0 ) ;ReturnStatement136:2:2284:2294
318 : return ( 1 ) ;ReturnStatement154:1:2637:2647
304 : nd_push_snaplenFunction128:0:2004:2650
400 : u_int snaplen_remaining ;IdentifierDeclStatement132:1:2135:2158
404 : struct netdissect_saved_packet_info * ndspi ;IdentifierDeclStatement131:1:2090:2132
307 -----> 322newlen
307 -----> 330newlen
310 -----> 322bp
310 -----> 334bp
313 -----> 322ndo
313 -----> 334ndo
313 -----> 344ndo
313 -----> 350ndo
313 -----> 358ndo
313 -----> 366ndo
334 -----> 330snaplen_remaining
344 -----> 334 ndo
387 -----> 344ndspi
387 -----> 350ndspi
387 -----> 358ndspi
387 -----> 366ndspi
387 -----> 374ndspi
387 -----> 383ndspi
330 -----> 322None
383 -----> 350None
383 -----> 374None
383 -----> 366None
383 -----> 330None
383 -----> 381None
383 -----> 344None
383 -----> 334None
383 -----> 318None
383 -----> 358None
304 -----> 400None
304 -----> 387None
304 -----> 310None
304 -----> 313None
304 -----> 383None
304 -----> 307None
304 -----> 404None
400 -----> 334snaplen_remaining
400 -----> 330snaplen_remaining
404 -----> 387ndspi
404 -----> 383ndspi
404 -----> 374ndspi
404 -----> 366ndspi
404 -----> 358ndspi
404 -----> 350ndspi
374 -----> 366ndspi
366 -----> 358ndspi
358 -----> 350ndspi
350 -----> 344ndspi
344 -----> 334ndo
344 -----> 322ndo
----------------------------pdg--------------------------------------------------
429 : const u_int newlenParameter159:61:2720:2737
442 : ndo -> ndo_snapend = bp + newlenExpressionStatement177:2:3116:3146
450 : newlen <= snaplen_remainingCondition175:5:3080:3106
432 : const u_char * bpParameter159:43:2702:2717
454 : snaplen_remaining = ( u_int ) ( previous_snapend - bp )ExpressionStatement172:1:3020:3070
435 : netdissect_options * ndoParameter159:18:2677:2699
464 : previous_snapend = ndo -> ndo_snapendExpressionStatement169:2:2979:3014
484 : ndspi = ndo -> ndo_packet_info_stackExpressionStatement165:1:2848:2882
470 : previous_snapend = ndspi -> ndspi_prev -> ndspi_snapendExpressionStatement167:2:2918:2969
478 : ndspi -> ndspi_prev != NULLCondition166:5:2889:2913
426 : nd_change_snaplenFunction158:0:2654:3151
490 : u_int snaplen_remaining ;IdentifierDeclStatement163:1:2821:2844
494 : const u_char * previous_snapend ;IdentifierDeclStatement162:1:2788:2818
498 : struct netdissect_saved_packet_info * ndspi ;IdentifierDeclStatement161:1:2743:2785
429 -----> 442newlen
429 -----> 450newlen
432 -----> 442bp
432 -----> 454bp
435 -----> 442ndo
435 -----> 464ndo
435 -----> 484ndo
454 -----> 450snaplen_remaining
464 -----> 454previous_snapend
470 -----> 454previous_snapend
484 -----> 470ndspi
484 -----> 478ndspi
450 -----> 442None
478 -----> 464None
478 -----> 470None
426 -----> 432None
426 -----> 450None
426 -----> 429None
426 -----> 490None
426 -----> 478None
426 -----> 454None
426 -----> 494None
426 -----> 498None
426 -----> 484None
426 -----> 435None
490 -----> 454snaplen_remaining
490 -----> 450snaplen_remaining
494 -----> 470previous_snapend
494 -----> 464previous_snapend
498 -----> 484ndspi
498 -----> 478ndspi
----------------------------pdg--------------------------------------------------
522 : netdissect_options * ndoParameter182:19:3178:3200
543 : ndo -> ndo_packet_info_stack = ndspi -> ndspi_prevExpressionStatement189:1:3373:3419
551 : ndo -> ndo_snapend = ndspi -> ndspi_snapendExpressionStatement188:1:3331:3370
559 : ndo -> ndo_packetp = ndspi -> ndspi_packetpExpressionStatement187:1:3289:3328
567 : ndspi = ndo -> ndo_packet_info_stackExpressionStatement186:1:3252:3286
527 : free ( ndspi )ExpressionStatement192:1:3451:3462
534 : free ( ndspi -> ndspi_buffer )ExpressionStatement191:1:3423:3448
519 : nd_pop_packet_infoFunction181:0:3154:3464
573 : struct netdissect_saved_packet_info * ndspi ;IdentifierDeclStatement184:1:3206:3248
522 -----> 543ndo
522 -----> 551ndo
522 -----> 559ndo
522 -----> 567ndo
567 -----> 527ndspi
567 -----> 534ndspi
567 -----> 543ndspi
567 -----> 551ndspi
567 -----> 559ndspi
519 -----> 573None
519 -----> 543None
519 -----> 567None
519 -----> 534None
519 -----> 559None
519 -----> 551None
519 -----> 527None
519 -----> 522None
573 -----> 567ndspi
573 -----> 534ndspi
573 -----> 527ndspi
559 -----> 551ndo
551 -----> 543ndo
----------------------------pdg--------------------------------------------------
593 : netdissect_options * ndoParameter196:23:3495:3517
599 : nd_pop_packet_info ( ndo )ExpressionStatement199:2:3568:3591
606 : ndo -> ndo_packet_info_stack != NULLCondition198:8:3530:3563
590 : nd_pop_all_packet_infoFunction195:0:3467:3593
593 -----> 599ndo
593 -----> 606ndo
606 -----> 599None
590 -----> 606None
590 -----> 593None
----------------------------pdg--------------------------------------------------
621 : netdissect_options * ndoParameter203:17:3627:3649
627 : longjmp ( ndo -> ndo_early_end , ND_TRUNCATED )ExpressionStatement205:1:3655:3696
618 : nd_trunc_longjmpFunction202:0:3596:3736
626 : ND_UNREACHABLEStatement208:1:3713:3726
621 -----> 627ndo
618 -----> 621None
618 -----> 626None
618 -----> 627None
----------------------------pdg--------------------------------------------------
12 : unsigned int maskParameter220:59:5052:5068
23 : init_addrtoname ( ndo , localnet , mask )ExpressionStatement222:1:5074:5110
15 : unsigned int localnetParameter220:36:5029:5049
18 : netdissect_options * ndoParameter220:11:5004:5026
9 : init_printFunction219:0:4988:5112
12 -----> 23mask
15 -----> 23localnet
18 -----> 23ndo
9 -----> 15None
9 -----> 12None
9 -----> 18None
9 -----> 23None
----------------------------pdg--------------------------------------------------
42 : int typeParameter226:15:5141:5148
74 : type == DLT_USER2Condition236:5:5303:5319
84 : type == p -> typeCondition231:6:5217:5231
70 : p = printers ;ForInit237:7:5331:5343
53 : return p -> f ;ReturnStatement239:4:5389:5400
57 : DLT_PKTAP == p -> typeCondition238:7:5363:5382
66 : p -> fCondition237:21:5345:5348
97 : p = printers ;ForInit230:6:5186:5198
80 : return p -> f ;ReturnStatement232:3:5237:5248
93 : p -> fCondition230:20:5200:5203
63 : ++ pUnaryExpression237:27:5351:5353
47 : return NULL ;ReturnStatement243:1:5414:5425
90 : ++ pUnaryExpression230:26:5206:5208
39 : lookup_printerFunction225:0:5115:5429
101 : const struct printer * p ;IdentifierDeclStatement228:1:5154:5177
42 -----> 74type
42 -----> 84type
70 -----> 53p
70 -----> 57p
70 -----> 66p
97 -----> 80p
97 -----> 84p
97 -----> 93p
57 -----> 53None
57 -----> 63None
57 -----> 66None
66 -----> 57None
66 -----> 47None
74 -----> 70None
74 -----> 47None
74 -----> 66None
84 -----> 90None
84 -----> 93None
84 -----> 80None
93 -----> 74None
93 -----> 84None
39 -----> 42None
39 -----> 93None
39 -----> 97None
39 -----> 101None
101 -----> 97p
101 -----> 93p
101 -----> 84p
101 -----> 80p
101 -----> 70p
101 -----> 66p
101 -----> 57p
101 -----> 53p
97 -----> 66p
97 -----> 57p
97 -----> 53p
----------------------------pdg--------------------------------------------------
119 : int typeParameter248:12:5448:5455
124 : return ( lookup_printer ( type ) != NULL ) ;ReturnStatement250:1:5461:5498
116 : has_printerFunction247:0:5432:5500
119 -----> 124type
116 -----> 119None
116 -----> 124None
----------------------------pdg--------------------------------------------------
141 : int typeParameter254:15:5529:5536
157 : printer = lookup_printer ( type )ExpressionStatement258:1:5564:5594
149 : printer = unsupported_if_printExpressionStatement260:2:5620:5650
146 : return printer ;ReturnStatement261:1:5653:5667
153 : printer == NULLCondition259:5:5601:5615
138 : get_if_printerFunction253:0:5503:5669
166 : if_printer printer ;IdentifierDeclStatement256:1:5542:5560
141 -----> 157type
149 -----> 146printer
157 -----> 146printer
157 -----> 153printer
153 -----> 149None
138 -----> 141None
138 -----> 153None
138 -----> 157None
138 -----> 146None
138 -----> 166None
166 -----> 157printer
166 -----> 153printer
166 -----> 149printer
166 -----> 146printer
----------------------------pdg--------------------------------------------------
184 : u_int packets_capturedParameter271:24:5892:5913
754 : ND_PRINT ( "%5u  " , packets_captured )ExpressionStatement285:2:6217:6252
780 : ndo -> ndo_print_sampling && packets_captured % ndo -> ndo_print_sampling != 0Condition276:5:5968:6041
187 : const u_char * spParameter271:6:5874:5889
274 : hex_print ( ndo , "\n\t" , sp + hdrlen , h -> caplen - hdrlen )ExpressionStatement388:4:8262:8324
300 : hex_print ( ndo , "\n\t" , sp , h -> caplen )ExpressionStatement384:3:8177:8214
330 : hex_and_ascii_print ( ndo , "\n\t" , sp + hdrlen , h -> caplen - hdrlen )ExpressionStatement377:4:8028:8103
356 : hex_and_ascii_print ( ndo , "\n\t" , sp , h -> caplen )ExpressionStatement373:3:7933:7980
246 : ascii_print ( ndo , sp , h -> caplen )ExpressionStatement395:3:8398:8429
381 : ndo -> ndo_packetp = spExpressionStatement368:1:7849:7870
387 : ndo -> ndo_snapend = sp + h -> caplenExpressionStatement367:1:7813:7846
222 : ascii_print ( ndo , sp + hdrlen , h -> caplen - hdrlen )ExpressionStatement399:4:8477:8526
433 : ( ndo -> ndo_if_printer ) ( ndo , h , sp )ExpressionStatement348:2:7518:7551
468 : ndo -> ndo_packetp = spExpressionStatement341:1:7390:7411
474 : ndo -> ndo_snapend = sp + h -> caplenExpressionStatement340:1:7354:7387
190 : const struct pcap_pkthdr * hParameter270:45:5839:5865
349 : h -> caplen > hdrlenCondition376:7:8004:8021
533 : ND_PRINT ( " len(%u) > %u" , h -> len , MAXIMUM_SNAPLEN )ExpressionStatement324:2:7125:7175
579 : ND_PRINT ( " caplen(%u) > %u" , h -> caplen , MAXIMUM_SNAPLEN )ExpressionStatement316:2:6921:6977
617 : h -> caplen > MAXIMUM_SNAPLENCondition310:5:6780:6806
627 : ND_PRINT ( " len(%u) < caplen(%u)" , h -> len , h -> caplen )ExpressionStatement308:2:6718:6770
505 : tvbuf . tv_sec = h -> ts . tv_secExpressionStatement335:1:7265:7292
667 : h -> len < h -> caplenCondition302:12:6586:6603
239 : h -> caplen > hdrlenCondition398:7:8453:8470
293 : h -> caplen > hdrlenCondition387:7:8238:8255
495 : tvbuf . tv_usec = h -> ts . tv_usecExpressionStatement336:1:7295:7324
727 : h -> caplen == 0Condition291:5:6338:6351
734 : ND_PRINT ( "caplen %u len %u " , h -> caplen , h -> len )ExpressionStatement288:2:6280:6328
708 : h -> len == 0Condition295:5:6428:6438
571 : h -> len > MAXIMUM_SNAPLENCondition318:5:6987:7010
193 : netdissect_options * ndoParameter270:20:5814:5836
198 : nd_free_all ( ndo )ExpressionStatement404:1:8554:8570
447 : setjmp ( ndo -> ndo_early_end )Condition345:9:7474:7499
404 : hdrlen = ndo -> ndo_ll_hdr_lenExpressionStatement361:1:7746:7774
265 : ndo -> ndo_AflagCondition391:12:8342:8355
423 : nd_print_trunc ( ndo )ExpressionStatement352:2:7587:7606
456 : ndo -> ndo_ll_hdr_len = 0ExpressionStatement344:1:7440:7463
462 : ndo -> ndo_protocol = ""ExpressionStatement343:1:7415:7437
377 : ndo -> ndo_XflagCondition369:5:7877:7890
371 : ndo -> ndo_Xflag > 1Condition371:6:7904:7921
259 : ndo -> ndo_Aflag > 1Condition393:6:8369:8386
484 : ts_print ( ndo , & tvbuf )ExpressionStatement337:1:7327:7348
315 : ndo -> ndo_xflag > 1Condition382:6:8148:8165
321 : ndo -> ndo_xflagCondition380:12:8121:8134
417 : ndo -> ndo_ll_hdr_len = 0ExpressionStatement354:2:7613:7636
749 : ndo -> ndo_lengthsCondition287:5:6260:6275
397 : nd_pop_all_packet_info ( ndo )ExpressionStatement364:1:7780:7807
763 : ndo -> ndo_packet_numberCondition284:5:6191:6212
515 : struct timeval tvbuf ;IdentifierDeclStatement334:1:7242:7262
563 : invalid_header = 1ExpressionStatement320:3:7043:7061
529 : invalid_headerCondition326:5:7185:7198
609 : invalid_header = 1ExpressionStatement312:3:6839:6857
567 : ! invalid_headerCondition319:6:7021:7035
659 : invalid_header = 1ExpressionStatement304:3:6636:6654
613 : ! invalid_headerCondition311:6:6817:6831
700 : invalid_header = 1ExpressionStatement297:3:6471:6489
723 : invalid_header = 1ExpressionStatement292:2:6358:6376
663 : ! invalid_headerCondition303:6:6614:6628
704 : ! invalid_headerCondition296:6:6449:6463
768 : pretty_print_packet_level = profile_func_levelExpressionStatement281:2:6130:6176
413 : profile_func_level = pretty_print_packet_levelExpressionStatement357:2:7678:7724
792 : int invalid_header = 0 ;IdentifierDeclStatement274:1:5938:5960
430 : case ND_TRUNCATED :Label350:1:7563:7580
412 : break ;BreakStatement359:2:7735:7740
432 : break ;BreakStatement349:2:7555:7560
446 : case 0 :Label346:1:7505:7511
522 : ND_PRINT ( "]\n" )ExpressionStatement327:2:7205:7220
205 : ND_PRINT ( "\n" )ExpressionStatement403:1:8537:8551
521 : return ;ReturnStatement328:2:7224:7230
556 : ND_PRINT ( "[Invalid header:" )ExpressionStatement321:3:7066:7094
548 : ND_PRINT ( "," )ExpressionStatement323:3:7108:7121
594 : ND_PRINT ( "," )ExpressionStatement315:3:6904:6917
602 : ND_PRINT ( "[Invalid header:" )ExpressionStatement313:3:6862:6890
644 : ND_PRINT ( "," )ExpressionStatement307:3:6701:6714
652 : ND_PRINT ( "[Invalid header:" )ExpressionStatement305:3:6659:6687
693 : ND_PRINT ( "[Invalid header:" )ExpressionStatement298:3:6494:6522
685 : ND_PRINT ( "," )ExpressionStatement300:3:6536:6549
676 : ND_PRINT ( " len==0" )ExpressionStatement301:2:6553:6572
716 : ND_PRINT ( "[Invalid header: caplen==0" )ExpressionStatement293:2:6380:6418
772 : pretty_print_packet_level == - 1Condition280:5:6095:6125
779 : return ;ReturnStatement277:2:6046:6052
181 : pretty_print_packetFunction269:0:5789:8572
799 : u_int hdrlen = 0 ;IdentifierDeclStatement273:1:5919:5935
184 -----> 754packets_captured
184 -----> 780packets_captured
187 -----> 274sp
187 -----> 300sp
187 -----> 330sp
187 -----> 356sp
187 -----> 246sp
187 -----> 381sp
187 -----> 387sp
187 -----> 222sp
187 -----> 433sp
187 -----> 468sp
187 -----> 474sp
190 -----> 349h
190 -----> 246h
190 -----> 533h
190 -----> 474h
190 -----> 579h
190 -----> 330h
190 -----> 617h
190 -----> 627h
190 -----> 222h
190 -----> 356h
190 -----> 505h
190 -----> 667h
190 -----> 239h
190 -----> 387h
190 -----> 293h
190 -----> 495h
190 -----> 727h
190 -----> 734h
190 -----> 300h
190 -----> 274h
190 -----> 433h
190 -----> 708h
190 -----> 571h
193 -----> 222ndo
193 -----> 246ndo
193 -----> 198ndo
193 -----> 447ndo
193 -----> 404ndo
193 -----> 265ndo
193 -----> 274ndo
193 -----> 423ndo
193 -----> 381ndo
193 -----> 456ndo
193 -----> 462ndo
193 -----> 377ndo
193 -----> 371ndo
193 -----> 387ndo
193 -----> 259ndo
193 -----> 330ndo
193 -----> 300ndo
193 -----> 484ndo
193 -----> 315ndo
193 -----> 321ndo
193 -----> 417ndo
193 -----> 433ndo
193 -----> 356ndo
193 -----> 749ndo
193 -----> 397ndo
193 -----> 763ndo
193 -----> 780ndo
193 -----> 468ndo
193 -----> 474ndo
381 -----> 265 ndo
381 -----> 315 ndo
381 -----> 321 ndo
381 -----> 371 ndo
381 -----> 377 ndo
381 -----> 259 ndo
404 -----> 222hdrlen
404 -----> 239hdrlen
404 -----> 274hdrlen
404 -----> 293hdrlen
404 -----> 330hdrlen
404 -----> 349hdrlen
417 -----> 404 ndo
417 -----> 404ndo -> ndo_ll_hdr_len
456 -----> 404 ndo
456 -----> 447 ndo
456 -----> 404ndo -> ndo_ll_hdr_len
505 -----> 495tvbuf
515 -----> 505tvbuf
563 -----> 529invalid_header
609 -----> 567invalid_header
609 -----> 529invalid_header
659 -----> 567invalid_header
659 -----> 613invalid_header
659 -----> 529invalid_header
700 -----> 613invalid_header
700 -----> 529invalid_header
700 -----> 567invalid_header
723 -----> 567invalid_header
723 -----> 613invalid_header
723 -----> 529invalid_header
723 -----> 663invalid_header
723 -----> 704invalid_header
768 -----> 413pretty_print_packet_level
792 -----> 613invalid_header
792 -----> 663invalid_header
792 -----> 704invalid_header
792 -----> 567invalid_header
792 -----> 529invalid_header
239 -----> 222None
259 -----> 239None
259 -----> 246None
265 -----> 259None
293 -----> 274None
315 -----> 293None
315 -----> 300None
321 -----> 265None
321 -----> 315None
349 -----> 330None
371 -----> 349None
371 -----> 356None
377 -----> 371None
377 -----> 321None
447 -----> 417None
447 -----> 430None
447 -----> 412None
447 -----> 433None
447 -----> 432None
447 -----> 413None
447 -----> 423None
447 -----> 446None
529 -----> 484None
529 -----> 515None
529 -----> 522None
529 -----> 387None
529 -----> 205None
529 -----> 521None
529 -----> 468None
529 -----> 495None
529 -----> 505None
529 -----> 474None
529 -----> 397None
529 -----> 381None
529 -----> 377None
529 -----> 462None
529 -----> 447None
529 -----> 456None
529 -----> 404None
529 -----> 198None
567 -----> 563None
567 -----> 556None
567 -----> 548None
571 -----> 533None
571 -----> 567None
613 -----> 594None
613 -----> 602None
613 -----> 609None
617 -----> 613None
617 -----> 579None
663 -----> 644None
663 -----> 659None
663 -----> 652None
667 -----> 663None
667 -----> 627None
704 -----> 693None
704 -----> 685None
704 -----> 700None
708 -----> 704None
708 -----> 676None
708 -----> 667None
727 -----> 723None
727 -----> 716None
749 -----> 734None
763 -----> 754None
772 -----> 768None
780 -----> 772None
780 -----> 708None
780 -----> 617None
780 -----> 571None
780 -----> 749None
780 -----> 763None
780 -----> 529None
780 -----> 727None
780 -----> 779None
181 -----> 799None
181 -----> 190None
181 -----> 792None
181 -----> 193None
181 -----> 187None
181 -----> 184None
181 -----> 780None
515 -----> 495tvbuf
515 -----> 484tvbuf
495 -----> 484tvbuf
474 -----> 468ndo
468 -----> 462ndo
462 -----> 456ndo
456 -----> 447ndo
456 -----> 433ndo
456 -----> 423ndo
456 -----> 417ndo
417 -----> 404ndo
417 -----> 397ndo
417 -----> 387ndo
387 -----> 381ndo
381 -----> 377ndo
381 -----> 371ndo
381 -----> 356ndo
381 -----> 330ndo
381 -----> 321ndo
381 -----> 315ndo
381 -----> 300ndo
381 -----> 274ndo
381 -----> 265ndo
381 -----> 259ndo
381 -----> 246ndo
381 -----> 222ndo
381 -----> 198ndo
----------------------------pdg--------------------------------------------------
843 : u_int lengthParameter409:61:8649:8660
854 : hex_and_ascii_print ( ndo , "\n\t" , bp , length )ExpressionStatement411:1:8666:8710
846 : const u_char * bpParameter409:43:8631:8646
849 : netdissect_options * ndoParameter409:18:8606:8628
840 : ndo_default_printFunction408:0:8576:8713
843 -----> 854length
846 -----> 854bp
849 -----> 854ndo
840 -----> 854None
840 -----> 849None
840 -----> 843None
840 -----> 846None
----------------------------pdg--------------------------------------------------
883 : netdissect_options * ndoParameter473:26:9907:9929
888 : ndo -> ndo_warning = ndo_warningExpressionStatement478:1:10034:10062
894 : ndo -> ndo_error = ndo_errorExpressionStatement477:1:10007:10031
900 : ndo -> ndo_printf = ndo_printfExpressionStatement476:1:9978:10004
906 : ndo -> ndo_default_print = ndo_default_printExpressionStatement475:1:9935:9975
880 : ndo_set_function_pointersFunction472:0:9876:10064
883 -----> 888ndo
883 -----> 894ndo
883 -----> 900ndo
883 -----> 906ndo
880 -----> 900None
880 -----> 883None
880 -----> 906None
880 -----> 894None
880 -----> 888None
906 -----> 900ndo
900 -----> 894ndo
894 -----> 888ndo
----------------------------pdg--------------------------------------------------
17 : u_int data_lenParameter399:5:9366:9379
88 : data_len --ExpressionStatement420:2:9798:9808
185 : data_len != 0Condition406:8:9445:9457
20 : const u_char * pParameter398:44:9344:9358
172 : p ++ExpressionStatement408:2:9481:9484
176 : y = GET_U_1 ( p )ExpressionStatement407:2:9463:9477
30 : crc = ( ( ( crc & 0xff00 ) >> 8 ) | ( ( crc & 0x00ff ) << 8 ) )ExpressionStatement426:1:9984:10037
28 : return crc ;ReturnStatement427:1:10040:10050
44 : crc = ( ( ( crc & 0xf0f0 ) >> 4 ) | ( ( crc & 0x0f0f ) << 4 ) )ExpressionStatement425:1:9928:9981
58 : crc = ( ( ( crc & 0xcccc ) >> 2 ) | ( ( crc & 0x3333 ) << 2 ) )ExpressionStatement424:1:9872:9925
72 : crc = ( ( ( crc & 0xaaaa ) >> 1 ) | ( ( crc & 0x5555 ) << 1 ) )ExpressionStatement423:1:9816:9869
92 : crc = ( ( unsigned short ) ( crc << 8 ) ) ^ ( ( unsigned short ) ( x << 12 ) ) ^ ( ( unsigned short ) ( x << 5 ) ) ^ ( ( unsigned short ) x )ExpressionStatement416:2:9670:9794
122 : x = crc >> 8 ^ yExpressionStatement414:2:9635:9651
116 : x ^= x >> 4ExpressionStatement415:2:9655:9666
130 : y = ( ( ( y & 0xf0 ) >> 4 ) | ( ( y & 0x0f ) << 4 ) )ExpressionStatement412:2:9585:9628
144 : y = ( ( ( y & 0xcc ) >> 2 ) | ( ( y & 0x33 ) << 2 ) )ExpressionStatement411:2:9538:9581
158 : y = ( ( ( y & 0xaa ) >> 1 ) | ( ( y & 0x55 ) << 1 ) )ExpressionStatement410:2:9491:9534
189 : crc = 0x0000ExpressionStatement404:1:9421:9433
14 : ieee802_15_4_crc16Function397:0:9278:10052
193 : u_char x , y ;IdentifierDeclStatement402:1:9406:9417
23 : netdissect_options * ndoParameter398:19:9319:9341
200 : unsigned short crc ;IdentifierDeclStatement401:1:9385:9403
17 -----> 88data_len
17 -----> 185data_len
20 -----> 172p
20 -----> 176p
30 -----> 28crc
44 -----> 30crc
58 -----> 44crc
72 -----> 58crc
88 -----> 185data_len
88 -----> 88data_len
92 -----> 72crc
92 -----> 122crc
92 -----> 92crc
116 -----> 92x
122 -----> 116x
130 -----> 122y
144 -----> 130y
158 -----> 144y
172 -----> 176p
172 -----> 172p
176 -----> 158y
189 -----> 72crc
189 -----> 92crc
189 -----> 122crc
185 -----> 116None
185 -----> 144None
185 -----> 176None
185 -----> 158None
185 -----> 122None
185 -----> 130None
185 -----> 172None
185 -----> 88None
185 -----> 92None
14 -----> 44None
14 -----> 30None
14 -----> 28None
14 -----> 193None
14 -----> 58None
14 -----> 23None
14 -----> 200None
14 -----> 185None
14 -----> 189None
14 -----> 72None
14 -----> 17None
14 -----> 20None
193 -----> 176y
193 -----> 158y
193 -----> 144y
193 -----> 130y
193 -----> 122x
193 -----> 116x
200 -----> 189crc
200 -----> 92crc
200 -----> 72crc
200 -----> 58crc
200 -----> 44crc
200 -----> 30crc
200 -----> 28crc
----------------------------pdg--------------------------------------------------
216 : unsigned int xParameter432:23:10099:10112
273 : x = ( ( x & 0x55555555 ) << 1 ) | ( ( x >> 1 ) & 0x55555555 )ExpressionStatement434:1:10118:10173
223 : x = ( x << 24 ) | ( ( x & 0xFF00 ) << 8 ) | ( ( x >> 8 ) & 0xFF00 ) | ( x >> 24 )ExpressionStatement437:1:10292:10363
221 : return x ;ReturnStatement439:1:10366:10374
245 : x = ( ( x & 0x0F0F0F0F ) << 4 ) | ( ( x >> 4 ) & 0x0F0F0F0F )ExpressionStatement436:1:10234:10289
259 : x = ( ( x & 0x33333333 ) << 2 ) | ( ( x >> 2 ) & 0x33333333 )ExpressionStatement435:1:10176:10231
213 : ieee802_15_4_reverse32Function431:0:10056:10376
216 -----> 273x
223 -----> 221x
245 -----> 223x
259 -----> 245x
273 -----> 259x
213 -----> 216None
213 -----> 273None
213 -----> 223None
213 -----> 221None
213 -----> 259None
213 -----> 245None
216 -----> 259x
216 -----> 245x
216 -----> 223x
216 -----> 221x
----------------------------pdg--------------------------------------------------
293 : u_int data_lenParameter445:5:10466:10479
317 : data_len --ExpressionStatement465:2:10792:10802
386 : data_len != 0Condition452:8:10547:10559
296 : const u_char * pParameter444:44:10444:10458
373 : p ++ExpressionStatement454:2:10586:10589
377 : byte = GET_U_1 ( p )ExpressionStatement453:2:10565:10582
306 : crc = ieee802_15_4_reverse32 ( crc )ExpressionStatement468:1:10810:10843
304 : return crc ;ReturnStatement469:1:10846:10856
323 : byte = byte << 1ExpressionStatement463:4:10768:10784
345 : ( int ) ( crc ^ byte ) < 0Condition459:8:10672:10693
331 : crc = crc << 1ExpressionStatement462:6:10748:10762
337 : crc = ( crc << 1 ) ^ 0x04C11DB7ExpressionStatement460:6:10702:10731
353 : b ++IncDecOp458:21:10657:10659
356 : b <= 7Condition458:13:10649:10654
360 : b = 0 ;ForInit458:6:10642:10647
364 : byte = ieee802_15_4_reverse32 ( byte )ExpressionStatement456:2:10596:10631
390 : crc = 0x00000000ExpressionStatement450:1:10519:10535
290 : ieee802_15_4_crc32Function443:0:10380:10858
398 : unsigned int crc , byte ;IdentifierDeclStatement447:1:10485:10507
394 : int b ;IdentifierDeclStatement448:1:10510:10515
299 : netdissect_options * ndoParameter444:19:10419:10441
293 -----> 317data_len
293 -----> 386data_len
296 -----> 373p
296 -----> 377p
306 -----> 304crc
317 -----> 386data_len
317 -----> 317data_len
323 -----> 345byte
323 -----> 323byte
331 -----> 306crc
331 -----> 337crc
331 -----> 345crc
331 -----> 331crc
337 -----> 306crc
337 -----> 331crc
337 -----> 345crc
337 -----> 337crc
353 -----> 356b
353 -----> 353b
360 -----> 353b
360 -----> 356b
364 -----> 323byte
364 -----> 345byte
373 -----> 377p
373 -----> 373p
377 -----> 364byte
390 -----> 331crc
390 -----> 306crc
390 -----> 337crc
390 -----> 345crc
345 -----> 337None
345 -----> 331None
356 -----> 323None
356 -----> 353None
356 -----> 345None
386 -----> 377None
386 -----> 364None
386 -----> 373None
386 -----> 317None
386 -----> 360None
386 -----> 356None
290 -----> 398None
290 -----> 386None
290 -----> 293None
290 -----> 390None
290 -----> 304None
290 -----> 306None
290 -----> 394None
290 -----> 299None
290 -----> 296None
398 -----> 377byte
398 -----> 364byte
398 -----> 345byte
398 -----> 323byte
398 -----> 390crc
398 -----> 345crc
398 -----> 337crc
398 -----> 331crc
398 -----> 306crc
398 -----> 304crc
394 -----> 360b
394 -----> 356b
394 -----> 353b
----------------------------pdg--------------------------------------------------
418 : unsigned short addr_typeParameter474:22:10895:10918
445 : addr_typeCondition476:9:10932:10940
429 : case FC_ADDRESSING_MODE_LONG :Label483:1:11084:11112
433 : case FC_ADDRESSING_MODE_SHORT :Label481:1:11039:11068
435 : return - 1 ;ReturnStatement480:2:11027:11036
439 : case FC_ADDRESSING_MODE_RESERVED :Label479:1:10990:11022
431 : return 2 ;ReturnStatement482:2:11073:11081
427 : return 8 ;ReturnStatement484:2:11117:11125
443 : case FC_ADDRESSING_MODE_NONE :Label477:1:10946:10974
423 : return 0 ;ReturnStatement486:1:11131:11139
441 : return 0 ;ReturnStatement478:2:10979:10987
415 : ieee802_15_4_addr_lenFunction473:0:10862:11141
418 -----> 445addr_type
445 -----> 429None
445 -----> 433None
445 -----> 435None
445 -----> 439None
445 -----> 431None
445 -----> 427None
445 -----> 443None
445 -----> 423None
445 -----> 441None
415 -----> 418None
415 -----> 445None
----------------------------pdg--------------------------------------------------
453 : int dst_addr_lenParameter492:3:11226:11241
507 : dst_addr_lenCondition494:9:11255:11266
456 : const u_char * pParameter491:49:11206:11220
467 : ND_PRINT ( "%s" , GET_EUI64LE_STRING ( p ) )ExpressionStatement502:2:11373:11410
483 : ND_PRINT ( "%04x" , GET_LE_U_2 ( p ) )ExpressionStatement499:2:11320:11351
482 : break ;BreakStatement500:2:11355:11360
499 : ND_PRINT ( "none" )ExpressionStatement496:2:11282:11298
481 : case 8 :Label501:1:11363:11369
498 : break ;BreakStatement497:2:11302:11307
497 : case 2 :Label498:1:11310:11316
506 : case 0 :Label495:1:11272:11278
466 : break ;BreakStatement503:2:11414:11419
450 : ieee802_15_4_print_addrFunction490:0:11145:11424
459 : netdissect_options * ndoParameter491:24:11181:11203
453 -----> 507dst_addr_len
456 -----> 467p
456 -----> 483p
507 -----> 482None
507 -----> 499None
507 -----> 483None
507 -----> 481None
507 -----> 498None
507 -----> 497None
507 -----> 506None
507 -----> 466None
507 -----> 467None
450 -----> 507None
450 -----> 459None
450 -----> 453None
450 -----> 456None
----------------------------pdg--------------------------------------------------
519 : unsigned short ssParameter510:9:11518:11534
536 : CHECK_BIT ( ss , 15 )Condition521:5:11849:11865
554 : CHECK_BIT ( ss , 14 )Condition520:5:11790:11806
572 : CHECK_BIT ( ss , 12 )Condition519:5:11735:11751
581 : ND_PRINT ( "Final CAP Slot = %d" , ( ( ss >> 8 ) & 0xf ) )ExpressionStatement517:1:11675:11728
594 : ND_PRINT ( "\n\tBeacon order = %d, Superframe order = %d, " , ( ss & 0xf ) , ( ( ss >> 4 ) & 0xf ) )ExpressionStatement515:1:11580:11672
522 : netdissect_options * ndoParameter509:44:11484:11506
614 : ndo -> ndo_vflag < 1Condition512:5:11544:11561
529 : ND_PRINT ( ", Association Permit" )ExpressionStatement521:26:11870:11902
547 : ND_PRINT ( ", PAN Coordinator" )ExpressionStatement520:26:11811:11840
565 : ND_PRINT ( ", BLE enabled" )ExpressionStatement519:26:11756:11781
613 : return ;ReturnStatement513:2:11568:11574
516 : ieee802_15_4_print_superframe_specificationFunction508:0:11428:11906
519 -----> 536ss
519 -----> 554ss
519 -----> 572ss
519 -----> 581ss
519 -----> 594ss
522 -----> 614ndo
536 -----> 529None
554 -----> 547None
572 -----> 565None
614 -----> 554None
614 -----> 572None
614 -----> 536None
614 -----> 613None
614 -----> 594None
614 -----> 581None
516 -----> 614None
516 -----> 519None
516 -----> 522None
----------------------------pdg--------------------------------------------------
630 : u_int data_lenParameter528:7:12005:12018
780 : data_len < lenCondition545:5:12289:12302
633 : const u_char * pParameter527:7:11981:11995
652 : ND_PRINT ( ", Start slot = %d, Length = %d ] " , GET_U_1 ( p + 2 + i * 3 + 1 ) & 0x0f , ( GET_U_1 ( p + 2 + i * 3 + 1 ) >> 4 ) & 0x0f )ExpressionStatement559:2:12641:12771
695 : ieee802_15_4_print_addr ( ndo , p + 2 + i * 3 , 2 )ExpressionStatement558:2:12591:12637
730 : ND_PRINT ( "GTS Directions Mask = %02x, [ " , GET_U_1 ( p + 1 ) & 0x7f )ExpressionStatement553:1:12468:12536
825 : gts_spec = GET_U_1 ( p )ExpressionStatement534:1:12079:12100
636 : netdissect_options * ndoParameter526:28:11949:11971
761 : ndo -> ndo_vflag < 2Condition549:5:12377:12394
809 : ndo -> ndo_vflag > 0Condition538:6:12157:12174
719 : i ++IncDecOp556:25:12564:12566
722 : i < gts_cntCondition556:12:12551:12561
726 : i = 0 ;ForInit556:5:12544:12549
784 : len = 1 + 1 + gts_cnt * 3ExpressionStatement543:1:12256:12281
641 : return len ;ReturnStatement564:1:12793:12803
759 : return len ;ReturnStatement550:2:12401:12411
819 : gts_cnt = gts_spec & 0x7ExpressionStatement535:1:12103:12127
748 : ND_PRINT ( "GTS Descriptor Count = %d, " , gts_cnt )ExpressionStatement552:1:12417:12465
800 : ND_PRINT ( "\n\tGTS Descriptor Count = %d, " , gts_cnt )ExpressionStatement539:3:12182:12234
815 : gts_cnt == 0Condition537:5:12135:12146
712 : ND_PRINT ( "[ " )ExpressionStatement557:2:12573:12587
643 : ND_PRINT ( "]" )ExpressionStatement563:1:12777:12790
769 : return - 1 ;ReturnStatement547:2:12358:12367
773 : ND_PRINT ( " [ERROR: Truncated GTS Info List]" )ExpressionStatement546:2:12309:12354
796 : return 1 ;ReturnStatement541:2:12242:12250
627 : ieee802_15_4_print_gts_infoFunction525:0:11910:12805
838 : u_int len ;IdentifierDeclStatement531:1:12058:12067
842 : unsigned char gts_spec , gts_cnt ;IdentifierDeclStatement530:1:12024:12055
834 : int i ;IdentifierDeclStatement532:1:12070:12075
630 -----> 780data_len
633 -----> 652p
633 -----> 695p
633 -----> 730p
633 -----> 825p
636 -----> 695ndo
636 -----> 761ndo
636 -----> 809ndo
719 -----> 652i
719 -----> 695i
719 -----> 722i
719 -----> 719i
726 -----> 652i
726 -----> 695i
726 -----> 719i
726 -----> 722i
784 -----> 641len
784 -----> 759len
784 -----> 780len
819 -----> 722gts_cnt
819 -----> 748gts_cnt
819 -----> 784gts_cnt
819 -----> 800gts_cnt
819 -----> 815gts_cnt
825 -----> 819gts_spec
722 -----> 719None
722 -----> 712None
722 -----> 695None
722 -----> 652None
761 -----> 722None
761 -----> 643None
761 -----> 730None
761 -----> 726None
761 -----> 641None
761 -----> 748None
761 -----> 759None
780 -----> 769None
780 -----> 761None
780 -----> 773None
809 -----> 800None
815 -----> 796None
815 -----> 780None
815 -----> 784None
815 -----> 809None
627 -----> 838None
627 -----> 842None
627 -----> 819None
627 -----> 633None
627 -----> 636None
627 -----> 630None
627 -----> 834None
627 -----> 815None
627 -----> 825None
838 -----> 784len
838 -----> 780len
838 -----> 759len
838 -----> 641len
842 -----> 825gts_spec
842 -----> 819gts_cnt
842 -----> 815gts_cnt
842 -----> 800gts_cnt
842 -----> 748gts_cnt
842 -----> 722gts_cnt
834 -----> 726i
834 -----> 722i
834 -----> 719i
834 -----> 695i
834 -----> 652i
----------------------------pdg--------------------------------------------------
864 : u_int data_lenParameter571:9:12919:12932
1018 : data_len < lenCondition584:5:13231:13244
867 : const u_char * pParameter570:9:12893:12907
895 : ieee802_15_4_print_addr ( ndo , p + 1 + s_cnt * 2 + i * 8 , 8 )ExpressionStatement602:3:13646:13710
956 : ieee802_15_4_print_addr ( ndo , p + 1 + i * 2 , 2 )ExpressionStatement594:3:13459:13505
1066 : pas = GET_U_1 ( p )ExpressionStatement575:1:12981:12997
870 : netdissect_options * ndoParameter569:37:12859:12881
999 : ndo -> ndo_vflag < 2Condition588:5:13326:13343
1034 : ndo -> ndo_vflag > 0Condition579:5:13085:13102
916 : i ++IncDecOp601:24:13636:13638
919 : i < e_cntCondition601:13:13625:13633
923 : i = 0 ;ForInit601:6:13618:13623
973 : i ++IncDecOp593:24:13449:13451
976 : i < s_cntCondition593:13:13438:13446
980 : i = 0 ;ForInit593:6:13431:13436
1040 : len = 1 + s_cnt * 2 + e_cnt * 8ExpressionStatement578:1:13047:13078
875 : return len ;ReturnStatement608:1:13755:13765
997 : return len ;ReturnStatement589:2:13350:13360
1052 : e_cnt = ( pas >> 4 ) & 0x7ExpressionStatement577:1:13020:13044
934 : e_cnt != 0Condition599:5:13554:13563
1060 : s_cnt = pas & 0x7ExpressionStatement576:1:13000:13017
991 : s_cnt != 0Condition591:5:13370:13379
888 : ND_PRINT ( " " )ExpressionStatement604:3:13715:13728
927 : ND_PRINT ( ", Extended address list = [ " )ExpressionStatement600:2:13570:13610
879 : ND_PRINT ( "]" )ExpressionStatement606:2:13736:13749
949 : ND_PRINT ( " " )ExpressionStatement595:3:13510:13523
940 : ND_PRINT ( "]" )ExpressionStatement597:2:13531:13544
984 : ND_PRINT ( ", Short address list = [ " )ExpressionStatement592:2:13386:13423
1007 : return - 1 ;ReturnStatement586:2:13307:13316
1011 : ND_PRINT ( " [ERROR: Pending address list truncated]" )ExpressionStatement585:2:13251:13303
1025 : ND_PRINT ( "\n\tPending address list, "
"# short addresses = %d, # extended addresses = %d" ,
s_cnt , e_cnt )Statement582:4:13208:13212
861 : ieee802_15_4_print_pending_addressesFunction568:0:12809:13767
1075 : unsigned char pas , s_cnt , e_cnt , len , i ;IdentifierDeclStatement573:1:12938:12977
864 -----> 1018data_len
867 -----> 895p
867 -----> 956p
867 -----> 1066p
870 -----> 895ndo
870 -----> 956ndo
870 -----> 999ndo
870 -----> 1034ndo
916 -----> 895i
916 -----> 919i
916 -----> 916i
923 -----> 916i
923 -----> 895i
923 -----> 919i
973 -----> 956i
973 -----> 976i
973 -----> 973i
980 -----> 956i
980 -----> 973i
980 -----> 976i
1040 -----> 875len
1040 -----> 997len
1040 -----> 1018len
1052 -----> 919e_cnt
1052 -----> 934e_cnt
1052 -----> 1040e_cnt
1060 -----> 895s_cnt
1060 -----> 976s_cnt
1060 -----> 991s_cnt
1060 -----> 1040s_cnt
1066 -----> 1052pas
1066 -----> 1060pas
919 -----> 895None
919 -----> 916None
919 -----> 888None
934 -----> 927None
934 -----> 923None
934 -----> 919None
934 -----> 879None
976 -----> 949None
976 -----> 956None
976 -----> 973None
991 -----> 980None
991 -----> 976None
991 -----> 940None
991 -----> 984None
999 -----> 997None
999 -----> 991None
999 -----> 875None
999 -----> 934None
1018 -----> 1007None
1018 -----> 999None
1018 -----> 1011None
1034 -----> 1025None
861 -----> 1060None
861 -----> 1040None
861 -----> 1034None
861 -----> 867None
861 -----> 1066None
861 -----> 1018None
861 -----> 870None
861 -----> 864None
861 -----> 1052None
861 -----> 1075None
1075 -----> 1060s_cnt
1075 -----> 991s_cnt
1075 -----> 976s_cnt
1075 -----> 895s_cnt
1075 -----> 980i
1075 -----> 976i
1075 -----> 973i
1075 -----> 956i
1075 -----> 923i
1075 -----> 919i
1075 -----> 916i
1075 -----> 895i
1075 -----> 1040len
1075 -----> 1018len
1075 -----> 997len
1075 -----> 875len
1075 -----> 1052e_cnt
1075 -----> 934e_cnt
1075 -----> 919e_cnt
1075 -----> 1066pas
973 -----> 919i
973 -----> 916i
----------------------------pdg--------------------------------------------------
1107 : int element_idParameter616:8:13901:13914
1873 : element_id == 0x21Condition686:7:15430:15447
2190 : element_idCondition620:9:13937:13946
1110 : unsigned short ie_lenParameter615:8:13870:13890
1238 : ie_len != 2Condition813:6:18644:18654
1360 : ie_len < ptr + ulen * 2Condition787:8:18074:18096
1888 : len = ieee802_15_4_print_pending_addresses ( ndo , p + ptr , ie_len - ptr )ExpressionStatement677:3:15268:15371
1586 : ie_len < ptr + ulenCondition744:7:16998:17016
1145 : i < ie_lenCondition849:13:19151:19160
1462 : ie_len < ptr + ulenCondition767:7:17592:17610
1528 : ie_len < ptr + 5Condition754:7:17222:17237
1637 : ie_len < ptr + 4Condition735:7:16767:16782
1402 : ie_len < ptr + 1Condition777:8:17866:17881
1680 : ie_len < ptr + 8Condition727:7:16516:16531
1919 : ie_len < 3Condition672:7:15156:15165
1971 : ie_len < 2Condition661:6:14900:14909
2021 : ie_len < 4Condition649:6:14627:14636
1766 : ie_len < ptr + 1Condition709:8:16046:16061
2039 : ie_len != 4 && ie_len != 6Condition643:7:14513:14538
2065 : ie_len >= 6Condition639:7:14421:14431
1293 : ie_len != 4Condition801:6:18357:18367
1867 : ie_len < ptr + 2Condition688:8:15465:15480
2130 : i < ie_lenCondition628:14:14165:14174
2185 : ie_len < 3Condition622:6:13970:13979
2100 : ie_len < 4Condition634:6:14260:14269
1113 : const u_char * pParameter614:8:13845:13859
1258 : w_u_interval = GET_LE_U_2 ( p + 2 )ExpressionStatement806:3:18490:18522
1319 : ND_PRINT ( "%02x " , GET_LE_U_2 ( p + ptr + i * 2 ) )ExpressionStatement792:5:18219:18272
1614 : ulen = GET_LE_U_2 ( p + ptr + 2 )ExpressionStatement740:3:16865:16895
1745 : ss = GET_U_1 ( p + ptr )ExpressionStatement713:4:16162:16183
1126 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement850:3:19173:19206
1269 : r_time = GET_LE_U_2 ( p )ExpressionStatement805:3:18463:18485
1505 : ulen = GET_LE_U_2 ( p + ptr + 4 )ExpressionStatement759:3:17336:17366
1540 : ND_PRINT ( "%02x " , GET_U_1 ( p + ptr + i ) )ExpressionStatement750:4:17152:17191
1846 : ss = GET_LE_U_2 ( p + ptr )ExpressionStatement692:4:15581:15605
1932 : ss = GET_LE_U_2 ( p )ExpressionStatement670:3:15072:15090
1416 : ND_PRINT ( "%02x " , GET_U_1 ( p + ptr + i ) )ExpressionStatement773:4:17770:17809
1381 : ulen = GET_U_1 ( p + ptr )ExpressionStatement781:4:17973:17996
1596 : ND_PRINT ( "SD Index = %d, Bitmap len = %d, " , GET_LE_U_2 ( p + ptr ) , ulen )ExpressionStatement741:3:16900:16976
1981 : ND_PRINT ( "Time to First Listen = %d, # of Repeat Listen = %d, Repeat Listen Interval = %d" , GET_U_1 ( p ) , GET_U_1 ( p + 1 ) , GET_LE_U_2 ( p + 2 ) )ExpressionStatement652:3:14697:14850
1213 : val = GET_LE_U_2 ( p )ExpressionStatement819:3:18753:18772
2049 : ND_PRINT ( ", Rendezvous time = %d" , GET_LE_U_2 ( p + 4 ) )ExpressionStatement640:4:14440:14499
2069 : ND_PRINT ( "CSL Phase = %d, CSL Period = %d" , GET_LE_U_2 ( p ) , GET_LE_U_2 ( p + 2 ) )ExpressionStatement637:3:14330:14412
2111 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement629:4:14188:14221
2145 : ND_PRINT ( "OUI = 0x%02x%02x%02x, " , GET_U_1 ( p ) , GET_U_1 ( p + 1 ) , GET_U_1 ( p + 2 ) )ExpressionStatement625:3:14042:14125
1116 : netdissect_options * ndoParameter613:29:13812:13834
1923 : ieee802_15_4_print_superframe_specification ( ndo , ss )ExpressionStatement671:3:15095:15147
1142 : i ++IncDecOp849:25:19163:19165
1149 : i = 0 ;ForInit849:6:19144:19149
1184 : timecorr >>= 4ExpressionStatement824:3:18875:18889
1175 : ND_PRINT ( "Ack time correction = %d, " , timecorr )ExpressionStatement826:3:18895:18943
1188 : timecorr = valExpressionStatement823:3:18856:18870
1192 : val <<= 4ExpressionStatement822:3:18842:18851
1196 : val &= 0xfffExpressionStatement821:3:18825:18837
1209 : val & 0x8000Condition820:7:18781:18792
1247 : ND_PRINT ( "Rendezvous time = %d, Wake-up Interval = %d" , r_time , w_u_interval )ExpressionStatement808:3:18528:18610
1339 : i ++IncDecOp791:25:18207:18209
1342 : i < ulenCondition791:15:18197:18204
1346 : i = 0 ;ForInit791:8:18190:18195
1377 : ptr ++ExpressionStatement782:4:18002:18007
1304 : ptr += ulen * 2ExpressionStatement796:4:18303:18318
1368 : ND_PRINT ( "Hopping Seq length = %d [ " , ulen )ExpressionStatement783:4:18013:18057
1410 : ptr += ulenExpressionStatement775:3:17819:17830
1434 : i ++IncDecOp772:24:17759:17761
1437 : i < ulenCondition772:14:17749:17756
1441 : i = 0 ;ForInit772:7:17742:17747
1468 : ptr += 5ExpressionStatement766:3:17575:17583
1534 : ptr += ulenExpressionStatement752:3:17201:17212
1558 : i ++IncDecOp749:24:17141:17143
1561 : i < ulenCondition749:14:17131:17138
1565 : i = 0 ;ForInit749:7:17124:17129
1592 : ptr += 4ExpressionStatement743:3:16981:16989
1643 : ptr += 8ExpressionStatement734:3:16750:16758
1741 : ptr ++ExpressionStatement714:4:16189:16194
1711 : ss & 0x40Condition720:8:16372:16380
1715 : ND_PRINT ( ", %s" , ( ( ss & 0x10 ) ? "Channel hopping mode" : "Channel adaptation mode" ) )ExpressionStatement717:4:16262:16362
1730 : ND_PRINT ( "Multi-superframe Order = %d" , ss & 0x0f )ExpressionStatement715:4:16200:16256
1698 : ss & 0x80Condition723:8:16441:16449
1775 : hopping_present = 1ExpressionStatement706:5:15999:16018
1408 : hopping_presentCondition776:7:17839:17853
1842 : ptr += 2ExpressionStatement693:4:15611:15619
1786 : ss & 0x1000Condition704:8:15934:15944
1799 : ss & 0x800Condition701:8:15862:15871
1812 : ss & 0x400Condition698:8:15792:15801
1816 : ND_PRINT ( ", %s" , ( ( ss & 0x100 ) ? "Channel hopping mode" : "Channel adaptation mode" ) )ExpressionStatement695:4:15681:15782
1831 : ND_PRINT ( "Multi-superframe Order = %d" , ss & 0xff )ExpressionStatement694:4:15625:15675
1877 : ptr += lenExpressionStatement684:3:15410:15420
1884 : len < 0Condition681:7:15380:15386
1905 : ptr = 2ExpressionStatement676:3:15256:15263
1941 : hopping_present = 0ExpressionStatement668:3:15047:15066
2127 : i ++IncDecOp628:26:14177:14179
2134 : i = 3 ;ForInit628:7:14158:14163
1202 : ND_PRINT ( "Negative " )ExpressionStatement820:23:18797:18818
1226 : unsigned short val ;IdentifierDeclStatement816:3:18710:18728
1222 : short timecorr ;IdentifierDeclStatement817:3:18733:18747
1231 : ND_PRINT ( "[ERROR: Length != 2]" )ExpressionStatement814:3:18662:18694
1286 : ND_PRINT ( "[ERROR: Length != 2]" )ExpressionStatement802:3:18375:18407
1278 : unsigned short r_time , w_u_interval ;IdentifierDeclStatement804:3:18423:18458
1352 : break ;BreakStatement789:5:18169:18174
1353 : ND_PRINT ( " [ERROR: Truncated in Channel offset bitmap]" )ExpressionStatement788:5:18106:18162
1298 : break ;BreakStatement799:2:18331:18336
1310 : ND_PRINT ( "]" )ExpressionStatement795:4:18284:18297
1394 : break ;BreakStatement779:5:17956:17961
1395 : ND_PRINT ( " [ERROR: Truncated in Hopping Sequence length]" )ExpressionStatement778:5:17891:17949
1445 : ND_PRINT ( " Channel offset bitmap = " )ExpressionStatement771:3:17696:17733
1455 : ND_PRINT ( " [ERROR: Truncated in Channel offset bitmap]" )ExpressionStatement768:4:17619:17675
1454 : break ;BreakStatement769:4:17681:17686
1521 : ND_PRINT ( " [ERROR: Truncated before Channel hopping specification]" )ExpressionStatement755:4:17246:17314
1473 : ND_PRINT ( "Hopping Seq ID = %d, PAN Coordinator BSN = %d, "
"Channel offset = %d, Bitmap length = %d, " ,
GET_U_1 ( p + ptr ) ,
GET_U_1 ( p + ptr + 1 ) ,
GET_LE_U_2 ( p + ptr + 2 ) ,
ulen )Statement765:5:17565:17568
1520 : break ;BreakStatement756:4:17320:17325
1569 : ND_PRINT ( " SD Bitmap = " )ExpressionStatement748:3:17090:17115
1579 : ND_PRINT ( " [ERROR: Truncated in SD bitmap]" )ExpressionStatement745:4:17025:17069
1578 : break ;BreakStatement746:4:17075:17080
1629 : break ;BreakStatement737:4:16849:16854
1630 : ND_PRINT ( " [ERROR: Truncated before Beacon Bitmap]" )ExpressionStatement736:4:16791:16843
1672 : break ;BreakStatement729:4:16619:16624
1673 : ND_PRINT ( " [ERROR: Truncated before Time synchronization specification]" )ExpressionStatement728:4:16540:16613
1648 : ND_PRINT ( "Beacon timestamp = %" PRIu64 ", offset = %d" ,
GET_LE_U_6 ( p + ptr ) ,
GET_LE_U_2 ( p + ptr + 6 ) )Statement733:5:16721:16730
1691 : ND_PRINT ( ", Deferred beacon enabled" )ExpressionStatement724:5:16459:16496
1704 : ND_PRINT ( ", CAP reduction enabled" )ExpressionStatement721:5:16390:16425
1759 : ND_PRINT ( "[ERROR: Truncated before DSME Superframe Specification]" )ExpressionStatement710:5:16071:16138
1758 : break ;BreakStatement711:5:16145:16150
1779 : ND_PRINT ( ", Hopping Sequence Present" )ExpressionStatement705:5:15954:15992
1792 : ND_PRINT ( ", Deferred beacon enabled" )ExpressionStatement702:5:15881:15918
1805 : ND_PRINT ( ", CAP reduction enabled" )ExpressionStatement699:5:15811:15846
1859 : break ;BreakStatement690:5:15564:15569
1860 : ND_PRINT ( "[ERROR: Truncated before DSME Superframe Specification]" )ExpressionStatement689:5:15490:15557
1883 : break ;BreakStatement682:4:15395:15400
1912 : ND_PRINT ( "[ERROR: Truncated before pending addresses field]" )ExpressionStatement673:4:15174:15235
1911 : break ;BreakStatement674:4:15241:15246
1953 : unsigned short ss , ptr , ulen ;IdentifierDeclStatement664:3:14975:15003
1945 : int hopping_present ;IdentifierDeclStatement666:3:15022:15041
1964 : ND_PRINT ( "[ERROR: Truncated DSME PAN IE]" )ExpressionStatement662:3:14917:14959
1949 : short len ;IdentifierDeclStatement665:3:15008:15017
2014 : ND_PRINT ( "[ERROR: Truncated RIT IE]" )ExpressionStatement650:3:14644:14681
2032 : ND_PRINT ( " [ERROR: CSL IE length wrong]" )ExpressionStatement644:4:14547:14588
2093 : ND_PRINT ( "[ERROR: Truncated CSL IE]" )ExpressionStatement635:3:14277:14314
2138 : ND_PRINT ( "Data = " )ExpressionStatement627:3:14130:14149
2178 : ND_PRINT ( "[ERROR: Vendor OUI missing]" )ExpressionStatement623:3:13987:14026
2189 : case 0x00 :Label621:1:13952:13961
2026 : break ;BreakStatement647:2:14601:14606
1164 : case 0x28 :Label841:1:19055:19064
1977 : break ;BreakStatement657:2:14858:14863
1242 : case 0x1e :Label812:1:18626:18635
1171 : break ;BreakStatement828:2:18951:18956
1123 : break ;BreakStatement852:2:19214:19219
1168 : case 0x24 :Label833:1:18991:19000
1163 : case 0x29 :Label843:1:19071:19080
1162 : case 0x2b :Label845:1:19087:19096
1169 : case 0x23 :Label831:1:18975:18984
1170 : case 0x22 :Label829:1:18959:18968
1975 : case 0x21 :Label660:1:14882:14891
2104 : case 0x1a :Label633:1:14242:14251
1167 : case 0x25 :Label835:1:19007:19016
1165 : case 0x27 :Label839:1:19039:19048
1297 : case 0x1d :Label800:1:18339:18348
1243 : break ;BreakStatement811:2:18618:18623
2025 : case 0x1b :Label648:1:14609:14618
1166 : case 0x26 :Label837:1:19023:19032
1160 : default :Label847:1:19103:19110
2105 : break ;BreakStatement632:2:14234:14239
1153 : ND_PRINT ( "IE Data = " )ExpressionStatement848:2:19114:19136
1976 : case 0x1c :Label658:1:14866:14875
1104 : ieee802_15_4_print_header_ieFunction612:0:13771:19224
2192 : int i ;IdentifierDeclStatement618:1:13920:13925
1107 -----> 1873element_id
1107 -----> 2190element_id
1110 -----> 1238ie_len
1110 -----> 1360ie_len
1110 -----> 1888ie_len
1110 -----> 1586ie_len
1110 -----> 1145ie_len
1110 -----> 1462ie_len
1110 -----> 1528ie_len
1110 -----> 1637ie_len
1110 -----> 1402ie_len
1110 -----> 1680ie_len
1110 -----> 1919ie_len
1110 -----> 1971ie_len
1110 -----> 2021ie_len
1110 -----> 1766ie_len
1110 -----> 2039ie_len
1110 -----> 2065ie_len
1110 -----> 1293ie_len
1110 -----> 1867ie_len
1110 -----> 2130ie_len
1110 -----> 2185ie_len
1110 -----> 2100ie_len
1113 -----> 1258p
1113 -----> 1319p
1113 -----> 1614p
1113 -----> 1745p
1113 -----> 1126p
1113 -----> 1269p
1113 -----> 1505p
1113 -----> 1540p
1113 -----> 1846p
1113 -----> 1932p
1113 -----> 1416p
1113 -----> 1381p
1113 -----> 1596p
1113 -----> 1981p
1113 -----> 1213p
1113 -----> 2049p
1113 -----> 2069p
1113 -----> 2111p
1113 -----> 2145p
1113 -----> 1888p
1116 -----> 1888ndo
1116 -----> 1923ndo
1142 -----> 1126i
1142 -----> 1145i
1142 -----> 1142i
1149 -----> 1145i
1149 -----> 1142i
1149 -----> 1126i
1184 -----> 1175timecorr
1188 -----> 1184timecorr
1192 -----> 1188val
1196 -----> 1192val
1213 -----> 1196val
1213 -----> 1209val
1258 -----> 1247w_u_interval
1269 -----> 1247r_time
1339 -----> 1342i
1339 -----> 1319i
1339 -----> 1339i
1346 -----> 1342i
1346 -----> 1339i
1346 -----> 1319i
1377 -----> 1360ptr
1377 -----> 1304ptr
1377 -----> 1319ptr
1381 -----> 1360ulen
1381 -----> 1368ulen
1381 -----> 1304ulen
1381 -----> 1342ulen
1410 -----> 1377ptr
1410 -----> 1402ptr
1410 -----> 1381ptr
1434 -----> 1437i
1434 -----> 1416i
1434 -----> 1434i
1441 -----> 1434i
1441 -----> 1416i
1441 -----> 1437i
1468 -----> 1410ptr
1468 -----> 1416ptr
1468 -----> 1462ptr
1505 -----> 1410ulen
1505 -----> 1437ulen
1505 -----> 1462ulen
1534 -----> 1528ptr
1534 -----> 1505ptr
1534 -----> 1468ptr
1558 -----> 1540i
1558 -----> 1561i
1558 -----> 1558i
1565 -----> 1558i
1565 -----> 1561i
1565 -----> 1540i
1592 -----> 1586ptr
1592 -----> 1534ptr
1592 -----> 1540ptr
1614 -----> 1586ulen
1614 -----> 1596ulen
1614 -----> 1561ulen
1614 -----> 1534ulen
1643 -----> 1614ptr
1643 -----> 1637ptr
1643 -----> 1596ptr
1643 -----> 1592ptr
1741 -----> 1643ptr
1741 -----> 1680ptr
1745 -----> 1711ss
1745 -----> 1715ss
1745 -----> 1730ss
1745 -----> 1698ss
1775 -----> 1408hopping_present
1842 -----> 1680ptr
1842 -----> 1643ptr
1846 -----> 1786ss
1846 -----> 1799ss
1846 -----> 1812ss
1846 -----> 1816ss
1846 -----> 1831ss
1877 -----> 1741ptr
1877 -----> 1745ptr
1877 -----> 1766ptr
1877 -----> 1842ptr
1877 -----> 1846ptr
1877 -----> 1867ptr
1888 -----> 1877len
1888 -----> 1884len
1905 -----> 1877ptr
1905 -----> 1888ptr
1932 -----> 1923ss
1941 -----> 1408hopping_present
2127 -----> 2111i
2127 -----> 2130i
2127 -----> 2127i
2134 -----> 2111i
2134 -----> 2127i
2134 -----> 2130i
1145 -----> 1126None
1145 -----> 1142None
1209 -----> 1202None
1238 -----> 1196None
1238 -----> 1209None
1238 -----> 1226None
1238 -----> 1192None
1238 -----> 1188None
1238 -----> 1222None
1238 -----> 1213None
1238 -----> 1175None
1238 -----> 1231None
1238 -----> 1184None
1293 -----> 1286None
1293 -----> 1278None
1293 -----> 1258None
1293 -----> 1247None
1293 -----> 1269None
1342 -----> 1319None
1342 -----> 1339None
1360 -----> 1352None
1360 -----> 1353None
1360 -----> 1298None
1360 -----> 1304None
1360 -----> 1310None
1360 -----> 1346None
1360 -----> 1342None
1402 -----> 1394None
1402 -----> 1360None
1402 -----> 1377None
1402 -----> 1381None
1402 -----> 1368None
1402 -----> 1395None
1408 -----> 1298None
1408 -----> 1402None
1437 -----> 1434None
1437 -----> 1416None
1462 -----> 1445None
1462 -----> 1441None
1462 -----> 1437None
1462 -----> 1455None
1462 -----> 1410None
1462 -----> 1408None
1462 -----> 1454None
1528 -----> 1505None
1528 -----> 1521None
1528 -----> 1473None
1528 -----> 1520None
1528 -----> 1462None
1528 -----> 1468None
1561 -----> 1558None
1561 -----> 1540None
1586 -----> 1561None
1586 -----> 1569None
1586 -----> 1528None
1586 -----> 1579None
1586 -----> 1534None
1586 -----> 1565None
1586 -----> 1578None
1637 -----> 1629None
1637 -----> 1592None
1637 -----> 1630None
1637 -----> 1586None
1637 -----> 1596None
1637 -----> 1614None
1680 -----> 1672None
1680 -----> 1673None
1680 -----> 1643None
1680 -----> 1648None
1680 -----> 1637None
1698 -----> 1691None
1711 -----> 1704None
1766 -----> 1680None
1766 -----> 1759None
1766 -----> 1758None
1766 -----> 1745None
1766 -----> 1741None
1766 -----> 1711None
1766 -----> 1730None
1766 -----> 1715None
1766 -----> 1698None
1786 -----> 1775None
1786 -----> 1779None
1799 -----> 1792None
1812 -----> 1805None
1867 -----> 1680None
1867 -----> 1812None
1867 -----> 1799None
1867 -----> 1842None
1867 -----> 1859None
1867 -----> 1786None
1867 -----> 1816None
1867 -----> 1831None
1867 -----> 1846None
1867 -----> 1860None
1873 -----> 1766None
1873 -----> 1867None
1884 -----> 1883None
1884 -----> 1877None
1884 -----> 1873None
1919 -----> 1884None
1919 -----> 1912None
1919 -----> 1888None
1919 -----> 1905None
1919 -----> 1911None
1971 -----> 1923None
1971 -----> 1298None
1971 -----> 1953None
1971 -----> 1945None
1971 -----> 1964None
1971 -----> 1949None
1971 -----> 1941None
1971 -----> 1919None
1971 -----> 1932None
2021 -----> 2014None
2021 -----> 1981None
2039 -----> 2032None
2065 -----> 2049None
2100 -----> 2039None
2100 -----> 2065None
2100 -----> 2069None
2100 -----> 2093None
2130 -----> 2127None
2130 -----> 2111None
2185 -----> 2134None
2185 -----> 2145None
2185 -----> 2138None
2185 -----> 2178None
2185 -----> 2130None
2190 -----> 2189None
2190 -----> 2026None
2190 -----> 1164None
2190 -----> 1977None
2190 -----> 1242None
2190 -----> 1171None
2190 -----> 2021None
2190 -----> 1123None
2190 -----> 1168None
2190 -----> 1149None
2190 -----> 1163None
2190 -----> 1162None
2190 -----> 1169None
2190 -----> 2100None
2190 -----> 1170None
2190 -----> 1975None
2190 -----> 1238None
2190 -----> 1293None
2190 -----> 2104None
2190 -----> 1145None
2190 -----> 1167None
2190 -----> 1165None
2190 -----> 1297None
2190 -----> 1971None
2190 -----> 1243None
2190 -----> 2025None
2190 -----> 1166None
2190 -----> 1160None
2190 -----> 2105None
2190 -----> 2185None
2190 -----> 1153None
2190 -----> 1976None
1104 -----> 1110None
1104 -----> 2192None
1104 -----> 2190None
1104 -----> 1116None
1104 -----> 1107None
1104 -----> 1113None
1226 -----> 1213val
1226 -----> 1209val
1226 -----> 1196val
1226 -----> 1192val
1222 -----> 1188timecorr
1222 -----> 1184timecorr
1222 -----> 1175timecorr
1278 -----> 1258w_u_interval
1278 -----> 1247w_u_interval
1278 -----> 1269r_time
1278 -----> 1247r_time
1953 -----> 1614ulen
1953 -----> 1596ulen
1953 -----> 1586ulen
1953 -----> 1561ulen
1953 -----> 1505ulen
1953 -----> 1462ulen
1953 -----> 1437ulen
1953 -----> 1381ulen
1953 -----> 1368ulen
1953 -----> 1360ulen
1953 -----> 1342ulen
1953 -----> 1905ptr
1953 -----> 1877ptr
1953 -----> 1867ptr
1953 -----> 1842ptr
1953 -----> 1766ptr
1953 -----> 1741ptr
1953 -----> 1680ptr
1953 -----> 1643ptr
1953 -----> 1637ptr
1953 -----> 1596ptr
1953 -----> 1592ptr
1953 -----> 1586ptr
1953 -----> 1540ptr
1953 -----> 1534ptr
1953 -----> 1528ptr
1953 -----> 1468ptr
1953 -----> 1462ptr
1953 -----> 1416ptr
1953 -----> 1410ptr
1953 -----> 1402ptr
1953 -----> 1377ptr
1953 -----> 1360ptr
1953 -----> 1319ptr
1953 -----> 1304ptr
1953 -----> 1932ss
1953 -----> 1923ss
1953 -----> 1846ss
1953 -----> 1831ss
1953 -----> 1816ss
1953 -----> 1812ss
1953 -----> 1799ss
1953 -----> 1786ss
1953 -----> 1745ss
1953 -----> 1730ss
1953 -----> 1715ss
1953 -----> 1711ss
1953 -----> 1698ss
1945 -----> 1941hopping_present
1945 -----> 1775hopping_present
1945 -----> 1408hopping_present
1949 -----> 1888len
1949 -----> 1884len
2192 -----> 2134i
2192 -----> 2130i
2192 -----> 2127i
2192 -----> 2111i
2192 -----> 1565i
2192 -----> 1561i
2192 -----> 1558i
2192 -----> 1540i
2192 -----> 1441i
2192 -----> 1437i
2192 -----> 1434i
2192 -----> 1416i
2192 -----> 1346i
2192 -----> 1342i
2192 -----> 1339i
2192 -----> 1319i
2192 -----> 1149i
2192 -----> 1145i
2192 -----> 1142i
2192 -----> 1126i
2127 -----> 1561i
2127 -----> 1558i
1932 -----> 1831ss
1932 -----> 1816ss
1932 -----> 1812ss
1932 -----> 1799ss
1932 -----> 1786ss
1932 -----> 1730ss
1932 -----> 1715ss
1932 -----> 1711ss
1932 -----> 1698ss
1614 -----> 1462ulen
1434 -----> 1342i
1434 -----> 1339i
1339 -----> 1145i
1339 -----> 1142i
----------------------------pdg--------------------------------------------------
2218 : int * payload_ie_presentParameter861:6:19347:19369
2250 : * payload_ie_present = 1ExpressionStatement916:3:20485:20508
2488 : * payload_ie_present = 0ExpressionStatement866:1:19429:19452
2221 : u_int caplenParameter860:6:19327:19338
2260 : caplen -= 2 + ie_lenExpressionStatement914:2:20432:20452
2369 : caplen < 2U + ie_lenCondition892:6:20009:20028
2480 : caplen < 2Condition869:6:19476:19485
2224 : const u_char * pParameter859:6:19304:19318
2352 : p += 2ExpressionStatement897:2:20099:20105
2458 : ie = GET_LE_U_2 ( p )ExpressionStatement874:2:19558:19576
2227 : netdissect_options * ndoParameter858:34:19273:19295
2329 : ieee802_15_4_print_header_ie ( ndo , p , ie_len , element_id )ExpressionStatement901:3:20157:20224
2342 : ndo -> ndo_vflag > 3 && ie_len != 0Condition900:6:20117:20149
2235 : caplen != 0Condition922:10:20576:20586
2266 : p += ie_lenExpressionStatement913:2:20417:20428
2270 : len += 2 + ie_lenExpressionStatement912:2:20396:20413
2232 : return len ;ReturnStatement923:1:20591:20601
2306 : i ++IncDecOp906:27:20314:20316
2290 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement907:5:20326:20359
2309 : i < ie_lenCondition906:15:20302:20311
2313 : i = 0 ;ForInit906:8:20295:20300
2426 : element_id = ( ie >> 7 ) & 0xffExpressionStatement880:2:19684:19713
2243 : element_id == 0x7fCondition919:6:20530:20547
2256 : element_id == 0x7eCondition915:6:20460:20477
2381 : ND_PRINT ( "\n\t%s [ length = %d, " , h_ie_names [ element_id ] , ie_len )ExpressionStatement888:4:19920:19992
2395 : ND_PRINT ( "\n\t%s [" , h_ie_names [ element_id ] )ExpressionStatement886:4:19858:19902
2411 : ND_PRINT ( "Reserved Element ID %02x, length = %d " , element_id , ie_len )ExpressionStatement882:3:19744:19819
2422 : element_id > 127Condition881:6:19721:19736
2434 : ie_len = ie & 0x7fExpressionStatement879:2:19662:19680
2324 : ie_len != 0Condition904:7:20244:20254
2406 : ie_len == 0Condition885:7:19839:19849
2449 : CHECK_BIT ( ie , 15 )Condition875:6:19584:19600
2484 : len = 0ExpressionStatement867:1:19455:19462
2242 : break ;BreakStatement920:3:20555:20560
2249 : break ;BreakStatement917:3:20513:20518
2317 : ND_PRINT ( "IE Data = " )ExpressionStatement905:4:20263:20285
2276 : ND_PRINT ( "] " )ExpressionStatement911:2:20378:20392
2358 : return - 1 ;ReturnStatement894:3:20079:20088
2362 : ND_PRINT ( "[ERROR: Truncated IE data]" )ExpressionStatement893:3:20036:20074
2442 : ND_PRINT ( "[ERROR: Header IE with type 1] " )ExpressionStatement876:3:19608:19651
2469 : return - 1 ;ReturnStatement871:3:19538:19547
2473 : ND_PRINT ( "[ERROR: Truncated header IE]" )ExpressionStatement870:3:19493:19533
2215 : ieee802_15_4_print_header_ie_listFunction857:0:19228:20603
2498 : int len , ie , element_id , i ;IdentifierDeclStatement863:1:19375:19401
2494 : unsigned short ie_len ;IdentifierDeclStatement864:1:19404:19425
2218 -----> 2250payload_ie_present
2218 -----> 2488payload_ie_present
2221 -----> 2260caplen
2221 -----> 2369caplen
2221 -----> 2480caplen
2224 -----> 2352p
2224 -----> 2458p
2227 -----> 2329ndo
2227 -----> 2342ndo
2260 -----> 2369caplen
2260 -----> 2480caplen
2260 -----> 2235caplen
2260 -----> 2260caplen
2266 -----> 2352p
2266 -----> 2458p
2270 -----> 2232len
2270 -----> 2270len
2306 -----> 2290i
2306 -----> 2309i
2306 -----> 2306i
2313 -----> 2290i
2313 -----> 2306i
2313 -----> 2309i
2352 -----> 2266p
2352 -----> 2290p
2352 -----> 2329p
2426 -----> 2243element_id
2426 -----> 2256element_id
2426 -----> 2329element_id
2426 -----> 2381element_id
2426 -----> 2395element_id
2426 -----> 2411element_id
2426 -----> 2422element_id
2434 -----> 2270ie_len
2434 -----> 2266ie_len
2434 -----> 2309ie_len
2434 -----> 2324ie_len
2434 -----> 2329ie_len
2434 -----> 2369ie_len
2434 -----> 2260ie_len
2434 -----> 2381ie_len
2434 -----> 2406ie_len
2434 -----> 2411ie_len
2434 -----> 2342ie_len
2458 -----> 2426ie
2458 -----> 2434ie
2458 -----> 2449ie
2484 -----> 2270len
2235 -----> 2232None
2235 -----> 2480None
2243 -----> 2235None
2243 -----> 2232None
2243 -----> 2242None
2256 -----> 2243None
2256 -----> 2232None
2256 -----> 2250None
2256 -----> 2249None
2309 -----> 2306None
2309 -----> 2290None
2324 -----> 2309None
2324 -----> 2317None
2324 -----> 2313None
2342 -----> 2324None
2342 -----> 2329None
2369 -----> 2276None
2369 -----> 2266None
2369 -----> 2352None
2369 -----> 2270None
2369 -----> 2256None
2369 -----> 2358None
2369 -----> 2362None
2369 -----> 2260None
2369 -----> 2342None
2406 -----> 2381None
2406 -----> 2395None
2422 -----> 2411None
2422 -----> 2406None
2449 -----> 2442None
2480 -----> 2469None
2480 -----> 2473None
2480 -----> 2458None
2480 -----> 2422None
2480 -----> 2426None
2480 -----> 2449None
2480 -----> 2434None
2480 -----> 2369None
2215 -----> 2227None
2215 -----> 2498None
2215 -----> 2484None
2215 -----> 2488None
2215 -----> 2480None
2215 -----> 2221None
2215 -----> 2224None
2215 -----> 2218None
2215 -----> 2494None
2221 -----> 2235caplen
2224 -----> 2329p
2224 -----> 2290p
2224 -----> 2266p
2498 -----> 2458ie
2498 -----> 2449ie
2498 -----> 2484len
2498 -----> 2270len
2498 -----> 2232len
2498 -----> 2426element_id
2498 -----> 2422element_id
2498 -----> 2411element_id
2498 -----> 2395element_id
2498 -----> 2381element_id
2498 -----> 2329element_id
2498 -----> 2256element_id
2498 -----> 2243element_id
2498 -----> 2313i
2498 -----> 2309i
2498 -----> 2306i
2498 -----> 2290i
2494 -----> 2434ie_len
2494 -----> 2411ie_len
2494 -----> 2406ie_len
2494 -----> 2381ie_len
2494 -----> 2369ie_len
2494 -----> 2342ie_len
2494 -----> 2329ie_len
2494 -----> 2324ie_len
2494 -----> 2309ie_len
2488 -----> 2250payload_ie_present
----------------------------pdg--------------------------------------------------
2534 : int sub_idParameter931:6:20733:20742
3698 : sub_idCondition937:9:20791:20796
2537 : unsigned short sub_ie_lenParameter930:6:20700:20724
3247 : sub_ie_len < 6Condition1019:6:22730:22743
2915 : sub_ie_len == 25Condition1075:13:24141:24156
3200 : sub_ie_len < 1Condition1029:7:22946:22959
2572 : i < sub_ie_lenCondition1165:13:25902:25915
2643 : i < sub_ie_lenCondition1108:14:25373:25386
3151 : sub_ie_len < off + 4Condition1037:8:23137:23156
3078 : sub_ie_len < off + 5Condition1048:9:23456:23475
3544 : sub_ie_len --ExpressionStatement964:3:21437:21449
3574 : sub_ie_len --ExpressionStatement958:3:21295:21307
2934 : sub_ie_len == 1Condition1073:6:24062:24076
3596 : sub_ie_len == 1Condition955:13:21212:21226
3608 : sub_ie_len < 1Condition953:6:21128:21141
3638 : i < sub_ie_lenCondition947:14:21029:21042
2788 : sub_ie_len == 27Condition1090:13:24709:24724
3693 : sub_ie_len < 3Condition939:6:20820:20833
2540 : const u_char * pParameter929:6:20677:20691
2553 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1166:3:25928:25961
2793 : ND_PRINT ( "Time slot ID = %d, CCA Offset = %d, CCA = %d, TX Offset = %d, RX Offset = %d, RX Ack Delay = %d, TX Ack Delay = %d, RX Wait = %d, Ack Wait = %d, RX TX = %d, Max Ack = %d, Max TX = %d, Time slot Length = %d " , GET_U_1 ( p ) , GET_LE_U_2 ( p + 1 ) , GET_LE_U_2 ( p + 3 ) , GET_LE_U_2 ( p + 5 ) , GET_LE_U_2 ( p + 7 ) , GET_LE_U_2 ( p + 9 ) , GET_LE_U_2 ( p + 11 ) , GET_LE_U_2 ( p + 13 ) , GET_LE_U_2 ( p + 15 ) , GET_LE_U_2 ( p + 17 ) , GET_LE_U_2 ( p + 19 ) , GET_LE_U_2 ( p + 21 ) , GET_LE_U_2 ( p + 23 ) )ExpressionStatement1076:3:24164:24694
3548 : p ++ExpressionStatement963:3:21429:21432
3055 : opts = GET_U_1 ( p + off + 4 )ExpressionStatement1052:5:23552:23579
2920 : ND_PRINT ( "Time slot ID = %d " , GET_U_1 ( p ) )ExpressionStatement1074:3:24084:24126
3028 : ND_PRINT ( "\n\t\t\t\t[ Timeslot =  %d, Offset = %d, Options = " , GET_LE_U_2 ( p + off ) , GET_LE_U_2 ( p + off + 2 ) )ExpressionStatement1053:5:23586:23709
2624 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1109:4:25400:25433
3128 : links = GET_U_1 ( p + off + 3 )ExpressionStatement1041:4:23241:23269
3181 : sf_num = GET_U_1 ( p )ExpressionStatement1033:3:23022:23041
3552 : ND_PRINT ( "Hopping Sequence ID = %d" , GET_U_1 ( p ) )ExpressionStatement962:3:21376:21424
2666 : ND_PRINT ( "Time slot ID = %d, CCA Offset = %d, CCA = %d, TX Offset = %d, RX Offset = %d, RX Ack Delay = %d, TX Ack Delay = %d, RX Wait = %d, Ack Wait = %d, RX TX = %d, Max Ack = %d, Max TX = %d, Time slot Length = %d " , GET_U_1 ( p ) , GET_LE_U_2 ( p + 1 ) , GET_LE_U_2 ( p + 3 ) , GET_LE_U_2 ( p + 5 ) , GET_LE_U_2 ( p + 7 ) , GET_LE_U_2 ( p + 9 ) , GET_LE_U_2 ( p + 11 ) , GET_LE_U_2 ( p + 13 ) , GET_LE_U_2 ( p + 15 ) , GET_LE_U_2 ( p + 17 ) , GET_LE_U_2 ( p + 19 ) , GET_LE_U_3 ( p + 21 ) , GET_LE_U_3 ( p + 24 ) )ExpressionStatement1091:3:24732:25262
3099 : ND_PRINT ( "\n\t\t\t[ Handle %d, size = %d, links = %d " , GET_U_1 ( p + off ) , GET_LE_U_2 ( p + off + 1 ) , links )ExpressionStatement1042:4:23275:23398
3582 : ND_PRINT ( "Hopping Sequence ID = %d" , GET_U_1 ( p ) )ExpressionStatement956:3:21234:21282
3619 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement948:4:21056:21089
3653 : ND_PRINT ( "OUI = 0x%02x%02x%02x, " , GET_U_1 ( p ) , GET_U_1 ( p + 1 ) , GET_U_1 ( p + 2 ) )ExpressionStatement942:3:20896:20989
3578 : p ++ExpressionStatement957:3:21287:21290
2569 : i ++IncDecOp1165:29:25918:25920
2576 : i = 0 ;ForInit1165:6:25895:25900
2640 : i ++IncDecOp1108:30:25389:25391
2647 : i = 0 ;ForInit1108:7:25366:25371
2959 : off += 5ExpressionStatement1065:5:23968:23976
3095 : off += 4ExpressionStatement1046:4:23404:23412
2972 : opts & 0x10Condition1062:9:23912:23922
2985 : opts & 0x8Condition1059:9:23850:23859
3011 : opts & 0x2Condition1057:9:23762:23771
2998 : opts & 0x4Condition1058:9:23804:23813
3024 : opts & 0x1Condition1056:9:23720:23729
3084 : j ++IncDecOp1047:26:23440:23442
3087 : j < linksCondition1047:15:23429:23437
3091 : j = 0 ;ForInit1047:8:23422:23427
3157 : i ++IncDecOp1036:26:23122:23124
3160 : i < sf_numCondition1036:14:23110:23119
3164 : i = 0 ;ForInit1036:7:23103:23108
3168 : off = 1ExpressionStatement1035:3:23087:23094
3172 : ND_PRINT ( "Slotframes = %d " , sf_num )ExpressionStatement1034:3:23046:23082
3286 : sub_ie_len -= len * 2ExpressionStatement1009:3:22546:22567
3282 : sub_ie_len < 2Condition1010:7:22576:22589
3292 : p += len * 2ExpressionStatement1008:3:22529:22541
3258 : ND_PRINT ( "Current hop = %d" , GET_LE_U_2 ( p ) )ExpressionStatement1014:3:22652:22695
3325 : i ++IncDecOp1004:23:22450:22452
3328 : i < lenCondition1004:14:22441:22447
3307 : ND_PRINT ( "%02x " , GET_LE_U_2 ( p + i * 2 ) )ExpressionStatement1005:4:22461:22501
3332 : i = 0 ;ForInit1004:7:22434:22439
3361 : sub_ie_len -= 2ExpressionStatement997:3:22274:22289
3346 : sub_ie_len < len * 2Condition1000:7:22347:22366
3365 : p += 2ExpressionStatement996:3:22263:22269
3369 : len = GET_LE_U_2 ( p )ExpressionStatement995:3:22239:22258
3352 : ND_PRINT ( "Hopping Seq length = %d [ " , len )ExpressionStatement998:3:22294:22337
3394 : sub_ie_len -= lenExpressionStatement989:4:22132:22149
3388 : sub_ie_len < 2Condition991:7:22163:22176
3398 : p += lenExpressionStatement988:4:22118:22126
3427 : i ++IncDecOp984:24:22042:22044
3411 : ND_PRINT ( "%02x" , GET_U_1 ( p + i ) )ExpressionStatement985:5:22054:22086
3430 : i < lenCondition984:15:22033:22039
3434 : i = 0 ;ForInit984:8:22026:22031
3459 : len = ( number_of_channels + 7 ) / 8ExpressionStatement978:4:21858:21892
3455 : sub_ie_len < lenCondition979:8:21902:21917
3475 : sub_ie_len -= 7ExpressionStatement976:3:21787:21802
3479 : p += 7ExpressionStatement975:3:21776:21782
3510 : number_of_channels = GET_LE_U_2 ( p + 1 )ExpressionStatement970:3:21564:21602
3499 : ND_PRINT ( "Channel Page = %d, Number of Channels = %d, " , channel_page , number_of_channels )ExpressionStatement971:3:21607:21702
3521 : channel_page = GET_U_1 ( p )ExpressionStatement969:3:21534:21559
3467 : channel_page == 9 || channel_page == 10Condition977:7:21811:21849
3540 : sub_ie_len < 7Condition965:7:21458:21471
3483 : ND_PRINT ( "Phy Configuration = 0x%08x, " , GET_LE_U_4 ( p + 3 ) )ExpressionStatement973:3:21707:21771
3635 : i ++IncDecOp947:30:21045:21047
3642 : i = 3 ;ForInit947:7:21022:21027
2651 : ND_PRINT ( "\n\t\t\tIE Data = " )ExpressionStatement1107:3:25327:25357
2658 : ND_PRINT ( "[ERROR: Length not 1, 25, or 27]" )ExpressionStatement1106:3:25278:25322
2965 : ND_PRINT ( "Priority " )ExpressionStatement1063:6:23933:23954
2978 : ND_PRINT ( "Timekeeping " )ExpressionStatement1060:6:23870:23894
2991 : ND_PRINT ( "Shared " )ExpressionStatement1058:23:23818:23837
3004 : ND_PRINT ( "RX " )ExpressionStatement1057:23:23776:23791
3017 : ND_PRINT ( "TX " )ExpressionStatement1056:23:23734:23749
3071 : ND_PRINT ( "[ERROR: Truncated IE links]" )ExpressionStatement1049:6:23486:23525
2952 : ND_PRINT ( "] " )ExpressionStatement1066:5:23983:23997
3070 : break ;BreakStatement1050:6:23533:23538
3144 : ND_PRINT ( "[ERROR: Truncated IE before slotframes]" )ExpressionStatement1038:5:23166:23217
2943 : ND_PRINT ( "] " )ExpressionStatement1068:4:24009:24023
3143 : break ;BreakStatement1039:5:23224:23229
2939 : break ;BreakStatement1071:2:24036:24041
3192 : break ;BreakStatement1031:4:23007:23012
3193 : ND_PRINT ( "[ERROR: Truncated IE]" )ExpressionStatement1030:4:22968:23001
3240 : ND_PRINT ( "[ERROR: Length != 6]" )ExpressionStatement1020:3:22751:22783
3274 : break ;BreakStatement1012:4:22637:22642
3252 : break ;BreakStatement1017:2:22704:22709
3275 : ND_PRINT ( "[ERROR: IE truncated]" )ExpressionStatement1011:4:22598:22631
3338 : break ;BreakStatement1002:4:22415:22420
3339 : ND_PRINT ( " [ERROR: IE truncated]" )ExpressionStatement1001:4:22375:22409
3298 : ND_PRINT ( "]" )ExpressionStatement1007:3:22511:22524
3381 : ND_PRINT ( "[ERROR: IE truncated]" )ExpressionStatement992:4:22185:22218
3380 : break ;BreakStatement993:4:22224:22229
3438 : ND_PRINT ( "Extended bitmap = 0x" )ExpressionStatement983:4:21984:22016
3402 : ND_PRINT ( ", " )ExpressionStatement987:4:22098:22112
3448 : ND_PRINT ( "[ERROR: IE truncated]" )ExpressionStatement980:5:21927:21960
3447 : break ;BreakStatement981:5:21967:21972
3532 : break ;BreakStatement967:4:21519:21524
3533 : ND_PRINT ( "[ERROR: IE truncated]" )ExpressionStatement966:4:21480:21513
3566 : unsigned short channel_page , number_of_channels ;IdentifierDeclStatement960:3:21323:21370
3601 : ND_PRINT ( "[ERROR: Hopping sequence ID missing]" )ExpressionStatement954:3:21149:21197
3646 : ND_PRINT ( "Data = " )ExpressionStatement946:3:20994:21013
3686 : ND_PRINT ( "[ERROR: Vendor OUI missing]" )ExpressionStatement940:3:20841:20880
3612 : case 0x09 :Label952:1:21110:21119
3220 : ND_PRINT ( "ASN = %010" PRIx64 ", Join Metric = %d " ,
GET_LE_U_5 ( p ) , GET_U_1 ( p + 5 ) )Statement1023:4:22847:22856
2605 : case 0x25 :Label1129:1:25582:25591
2599 : case 0x2c :Label1141:1:25678:25687
3697 : case 0x08 :Label938:1:20802:20811
2602 : case 0x28 :Label1135:1:25630:25639
2596 : case 0x2f :Label1147:1:25726:25735
2589 : case 0x36 :Label1161:1:25838:25847
2550 : break ;BreakStatement1168:2:25969:25974
3613 : break ;BreakStatement951:2:21102:21107
2607 : case 0x23 :Label1125:1:25550:25559
2590 : case 0x35 :Label1159:1:25822:25831
2609 : case 0x21 :Label1121:1:25518:25527
3251 : case 0x1a :Label1018:1:22712:22721
3204 : int sf_num , off , links , opts ;IdentifierDeclStatement1027:3:22908:22936
2593 : case 0x32 :Label1153:1:25774:25783
2606 : case 0x24 :Label1127:1:25566:25575
2601 : case 0x29 :Label1137:1:25646:25655
2600 : case 0x2b :Label1139:1:25662:25671
2611 : case 0x1f :Label1117:1:25486:25495
2587 : default :Label1163:1:25854:25861
2597 : case 0x2e :Label1145:1:25710:25719
2603 : case 0x27 :Label1133:1:25614:25623
2938 : case 0x1c :Label1072:1:24044:24053
2580 : ND_PRINT ( "IE Data = " )ExpressionStatement1164:2:25865:25887
2608 : case 0x22 :Label1123:1:25534:25543
2612 : case 0x1e :Label1115:1:25470:25479
2610 : case 0x20 :Label1119:1:25502:25511
3217 : case 0x1b :Label1025:1:22889:22898
2613 : case 0x1d :Label1113:1:25454:25463
2598 : case 0x2d :Label1143:1:25694:25703
2591 : case 0x34 :Label1157:1:25806:25815
2594 : case 0x31 :Label1151:1:25758:25767
2614 : break ;BreakStatement1112:2:25446:25451
2595 : case 0x30 :Label1149:1:25742:25751
3218 : break ;BreakStatement1024:2:22881:22886
2592 : case 0x33 :Label1155:1:25790:25799
2604 : case 0x26 :Label1131:1:25598:25607
2531 : ieee802_15_4_print_mlme_ieFunction927:0:20607:25979
3704 : int i , j ;IdentifierDeclStatement933:1:20748:20756
3700 : unsigned short len ;IdentifierDeclStatement934:1:20759:20777
2543 : netdissect_options * ndoParameter928:27:20646:20668
2534 -----> 3698sub_id
2537 -----> 3247sub_ie_len
2537 -----> 2915sub_ie_len
2537 -----> 3200sub_ie_len
2537 -----> 2572sub_ie_len
2537 -----> 2643sub_ie_len
2537 -----> 3151sub_ie_len
2537 -----> 3078sub_ie_len
2537 -----> 3544sub_ie_len
2537 -----> 3574sub_ie_len
2537 -----> 2934sub_ie_len
2537 -----> 3596sub_ie_len
2537 -----> 3608sub_ie_len
2537 -----> 3638sub_ie_len
2537 -----> 2788sub_ie_len
2537 -----> 3693sub_ie_len
2540 -----> 2553p
2540 -----> 2793p
2540 -----> 3548p
2540 -----> 3055p
2540 -----> 2920p
2540 -----> 3028p
2540 -----> 2624p
2540 -----> 3128p
2540 -----> 3181p
2540 -----> 3552p
2540 -----> 2666p
2540 -----> 3099p
2540 -----> 3582p
2540 -----> 3619p
2540 -----> 3653p
2540 -----> 3578p
2569 -----> 2572i
2569 -----> 2553i
2569 -----> 2569i
2576 -----> 2572i
2576 -----> 2553i
2576 -----> 2569i
2640 -----> 2624i
2640 -----> 2643i
2640 -----> 2640i
2647 -----> 2624i
2647 -----> 2643i
2647 -----> 2640i
2959 -----> 3099off
2959 -----> 3095off
2959 -----> 3028off
2959 -----> 3055off
2959 -----> 3078off
2959 -----> 3128off
2959 -----> 3151off
2959 -----> 2959off
3055 -----> 2972opts
3055 -----> 2985opts
3055 -----> 3011opts
3055 -----> 2998opts
3055 -----> 3024opts
3084 -----> 3087j
3084 -----> 3084j
3091 -----> 3084j
3091 -----> 3087j
3095 -----> 2959off
3095 -----> 3099off
3095 -----> 3055off
3095 -----> 3028off
3095 -----> 3128off
3095 -----> 3078off
3095 -----> 3151off
3095 -----> 3095off
3128 -----> 3087links
3128 -----> 3099links
3157 -----> 3160i
3157 -----> 3157i
3164 -----> 3157i
3164 -----> 3160i
3168 -----> 3095off
3168 -----> 3099off
3168 -----> 3128off
3168 -----> 3151off
3181 -----> 3160sf_num
3181 -----> 3172sf_num
3286 -----> 3282sub_ie_len
3292 -----> 3258p
3325 -----> 3328i
3325 -----> 3307i
3325 -----> 3325i
3332 -----> 3307i
3332 -----> 3325i
3332 -----> 3328i
3361 -----> 3286sub_ie_len
3361 -----> 3346sub_ie_len
3365 -----> 3307p
3365 -----> 3292p
3369 -----> 3286len
3369 -----> 3292len
3369 -----> 3346len
3369 -----> 3352len
3369 -----> 3328len
3394 -----> 3388sub_ie_len
3394 -----> 3361sub_ie_len
3398 -----> 3369p
3398 -----> 3365p
3427 -----> 3411i
3427 -----> 3430i
3427 -----> 3427i
3434 -----> 3427i
3434 -----> 3430i
3434 -----> 3411i
3459 -----> 3394len
3459 -----> 3398len
3459 -----> 3430len
3459 -----> 3455len
3475 -----> 3361sub_ie_len
3475 -----> 3455sub_ie_len
3475 -----> 3388sub_ie_len
3475 -----> 3394sub_ie_len
3479 -----> 3369p
3479 -----> 3365p
3479 -----> 3398p
3479 -----> 3411p
3510 -----> 3459number_of_channels
3510 -----> 3499number_of_channels
3521 -----> 3467channel_page
3521 -----> 3499channel_page
3544 -----> 3540sub_ie_len
3544 -----> 3475sub_ie_len
3548 -----> 3479p
3548 -----> 3483p
3548 -----> 3510p
3548 -----> 3521p
3635 -----> 3619i
3635 -----> 3638i
3635 -----> 3635i
3642 -----> 3619i
3642 -----> 3635i
3642 -----> 3638i
2572 -----> 2553None
2572 -----> 2569None
2643 -----> 2640None
2643 -----> 2624None
2788 -----> 2666None
2788 -----> 2643None
2788 -----> 2651None
2788 -----> 2647None
2788 -----> 2658None
2915 -----> 2793None
2915 -----> 2788None
2934 -----> 2920None
2934 -----> 2915None
2972 -----> 2965None
2985 -----> 2978None
2998 -----> 2991None
3011 -----> 3004None
3024 -----> 3017None
3078 -----> 2998None
3078 -----> 3071None
3078 -----> 3028None
3078 -----> 3055None
3078 -----> 3087None
3078 -----> 3084None
3078 -----> 3011None
3078 -----> 2959None
3078 -----> 2952None
3078 -----> 2985None
3078 -----> 3024None
3078 -----> 3070None
3078 -----> 2972None
3087 -----> 3078None
3151 -----> 3095None
3151 -----> 3099None
3151 -----> 3087None
3151 -----> 3160None
3151 -----> 3144None
3151 -----> 3157None
3151 -----> 2943None
3151 -----> 3143None
3151 -----> 3128None
3151 -----> 3091None
3160 -----> 3151None
3200 -----> 2939None
3200 -----> 3181None
3200 -----> 3192None
3200 -----> 3172None
3200 -----> 3160None
3200 -----> 3193None
3200 -----> 3164None
3200 -----> 3168None
3247 -----> 3240None
3282 -----> 3274None
3282 -----> 3252None
3282 -----> 3258None
3282 -----> 3275None
3328 -----> 3325None
3328 -----> 3307None
3346 -----> 3338None
3346 -----> 3332None
3346 -----> 3339None
3346 -----> 3292None
3346 -----> 3282None
3346 -----> 3298None
3346 -----> 3328None
3346 -----> 3286None
3388 -----> 3365None
3388 -----> 3381None
3388 -----> 3352None
3388 -----> 3361None
3388 -----> 3369None
3388 -----> 3380None
3388 -----> 3346None
3430 -----> 3427None
3430 -----> 3411None
3455 -----> 3438None
3455 -----> 3402None
3455 -----> 3448None
3455 -----> 3447None
3455 -----> 3430None
3455 -----> 3394None
3455 -----> 3434None
3455 -----> 3388None
3455 -----> 3398None
3467 -----> 3455None
3467 -----> 3388None
3467 -----> 3459None
3540 -----> 3499None
3540 -----> 3467None
3540 -----> 3475None
3540 -----> 3532None
3540 -----> 3510None
3540 -----> 3483None
3540 -----> 3521None
3540 -----> 3533None
3540 -----> 3479None
3596 -----> 3552None
3596 -----> 3252None
3596 -----> 3540None
3596 -----> 3548None
3596 -----> 3578None
3596 -----> 3574None
3596 -----> 3544None
3596 -----> 3566None
3596 -----> 3582None
3608 -----> 3601None
3608 -----> 3252None
3608 -----> 3596None
3638 -----> 3635None
3638 -----> 3619None
3693 -----> 3642None
3693 -----> 3638None
3693 -----> 3653None
3693 -----> 3646None
3693 -----> 3686None
3698 -----> 3612None
3698 -----> 3220None
3698 -----> 3608None
3698 -----> 2605None
3698 -----> 2572None
3698 -----> 2599None
3698 -----> 3200None
3698 -----> 3697None
3698 -----> 2602None
3698 -----> 2596None
3698 -----> 2589None
3698 -----> 2550None
3698 -----> 3613None
3698 -----> 2607None
3698 -----> 2590None
3698 -----> 2609None
3698 -----> 3251None
3698 -----> 3204None
3698 -----> 2934None
3698 -----> 2593None
3698 -----> 2606None
3698 -----> 2601None
3698 -----> 3247None
3698 -----> 2600None
3698 -----> 2611None
3698 -----> 2587None
3698 -----> 2597None
3698 -----> 2603None
3698 -----> 2576None
3698 -----> 2938None
3698 -----> 2580None
3698 -----> 2608None
3698 -----> 3693None
3698 -----> 2612None
3698 -----> 2610None
3698 -----> 3217None
3698 -----> 2613None
3698 -----> 2598None
3698 -----> 2591None
3698 -----> 2594None
3698 -----> 2614None
3698 -----> 2595None
3698 -----> 3218None
3698 -----> 2592None
3698 -----> 2604None
2531 -----> 3704None
2531 -----> 3698None
2531 -----> 2537None
2531 -----> 2540None
2531 -----> 3700None
2531 -----> 2534None
2531 -----> 2543None
2537 -----> 3540sub_ie_len
2537 -----> 3475sub_ie_len
2537 -----> 3455sub_ie_len
2537 -----> 3394sub_ie_len
2537 -----> 3388sub_ie_len
2537 -----> 3361sub_ie_len
2537 -----> 3346sub_ie_len
2537 -----> 3286sub_ie_len
2537 -----> 3282sub_ie_len
2540 -----> 3483p
2540 -----> 3479p
2540 -----> 3411p
2540 -----> 3398p
2540 -----> 3365p
2540 -----> 3307p
2540 -----> 3292p
2540 -----> 3258p
3566 -----> 3510number_of_channels
3566 -----> 3499number_of_channels
3566 -----> 3521channel_page
3566 -----> 3499channel_page
3566 -----> 3467channel_page
3204 -----> 3181sf_num
3204 -----> 3172sf_num
3204 -----> 3160sf_num
3204 -----> 3128links
3204 -----> 3099links
3204 -----> 3087links
3204 -----> 3055opts
3204 -----> 3024opts
3204 -----> 3011opts
3204 -----> 2998opts
3204 -----> 2985opts
3204 -----> 2972opts
3204 -----> 3168off
3204 -----> 3151off
3204 -----> 3099off
3204 -----> 3095off
3204 -----> 3078off
3204 -----> 3028off
3204 -----> 2959off
3704 -----> 3091j
3704 -----> 3087j
3704 -----> 3084j
3704 -----> 3642i
3704 -----> 3638i
3704 -----> 3635i
3704 -----> 3619i
3704 -----> 3434i
3704 -----> 3430i
3704 -----> 3427i
3704 -----> 3411i
3704 -----> 3332i
3704 -----> 3328i
3704 -----> 3325i
3704 -----> 3307i
3704 -----> 3164i
3704 -----> 3160i
3704 -----> 3157i
3704 -----> 2647i
3704 -----> 2643i
3704 -----> 2640i
3704 -----> 2624i
3704 -----> 2576i
3704 -----> 2572i
3704 -----> 2569i
3704 -----> 2553i
3700 -----> 3459len
3700 -----> 3455len
3700 -----> 3430len
3700 -----> 3369len
3700 -----> 3352len
3700 -----> 3346len
3700 -----> 3328len
3635 -----> 3430i
3635 -----> 3427i
3459 -----> 3352len
3459 -----> 3346len
3459 -----> 3328len
3459 -----> 3292len
3459 -----> 3286len
3427 -----> 3328i
3427 -----> 3325i
3325 -----> 3160i
3325 -----> 3157i
3292 -----> 3181p
3292 -----> 3128p
3292 -----> 3099p
3292 -----> 3055p
3292 -----> 3028p
3292 -----> 2920p
3292 -----> 2793p
3292 -----> 2666p
3292 -----> 2624p
3292 -----> 2553p
3286 -----> 3247sub_ie_len
3286 -----> 3200sub_ie_len
3286 -----> 3151sub_ie_len
3286 -----> 3078sub_ie_len
3286 -----> 2934sub_ie_len
3286 -----> 2915sub_ie_len
3286 -----> 2788sub_ie_len
3286 -----> 2643sub_ie_len
3286 -----> 2572sub_ie_len
3157 -----> 2643i
3157 -----> 2640i
2640 -----> 2572i
2640 -----> 2569i
----------------------------pdg--------------------------------------------------
3733 : unsigned short ie_lenParameter1176:4:26077:26097
3750 : ie_len -= 2 + sub_ie_lenExpressionStatement1225:2:27065:27089
3849 : ie_len < 2 + sub_ie_lenCondition1209:6:26670:26692
3957 : ie_len < 2Condition1182:6:26169:26178
3736 : const u_char * pParameter1175:4:26056:26070
3889 : p += 2ExpressionStatement1199:2:26449:26455
3938 : ie = GET_LE_U_2 ( p )ExpressionStatement1187:2:26246:26264
3739 : netdissect_options * ndoParameter1174:32:26027:26049
3809 : ndo -> ndo_vflag > 2Condition1216:14:26883:26900
3816 : ieee802_15_4_print_mlme_ie ( ndo , p , sub_ie_len , sub_id )ExpressionStatement1215:4:26813:26867
3829 : ndo -> ndo_vflag > 3Condition1214:7:26787:26804
3745 : ie_len != 0Condition1226:10:27101:27111
3756 : p += sub_ie_lenExpressionStatement1224:2:27046:27061
3791 : i ++IncDecOp1218:31:26964:26966
3775 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1219:5:26976:27009
3794 : i < sub_ie_lenCondition1218:15:26948:26961
3798 : i = 0 ;ForInit1218:8:26941:26946
3896 : sub_id = ( ie >> 8 ) & 0x7fExpressionStatement1195:3:26412:26437
3858 : ND_PRINT ( "\n\t\t%s [ length = %d, " , p_mlme_long_names [ sub_id ] , sub_ie_len )ExpressionStatement1205:3:26577:26657
3872 : ND_PRINT ( "\n\t\t%s [ length = %d, " , p_mlme_short_names [ sub_id ] , sub_ie_len )ExpressionStatement1202:3:26480:26561
3904 : sub_ie_len = ie & 0xffExpressionStatement1194:3:26385:26407
3835 : sub_ie_len != 0Condition1213:6:26761:26775
3911 : sub_id = ( ie >> 11 ) & 0x0fExpressionStatement1192:3:26343:26369
3919 : sub_ie_len = ie & 0x3ffExpressionStatement1191:3:26315:26338
3927 : type = CHECK_BIT ( ie , 15 )ExpressionStatement1188:2:26268:26292
3885 : type == 0Condition1201:6:26464:26472
3925 : typeCondition1189:6:26300:26303
3802 : ND_PRINT ( "IE Data = " )ExpressionStatement1217:4:26909:26931
3842 : ND_PRINT ( "[ERROR: Truncated IE data]" )ExpressionStatement1210:3:26700:26738
3760 : ND_PRINT ( "] " )ExpressionStatement1223:2:27028:27042
3841 : return ;ReturnStatement1211:3:26743:26749
3950 : ND_PRINT ( "[ERROR: Truncated MLME IE]" )ExpressionStatement1183:3:26186:26224
3949 : return ;ReturnStatement1184:3:26229:26235
3730 : ieee802_15_4_print_mlme_ie_listFunction1173:0:25983:27115
3965 : int ie , sub_id , i , type ;IdentifierDeclStatement1178:1:26103:26126
3961 : unsigned short sub_ie_len ;IdentifierDeclStatement1179:1:26129:26154
3733 -----> 3750ie_len
3733 -----> 3849ie_len
3733 -----> 3957ie_len
3736 -----> 3889p
3736 -----> 3938p
3739 -----> 3809ndo
3739 -----> 3816ndo
3739 -----> 3829ndo
3750 -----> 3849ie_len
3750 -----> 3957ie_len
3750 -----> 3745ie_len
3750 -----> 3750ie_len
3756 -----> 3889p
3756 -----> 3938p
3791 -----> 3775i
3791 -----> 3794i
3791 -----> 3791i
3798 -----> 3775i
3798 -----> 3791i
3798 -----> 3794i
3889 -----> 3756p
3889 -----> 3775p
3889 -----> 3816p
3896 -----> 3816sub_id
3896 -----> 3858sub_id
3896 -----> 3872sub_id
3904 -----> 3794sub_ie_len
3904 -----> 3756sub_ie_len
3904 -----> 3816sub_ie_len
3904 -----> 3835sub_ie_len
3904 -----> 3750sub_ie_len
3904 -----> 3849sub_ie_len
3904 -----> 3858sub_ie_len
3904 -----> 3872sub_ie_len
3911 -----> 3816sub_id
3911 -----> 3858sub_id
3911 -----> 3872sub_id
3919 -----> 3816sub_ie_len
3919 -----> 3756sub_ie_len
3919 -----> 3835sub_ie_len
3919 -----> 3794sub_ie_len
3919 -----> 3849sub_ie_len
3919 -----> 3750sub_ie_len
3919 -----> 3872sub_ie_len
3919 -----> 3858sub_ie_len
3927 -----> 3885type
3927 -----> 3925type
3938 -----> 3896ie
3938 -----> 3904ie
3938 -----> 3911ie
3938 -----> 3919ie
3938 -----> 3927ie
3745 -----> 3957None
3794 -----> 3775None
3794 -----> 3791None
3809 -----> 3794None
3809 -----> 3802None
3809 -----> 3798None
3829 -----> 3816None
3829 -----> 3809None
3835 -----> 3829None
3849 -----> 3842None
3849 -----> 3760None
3849 -----> 3756None
3849 -----> 3835None
3849 -----> 3750None
3849 -----> 3841None
3849 -----> 3745None
3885 -----> 3872None
3885 -----> 3858None
3925 -----> 3904None
3925 -----> 3911None
3925 -----> 3919None
3925 -----> 3896None
3957 -----> 3925None
3957 -----> 3950None
3957 -----> 3849None
3957 -----> 3949None
3957 -----> 3927None
3957 -----> 3938None
3957 -----> 3889None
3957 -----> 3885None
3730 -----> 3957None
3730 -----> 3733None
3730 -----> 3739None
3730 -----> 3965None
3730 -----> 3961None
3730 -----> 3736None
3733 -----> 3745ie_len
3736 -----> 3816p
3736 -----> 3775p
3736 -----> 3756p
3965 -----> 3938ie
3965 -----> 3927type
3965 -----> 3925type
3965 -----> 3885type
3965 -----> 3798i
3965 -----> 3794i
3965 -----> 3791i
3965 -----> 3775i
3965 -----> 3911sub_id
3965 -----> 3896sub_id
3965 -----> 3872sub_id
3965 -----> 3858sub_id
3965 -----> 3816sub_id
3961 -----> 3919sub_ie_len
3961 -----> 3904sub_ie_len
3961 -----> 3872sub_ie_len
3961 -----> 3858sub_ie_len
3961 -----> 3849sub_ie_len
3961 -----> 3835sub_ie_len
3961 -----> 3816sub_ie_len
3961 -----> 3794sub_ie_len
----------------------------pdg--------------------------------------------------
4001 : unsigned short ie_lenParameter1233:5:27209:27229
4033 : i < ie_lenCondition1321:21:29360:29369
4096 : i < ie_lenCondition1306:14:29082:29091
4111 : ND_PRINT ( "Type = Abort, tid = 0x%02x, invalid length = %d (not 1 or 3)" , tid , ie_len )ExpressionStatement1303:3:28946:29036
4155 : ie_len == 1Condition1296:6:28726:28736
4210 : ie_len < 6Condition1284:7:28395:28404
4275 : ie_len < 2Condition1268:6:27978:27987
4331 : ie_len < 3Condition1254:7:27678:27687
4390 : ie_len < 1Condition1240:5:27324:27333
4141 : ie_len == 3Condition1299:13:28826:28836
4004 : const u_char * pParameter1232:5:27187:27201
4014 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1322:2:29381:29414
4077 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1307:4:29105:29138
4123 : ND_PRINT ( "Type = Abort, tid = 0x%02x, max size = 0x%04x" , tid , GET_LE_U_2 ( p + 1 ) )ExpressionStatement1300:3:28844:28930
4178 : multiplex_id = GET_LE_U_2 ( p + 4 )ExpressionStatement1289:3:28537:28569
4189 : total_size = GET_LE_U_2 ( p + 2 )ExpressionStatement1288:3:28502:28532
4254 : fragment_number = GET_U_1 ( p + 1 )ExpressionStatement1273:2:28059:28091
4299 : ND_PRINT ( "tid = 0x%02x, Multiplex ID = 0x%04x, " , tid , GET_LE_U_2 ( p + 1 ) )ExpressionStatement1259:3:27778:27856
4369 : transfer_type = GET_U_1 ( p ) & 0x7ExpressionStatement1245:1:27410:27442
4358 : tid = GET_U_1 ( p ) >> 3ExpressionStatement1246:1:27445:27466
4030 : i ++IncDecOp1321:33:29372:29374
4037 : i = data_start ;ForInit1321:5:29344:29358
4051 : data_start = 1ExpressionStatement1316:2:29276:29290
4093 : i ++IncDecOp1306:26:29094:29096
4100 : i = 1 ;ForInit1306:7:29075:29080
4163 : data_start = 6ExpressionStatement1292:3:28678:28692
4167 : ND_PRINT ( "Total upper layer size = 0x%04x, Multiplex ID = 0x%04x, " , total_size , multiplex_id )ExpressionStatement1290:3:28574:28673
4225 : data_start = 2ExpressionStatement1280:2:28308:28322
4221 : fragment_number == 0Condition1281:6:28330:28349
4229 : ND_PRINT ( "Type = %s, tid = 0x%02x, fragment = 0x%02x, " , ( transfer_type == 0x02 ? ( fragment_number == 0 ? "First fragment" : "Middle fragment" ) : "Last fragment" ) , tid , fragment_number )ExpressionStatement1274:2:28095:28304
4294 : data_start = 1ExpressionStatement1262:3:27872:27886
4317 : data_start = 3ExpressionStatement1258:3:27759:27773
4055 : ND_PRINT ( "Type = %d (Reserved), tid = 0x%02x, " , transfer_type , tid )ExpressionStatement1314:2:29200:29272
4146 : ND_PRINT ( "Type = Abort, tid = 0x%02x, no max size given" , tid )ExpressionStatement1297:3:28744:28811
4285 : ND_PRINT ( "Multiplex ID = 0x%04x, " , tid )ExpressionStatement1263:3:27891:27931
4335 : transfer_type == 0x00Condition1253:6:27646:27666
4339 : ND_PRINT ( "Type = Full upper layer fragment%s, " , ( transfer_type == 0x01 ? " with small Multiplex ID" : "" ) )ExpressionStatement1250:2:27522:27638
4356 : transfer_typeCondition1247:9:27477:27489
4394 : data_start = 0ExpressionStatement1239:1:27303:27317
4104 : ND_PRINT ( "Abort data = " )ExpressionStatement1305:3:29041:29066
4160 : break ;BreakStatement1294:2:28700:28705
4203 : ND_PRINT ( "[ERROR: Total upper layer size or multiplex ID missing]" )ExpressionStatement1285:4:28413:28480
4202 : return ;ReturnStatement1286:4:28486:28492
4041 : ND_PRINT ( "Upper layer data = " )ExpressionStatement1320:1:29306:29337
4214 : int total_size , multiplex_id ;IdentifierDeclStatement1282:3:28357:28385
4267 : return ;ReturnStatement1270:3:28044:28050
4268 : ND_PRINT ( "[ERROR: fragment number missing]" )ExpressionStatement1269:3:27995:28039
4281 : break ;BreakStatement1265:2:27939:27944
4323 : return ;ReturnStatement1256:4:27743:27749
4324 : ND_PRINT ( "[ERROR: Multiplex ID missing]" )ExpressionStatement1255:4:27696:27737
4066 : case 0x07 :Label1313:1:29186:29195
4279 : case 0x04 :Label1267:1:27960:27969
4068 : case 0x03 :Label1311:1:29160:29169
4050 : break ;BreakStatement1317:2:29294:29299
4069 : return ;ReturnStatement1310:2:29151:29157
4355 : case 0x00 :Label1248:1:27495:27504
4280 : case 0x02 :Label1266:1:27947:27956
4354 : case 0x01 :Label1249:1:27508:27517
4159 : case 0x06 :Label1295:1:28708:28717
4067 : case 0x05 :Label1312:1:29173:29182
4382 : return ;ReturnStatement1242:2:27397:27403
4383 : ND_PRINT ( "[ERROR: Transaction control byte missing]" )ExpressionStatement1241:2:27340:27393
3998 : ieee802_15_4_print_mpx_ieFunction1230:0:27119:29419
4398 : int i ;IdentifierDeclStatement1237:1:27294:27299
4007 : netdissect_options * ndoParameter1231:26:27157:27179
4402 : int fragment_number , data_start ;IdentifierDeclStatement1236:1:27260:27291
4409 : int transfer_type , tid ;IdentifierDeclStatement1235:1:27235:27257
4001 -----> 4033ie_len
4001 -----> 4096ie_len
4001 -----> 4111ie_len
4001 -----> 4155ie_len
4001 -----> 4210ie_len
4001 -----> 4275ie_len
4001 -----> 4331ie_len
4001 -----> 4390ie_len
4001 -----> 4141ie_len
4004 -----> 4014p
4004 -----> 4077p
4004 -----> 4123p
4004 -----> 4178p
4004 -----> 4189p
4004 -----> 4254p
4004 -----> 4299p
4004 -----> 4369p
4004 -----> 4358p
4030 -----> 4014i
4030 -----> 4033i
4030 -----> 4030i
4037 -----> 4030i
4037 -----> 4033i
4037 -----> 4014i
4051 -----> 4037data_start
4093 -----> 4096i
4093 -----> 4077i
4093 -----> 4093i
4100 -----> 4077i
4100 -----> 4093i
4100 -----> 4096i
4163 -----> 4037data_start
4178 -----> 4167multiplex_id
4189 -----> 4167total_size
4225 -----> 4037data_start
4254 -----> 4221fragment_number
4254 -----> 4229fragment_number
4294 -----> 4037data_start
4317 -----> 4037data_start
4358 -----> 4055tid
4358 -----> 4111tid
4358 -----> 4123tid
4358 -----> 4146tid
4358 -----> 4229tid
4358 -----> 4285tid
4358 -----> 4299tid
4369 -----> 4055transfer_type
4369 -----> 4229transfer_type
4369 -----> 4335transfer_type
4369 -----> 4339transfer_type
4369 -----> 4356transfer_type
4394 -----> 4037data_start
4033 -----> 4014None
4033 -----> 4030None
4096 -----> 4077None
4096 -----> 4093None
4141 -----> 4096None
4141 -----> 4123None
4141 -----> 4104None
4141 -----> 4100None
4141 -----> 4111None
4155 -----> 4146None
4155 -----> 4141None
4210 -----> 4037None
4210 -----> 4167None
4210 -----> 4189None
4210 -----> 4163None
4210 -----> 4178None
4210 -----> 4160None
4210 -----> 4203None
4210 -----> 4202None
4210 -----> 4033None
4210 -----> 4041None
4221 -----> 4210None
4221 -----> 4037None
4221 -----> 4214None
4221 -----> 4160None
4221 -----> 4033None
4221 -----> 4041None
4275 -----> 4254None
4275 -----> 4229None
4275 -----> 4267None
4275 -----> 4221None
4275 -----> 4225None
4275 -----> 4268None
4331 -----> 4281None
4331 -----> 4037None
4331 -----> 4323None
4331 -----> 4299None
4331 -----> 4324None
4331 -----> 4317None
4331 -----> 4033None
4331 -----> 4041None
4335 -----> 4281None
4335 -----> 4037None
4335 -----> 4294None
4335 -----> 4285None
4335 -----> 4331None
4335 -----> 4033None
4335 -----> 4041None
4356 -----> 4155None
4356 -----> 4066None
4356 -----> 4275None
4356 -----> 4037None
4356 -----> 4279None
4356 -----> 4051None
4356 -----> 4068None
4356 -----> 4050None
4356 -----> 4335None
4356 -----> 4069None
4356 -----> 4355None
4356 -----> 4280None
4356 -----> 4354None
4356 -----> 4033None
4356 -----> 4159None
4356 -----> 4055None
4356 -----> 4339None
4356 -----> 4067None
4356 -----> 4041None
4390 -----> 4382None
4390 -----> 4383None
4390 -----> 4356None
4390 -----> 4369None
4390 -----> 4358None
3998 -----> 4398None
3998 -----> 4001None
3998 -----> 4390None
3998 -----> 4004None
3998 -----> 4007None
3998 -----> 4394None
3998 -----> 4402None
3998 -----> 4409None
4214 -----> 4178multiplex_id
4214 -----> 4167multiplex_id
4214 -----> 4189total_size
4214 -----> 4167total_size
4398 -----> 4100i
4398 -----> 4096i
4398 -----> 4093i
4398 -----> 4077i
4398 -----> 4037i
4398 -----> 4033i
4398 -----> 4030i
4398 -----> 4014i
4402 -----> 4254fragment_number
4402 -----> 4229fragment_number
4402 -----> 4221fragment_number
4402 -----> 4394data_start
4402 -----> 4317data_start
4402 -----> 4294data_start
4402 -----> 4225data_start
4402 -----> 4163data_start
4402 -----> 4051data_start
4409 -----> 4358tid
4409 -----> 4299tid
4409 -----> 4285tid
4409 -----> 4229tid
4409 -----> 4146tid
4409 -----> 4123tid
4409 -----> 4111tid
4409 -----> 4055tid
4409 -----> 4369transfer_type
4409 -----> 4356transfer_type
4409 -----> 4339transfer_type
4409 -----> 4335transfer_type
4409 -----> 4229transfer_type
4409 -----> 4055transfer_type
4093 -----> 4033i
4093 -----> 4030i
----------------------------pdg--------------------------------------------------
4433 : u_int caplenParameter1330:7:29525:29536
4459 : caplen -= 2 + ie_lenExpressionStatement1414:2:31297:31317
4765 : caplen < 2U + ie_lenCondition1357:6:30036:30055
4863 : caplen < 2Condition1337:6:29615:29624
4436 : const u_char * pParameter1329:7:29501:29515
4803 : p += 2ExpressionStatement1350:2:29865:29871
4841 : ie = GET_LE_U_2 ( p )ExpressionStatement1342:2:29697:29715
4439 : netdissect_options * ndoParameter1328:35:29469:29491
4630 : ieee802_15_4_print_mpx_ie ( ndo , p , ie_len )ExpressionStatement1382:4:30618:30659
4728 : ieee802_15_4_print_mlme_ie_list ( ndo , p , ie_len )ExpressionStatement1364:4:30205:30252
4742 : ndo -> ndo_vflag > 3 && ie_len != 0Condition1361:6:30127:30159
4447 : caplen != 0Condition1418:10:31368:31378
4465 : p += ie_lenExpressionStatement1413:2:31282:31293
4469 : len += 2 + ie_lenExpressionStatement1412:2:31261:31278
4444 : return len ;ReturnStatement1419:1:31383:31393
4505 : i ++IncDecOp1406:27:31176:31178
4508 : i < ie_lenCondition1406:15:31164:31173
4489 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1407:5:31188:31221
4512 : i = 0 ;ForInit1406:8:31157:31162
4549 : i ++IncDecOp1398:27:31019:31021
4533 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1399:5:31031:31064
4552 : i < ie_lenCondition1398:15:31007:31016
4556 : i = 0 ;ForInit1398:8:31000:31005
4591 : i ++IncDecOp1390:28:30872:30874
4594 : i < ie_lenCondition1390:16:30860:30869
4575 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1391:6:30885:30926
4598 : i = 1 ;ForInit1390:9:30853:30858
4664 : i ++IncDecOp1375:28:30520:30522
4648 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1376:6:30533:30574
4667 : i < ie_lenCondition1375:16:30508:30517
4671 : i = 3 ;ForInit1375:9:30501:30506
4602 : ND_PRINT ( "Subtype ID = 0x%02x, Subtype content = " , GET_U_1 ( p ) )ExpressionStatement1388:5:30772:30842
4682 : ND_PRINT ( "OUI = 0x%02x%02x%02x, " , GET_U_1 ( p ) , GET_U_1 ( p + 1 ) , GET_U_1 ( p + 2 ) )ExpressionStatement1370:5:30365:30464
4807 : group_id = ( ie >> 11 ) & 0x0fExpressionStatement1347:2:29829:29857
4455 : group_id == 0xfCondition1415:6:31325:31339
4740 : group_idCondition1362:11:30175:30182
4774 : ND_PRINT ( "\n\t%s [ length = %d, " , p_ie_names [ group_id ] , ie_len )ExpressionStatement1354:3:29955:30024
4788 : ND_PRINT ( "\n\t%s [" , p_ie_names [ group_id ] )ExpressionStatement1352:3:29897:29939
4815 : ie_len = ie & 0x3ffExpressionStatement1346:2:29806:29825
4624 : ie_len < 1Condition1385:8:30694:30703
4722 : ie_len < 3Condition1367:8:30287:30296
4523 : ie_len != 0Condition1404:7:31106:31116
4799 : ie_len == 0Condition1351:6:29879:29889
4830 : ( CHECK_BIT ( ie , 15 ) ) == 0Condition1343:6:29723:29746
4867 : len = 0ExpressionStatement1335:1:29594:29601
4454 : break ;BreakStatement1416:3:31347:31352
4516 : ND_PRINT ( "IE Data = " )ExpressionStatement1405:4:31125:31147
4617 : ND_PRINT ( "[ERROR: Subtype ID missing]" )ExpressionStatement1386:5:30713:30752
4675 : ND_PRINT ( "Data = " )ExpressionStatement1374:5:30471:30490
4715 : ND_PRINT ( "[ERROR: Vendor OUI missing]" )ExpressionStatement1368:5:30306:30345
4642 : break ;BreakStatement1380:4:30593:30598
4641 : case 0x3 :Label1381:3:30603:30611
4567 : default :Label1396:3:30955:30962
4560 : ND_PRINT ( "IE Data = " )ExpressionStatement1397:4:30968:30990
4727 : break ;BreakStatement1365:4:30258:30263
4530 : break ;BreakStatement1401:4:31076:31081
4739 : case 0x1 :Label1363:3:30190:30198
4629 : break ;BreakStatement1383:4:30665:30670
4628 : case 0x5 :Label1384:3:30675:30683
4569 : break ;BreakStatement1395:4:30945:30950
4726 : case 0x2 :Label1366:3:30268:30276
4754 : return - 1 ;ReturnStatement1359:3:30106:30115
4758 : ND_PRINT ( "[ERROR: Truncated IE data]" )ExpressionStatement1358:3:30063:30101
4475 : ND_PRINT ( "]\n\t" )ExpressionStatement1411:2:31240:31257
4823 : ND_PRINT ( "[ERROR: Payload IE with type 0] " )ExpressionStatement1344:3:29754:29798
4852 : return - 1 ;ReturnStatement1339:3:29677:29686
4856 : ND_PRINT ( "[ERROR: Truncated header IE]" )ExpressionStatement1338:3:29632:29672
4430 : ieee802_15_4_print_payload_ie_listFunction1327:0:29423:31395
4875 : int len , ie , group_id , i ;IdentifierDeclStatement1332:1:29542:29566
4871 : unsigned short ie_len ;IdentifierDeclStatement1333:1:29569:29590
4433 -----> 4459caplen
4433 -----> 4765caplen
4433 -----> 4863caplen
4436 -----> 4803p
4436 -----> 4841p
4439 -----> 4630ndo
4439 -----> 4728ndo
4439 -----> 4742ndo
4459 -----> 4863caplen
4459 -----> 4447caplen
4459 -----> 4765caplen
4459 -----> 4459caplen
4465 -----> 4803p
4465 -----> 4841p
4469 -----> 4444len
4469 -----> 4469len
4505 -----> 4508i
4505 -----> 4489i
4505 -----> 4505i
4512 -----> 4505i
4512 -----> 4489i
4512 -----> 4508i
4549 -----> 4533i
4549 -----> 4552i
4549 -----> 4549i
4556 -----> 4552i
4556 -----> 4549i
4556 -----> 4533i
4591 -----> 4594i
4591 -----> 4575i
4591 -----> 4591i
4598 -----> 4591i
4598 -----> 4594i
4598 -----> 4575i
4664 -----> 4648i
4664 -----> 4667i
4664 -----> 4664i
4671 -----> 4648i
4671 -----> 4664i
4671 -----> 4667i
4803 -----> 4602p
4803 -----> 4630p
4803 -----> 4682p
4803 -----> 4465p
4803 -----> 4489p
4803 -----> 4575p
4803 -----> 4728p
4803 -----> 4533p
4803 -----> 4648p
4807 -----> 4455group_id
4807 -----> 4740group_id
4807 -----> 4774group_id
4807 -----> 4788group_id
4815 -----> 4594ie_len
4815 -----> 4508ie_len
4815 -----> 4459ie_len
4815 -----> 4624ie_len
4815 -----> 4630ie_len
4815 -----> 4667ie_len
4815 -----> 4722ie_len
4815 -----> 4728ie_len
4815 -----> 4523ie_len
4815 -----> 4469ie_len
4815 -----> 4742ie_len
4815 -----> 4465ie_len
4815 -----> 4765ie_len
4815 -----> 4552ie_len
4815 -----> 4799ie_len
4815 -----> 4774ie_len
4841 -----> 4807ie
4841 -----> 4815ie
4841 -----> 4830ie
4867 -----> 4469len
4447 -----> 4863None
4447 -----> 4444None
4455 -----> 4447None
4455 -----> 4444None
4455 -----> 4454None
4508 -----> 4489None
4508 -----> 4505None
4523 -----> 4512None
4523 -----> 4508None
4523 -----> 4516None
4552 -----> 4533None
4552 -----> 4549None
4594 -----> 4591None
4594 -----> 4575None
4624 -----> 4617None
4624 -----> 4602None
4624 -----> 4594None
4624 -----> 4598None
4667 -----> 4648None
4667 -----> 4664None
4722 -----> 4675None
4722 -----> 4671None
4722 -----> 4682None
4722 -----> 4715None
4722 -----> 4667None
4740 -----> 4728None
4740 -----> 4642None
4740 -----> 4641None
4740 -----> 4630None
4740 -----> 4556None
4740 -----> 4567None
4740 -----> 4560None
4740 -----> 4727None
4740 -----> 4530None
4740 -----> 4739None
4740 -----> 4629None
4740 -----> 4628None
4740 -----> 4624None
4740 -----> 4552None
4740 -----> 4569None
4740 -----> 4722None
4740 -----> 4726None
4742 -----> 4740None
4742 -----> 4523None
4765 -----> 4754None
4765 -----> 4469None
4765 -----> 4459None
4765 -----> 4465None
4765 -----> 4758None
4765 -----> 4455None
4765 -----> 4742None
4765 -----> 4475None
4799 -----> 4774None
4799 -----> 4788None
4830 -----> 4823None
4863 -----> 4830None
4863 -----> 4807None
4863 -----> 4815None
4863 -----> 4799None
4863 -----> 4852None
4863 -----> 4765None
4863 -----> 4841None
4863 -----> 4803None
4863 -----> 4856None
4430 -----> 4875None
4430 -----> 4863None
4430 -----> 4439None
4430 -----> 4436None
4430 -----> 4867None
4430 -----> 4433None
4430 -----> 4871None
4433 -----> 4447caplen
4436 -----> 4728p
4436 -----> 4682p
4436 -----> 4648p
4436 -----> 4630p
4436 -----> 4602p
4436 -----> 4575p
4436 -----> 4533p
4436 -----> 4489p
4436 -----> 4465p
4875 -----> 4841ie
4875 -----> 4830ie
4875 -----> 4807group_id
4875 -----> 4788group_id
4875 -----> 4774group_id
4875 -----> 4740group_id
4875 -----> 4455group_id
4875 -----> 4867len
4875 -----> 4469len
4875 -----> 4444len
4875 -----> 4671i
4875 -----> 4667i
4875 -----> 4664i
4875 -----> 4648i
4875 -----> 4598i
4875 -----> 4594i
4875 -----> 4591i
4875 -----> 4575i
4875 -----> 4556i
4875 -----> 4552i
4875 -----> 4549i
4875 -----> 4533i
4875 -----> 4512i
4875 -----> 4508i
4875 -----> 4505i
4875 -----> 4489i
4871 -----> 4815ie_len
4871 -----> 4799ie_len
4871 -----> 4774ie_len
4871 -----> 4765ie_len
4871 -----> 4742ie_len
4871 -----> 4728ie_len
4871 -----> 4722ie_len
4871 -----> 4667ie_len
4871 -----> 4630ie_len
4871 -----> 4624ie_len
4871 -----> 4594ie_len
4871 -----> 4552ie_len
4871 -----> 4523ie_len
4871 -----> 4508ie_len
4591 -----> 4552i
4591 -----> 4549i
----------------------------pdg--------------------------------------------------
4909 : int * security_levelParameter1427:6:31518:31536
5181 : ND_PRINT ( "\n\tSecurity Level %d, Key Id Mode %d, " , * security_level , key_id_mode )ExpressionStatement1444:2:31808:31893
5216 : * security_level = sc & 0x7ExpressionStatement1437:1:31694:31720
4912 : u_int caplenParameter1426:6:31498:31509
5204 : caplen -= 1ExpressionStatement1440:1:31756:31767
5250 : caplen < 1Condition1431:5:31574:31583
4915 : const u_char * pParameter1425:6:31475:31489
5228 : sc = GET_U_1 ( p )ExpressionStatement1435:1:31666:31681
5200 : p += 1ExpressionStatement1441:1:31770:31776
4918 : netdissect_options * ndoParameter1424:34:31444:31466
4953 : ndo -> ndo_vflag > 1Condition1498:5:32876:32893
5069 : ndo -> ndo_vflag > 1Condition1473:6:32394:32411
5007 : ndo -> ndo_vflag > 1Condition1486:6:32656:32673
5106 : ndo -> ndo_vflag > 1Condition1462:6:32197:32214
5145 : ndo -> ndo_vflag > 1Condition1452:6:32030:32047
5194 : ndo -> ndo_vflag > 0Condition1443:5:31784:31801
4925 : len += 1ExpressionStatement1503:1:32970:32978
4923 : return len ;ReturnStatement1504:1:32981:32991
4979 : len += 4ExpressionStatement1491:2:32763:32771
4983 : caplen -= 4ExpressionStatement1490:2:32748:32759
4972 : caplen < 1Condition1494:5:32790:32799
4933 : caplen -= 1ExpressionStatement1501:1:32947:32958
4987 : p += 4ExpressionStatement1489:2:32738:32744
4939 : ND_PRINT ( "KeyIndex 0x%02x, " , GET_U_1 ( p ) )ExpressionStatement1499:2:32900:32941
4929 : p += 1ExpressionStatement1502:1:32961:32967
5032 : len += 4ExpressionStatement1479:2:32527:32535
5036 : caplen -= 4ExpressionStatement1478:2:32512:32523
5040 : p += 4ExpressionStatement1477:2:32502:32508
5117 : len += 4ExpressionStatement1458:2:32141:32149
5095 : return len ;ReturnStatement1465:2:32250:32260
5121 : caplen -= 4ExpressionStatement1457:2:32126:32137
5088 : caplen < 4Condition1469:6:32303:32312
5026 : caplen < 8Condition1482:6:32565:32574
5125 : p += 4ExpressionStatement1456:2:32116:32122
4993 : ND_PRINT ( "KeySource %s, " , GET_EUI64LE_STRING ( p ) )ExpressionStatement1487:3:32681:32730
5046 : ND_PRINT ( "KeySource 0x%04x:%0x4x, " , GET_LE_U_2 ( p ) , GET_LE_U_2 ( p + 2 ) )ExpressionStatement1474:3:32419:32494
5131 : ND_PRINT ( "Frame Counter 0x%08x " , GET_LE_U_4 ( p ) )ExpressionStatement1453:3:32055:32108
5164 : caplen < 4Condition1448:6:31936:31945
5208 : key_id_mode = ( sc >> 3 ) & 0x3ExpressionStatement1438:1:31723:31752
5113 : key_id_modeCondition1460:9:32163:32173
5224 : len = 1ExpressionStatement1436:1:31684:31691
5168 : ( CHECK_BIT ( sc , 5 ) ) == 0Condition1447:5:31903:31925
4965 : ND_PRINT ( "[ERROR: Truncated before Key Index]" )ExpressionStatement1495:2:32806:32853
4961 : return - 1 ;ReturnStatement1496:2:32857:32866
5015 : return - 1 ;ReturnStatement1484:3:32635:32644
5019 : ND_PRINT ( "[ERROR: Truncated before Key Source]" )ExpressionStatement1483:3:32582:32630
4978 : break ;BreakStatement1492:2:32775:32780
5081 : ND_PRINT ( "[ERROR: Truncated before Key Source]" )ExpressionStatement1470:3:32320:32368
5077 : return - 1 ;ReturnStatement1471:3:32373:32382
5031 : break ;BreakStatement1480:2:32539:32544
5099 : ND_PRINT ( "Implicit" )ExpressionStatement1463:3:32222:32242
5112 : case 0x00 :Label1461:1:32179:32188
5094 : case 0x01 :Label1466:1:32263:32272
5092 : case 0x02 :Label1468:1:32285:32294
5030 : case 0x03 :Label1481:1:32547:32556
5093 : break ;BreakStatement1467:2:32277:32282
5157 : ND_PRINT ( "[ERROR: Truncated before Frame Counter]" )ExpressionStatement1449:3:31953:32004
5153 : return - 1 ;ReturnStatement1450:3:32009:32018
5239 : return - 1 ;ReturnStatement1433:2:31651:31660
5243 : ND_PRINT ( "[ERROR: Truncated before Aux Security Header]" )ExpressionStatement1432:2:31590:31647
4906 : ieee802_15_4_print_aux_sec_headerFunction1423:0:31399:32993
5254 : int sc , key_id_mode , len ;IdentifierDeclStatement1429:1:31542:31566
4909 -----> 5181security_level
4909 -----> 5216security_level
4912 -----> 5204caplen
4912 -----> 5250caplen
4915 -----> 5228p
4915 -----> 5200p
4918 -----> 4953ndo
4918 -----> 5069ndo
4918 -----> 5007ndo
4918 -----> 5106ndo
4918 -----> 5145ndo
4918 -----> 5194ndo
4925 -----> 4923len
4979 -----> 4925len
4983 -----> 4972caplen
4983 -----> 4933caplen
4987 -----> 4939p
4987 -----> 4929p
5032 -----> 4925len
5036 -----> 4972caplen
5036 -----> 4933caplen
5040 -----> 4929p
5040 -----> 4939p
5117 -----> 4925len
5117 -----> 4979len
5117 -----> 5032len
5117 -----> 5095len
5121 -----> 4933caplen
5121 -----> 5088caplen
5121 -----> 5036caplen
5121 -----> 5026caplen
5121 -----> 4972caplen
5121 -----> 4983caplen
5125 -----> 4987p
5125 -----> 4939p
5125 -----> 5040p
5125 -----> 4993p
5125 -----> 5046p
5125 -----> 4929p
5200 -----> 4993p
5200 -----> 4987p
5200 -----> 4939p
5200 -----> 5040p
5200 -----> 5046p
5200 -----> 4929p
5200 -----> 5125p
5200 -----> 5131p
5204 -----> 5036caplen
5204 -----> 5088caplen
5204 -----> 4983caplen
5204 -----> 5121caplen
5204 -----> 5164caplen
5204 -----> 4972caplen
5204 -----> 5026caplen
5204 -----> 4933caplen
5208 -----> 5113key_id_mode
5208 -----> 5181key_id_mode
5216 -----> 5181 security_level
5224 -----> 4925len
5224 -----> 4979len
5224 -----> 5032len
5224 -----> 5095len
5224 -----> 5117len
5228 -----> 5168sc
5228 -----> 5208sc
5228 -----> 5216sc
4953 -----> 4939None
4972 -----> 4923None
4972 -----> 4925None
4972 -----> 4929None
4972 -----> 4953None
4972 -----> 4965None
4972 -----> 4933None
4972 -----> 4961None
5007 -----> 4993None
5026 -----> 4983None
5026 -----> 4987None
5026 -----> 4972None
5026 -----> 5007None
5026 -----> 4979None
5026 -----> 5015None
5026 -----> 5019None
5026 -----> 4978None
5069 -----> 5046None
5088 -----> 5069None
5088 -----> 4972None
5088 -----> 5040None
5088 -----> 5081None
5088 -----> 5032None
5088 -----> 5077None
5088 -----> 5036None
5088 -----> 5031None
5106 -----> 5099None
5113 -----> 5112None
5113 -----> 4972None
5113 -----> 5106None
5113 -----> 5094None
5113 -----> 5092None
5113 -----> 5026None
5113 -----> 5030None
5113 -----> 5095None
5113 -----> 5088None
5113 -----> 5093None
5145 -----> 5131None
5164 -----> 5117None
5164 -----> 5157None
5164 -----> 5153None
5164 -----> 5121None
5164 -----> 5125None
5164 -----> 5145None
5164 -----> 5113None
5168 -----> 5164None
5168 -----> 5113None
5194 -----> 5181None
5250 -----> 5239None
5250 -----> 5228None
5250 -----> 5216None
5250 -----> 5168None
5250 -----> 5243None
5250 -----> 5224None
5250 -----> 5194None
5250 -----> 5204None
5250 -----> 5208None
5250 -----> 5200None
4906 -----> 4909None
4906 -----> 4912None
4906 -----> 5254None
4906 -----> 5250None
4906 -----> 4918None
4906 -----> 4915None
4912 -----> 5164caplen
4912 -----> 5121caplen
4912 -----> 5088caplen
4912 -----> 5036caplen
4912 -----> 5026caplen
4912 -----> 4983caplen
4912 -----> 4972caplen
4912 -----> 4933caplen
4915 -----> 5131p
4915 -----> 5125p
4915 -----> 5046p
4915 -----> 5040p
4915 -----> 4993p
4915 -----> 4987p
4915 -----> 4939p
4915 -----> 4929p
5254 -----> 5208key_id_mode
5254 -----> 5181key_id_mode
5254 -----> 5113key_id_mode
5254 -----> 5224len
5254 -----> 5117len
5254 -----> 5095len
5254 -----> 5032len
5254 -----> 4979len
5254 -----> 4925len
5254 -----> 4923len
5254 -----> 5228sc
5254 -----> 5168sc
5216 -----> 5181security_level
5040 -----> 4993p
5040 -----> 4987p
5036 -----> 5026caplen
5036 -----> 4983caplen
5032 -----> 4979len
----------------------------pdg--------------------------------------------------
5284 : u_int caplenParameter1512:4:33120:33131
5425 : caplen != 1Condition1631:6:35709:35719
5361 : return caplen ;ReturnStatement1644:3:36051:36064
5324 : i < caplenCondition1683:13:36399:36408
5433 : return caplen ;ReturnStatement1627:3:35668:35681
5515 : caplen == 8Condition1612:7:35306:35316
5576 : caplen < 7 || caplen > 8Condition1601:6:34994:35017
5594 : return caplen ;ReturnStatement1590:3:34885:34898
5663 : caplen != 1Condition1572:6:34438:34448
5671 : return caplen ;ReturnStatement1568:3:34397:34410
5287 : const u_char * pParameter1511:4:33099:33113
5305 : ND_PRINT ( "%02x " , GET_U_1 ( p + i ) )ExpressionStatement1684:3:36421:36454
5400 : gts = GET_U_1 ( p )ExpressionStatement1637:3:35826:35842
5435 : ieee802_15_4_print_addr ( ndo , p + 5 , 2 )ExpressionStatement1626:3:35625:35663
5504 : page = GET_U_1 ( p + 7 )ExpressionStatement1613:4:35325:35346
5519 : channel = GET_U_1 ( p + 4 )ExpressionStatement1610:3:35272:35296
5530 : ieee802_15_4_print_addr ( ndo , p + 2 , 2 )ExpressionStatement1609:3:35229:35267
5543 : ND_PRINT ( "Pan ID = 0x%04x, Coordinator short address = " , GET_LE_U_2 ( p ) )ExpressionStatement1607:3:35147:35224
5599 : ND_PRINT ( "Reason = 0x%02x" , GET_U_1 ( p + 2 ) )ExpressionStatement1587:4:34821:34864
5644 : GET_U_1 ( p )Condition1576:11:34556:34565
5290 : unsigned char command_idParameter1510:4:33069:33092
5873 : command_idCondition1516:9:33156:33165
5293 : netdissect_options * ndoParameter1509:32:33040:33062
5321 : i ++IncDecOp1683:25:36411:36413
5328 : i = 0 ;ForInit1683:6:36392:36397
5363 : ND_PRINT ( "GTS Length = %d, %s, %s" , gts & 0xf , ( CHECK_BIT ( gts , 4 ) ? "Receive-only GTS" : "Transmit-only GTS" ) , ( CHECK_BIT ( gts , 5 ) ? "GTS allocation" : "GTS deallocations" ) )ExpressionStatement1638:3:35847:36046
5479 : channel |= ( page & 0x7f ) << 8ExpressionStatement1619:4:35420:35449
5470 : ND_PRINT ( ", Channel Number = %d" , channel )ExpressionStatement1620:4:35455:35497
5499 : page = 0x80ExpressionStatement1615:4:35364:35375
5458 : ND_PRINT ( ", Channel Number = %d, page = %d" , channel , page )ExpressionStatement1622:4:35515:35580
5487 : CHECK_BIT ( page , 7 )Condition1617:7:35389:35406
5843 : cap_info = GET_U_1 ( p )ExpressionStatement1523:3:33318:33339
5788 : ND_PRINT ( "%s%s%s%s%s%s" , ( ( cap_info & 0x02 ) ? "FFD, " : "RFD, " ) , ( ( cap_info & 0x04 ) ? "AC powered, " : "" ) , ( ( cap_info & 0x08 ) ? "Receiver on when idle, " : "" ) , ( ( cap_info & 0x10 ) ? "Fast association, " : "" ) , ( ( cap_info & 0x40 ) ? "Security supported, " : "" ) , ( ( cap_info & 0x80 ) ? "Allocate address, " : "" ) )ExpressionStatement1524:3:33344:33721
5414 : return - 1 ;ReturnStatement1633:3:35778:35787
5418 : ND_PRINT ( "Invalid GTS Request command length" )ExpressionStatement1632:3:35727:35773
5409 : unsigned char gts ;IdentifierDeclStatement1635:3:35803:35820
5569 : ND_PRINT ( "Invalid Coordinator Realignment command length" )ExpressionStatement1602:3:35025:35083
5565 : return - 1 ;ReturnStatement1603:3:35088:35097
5448 : ND_PRINT ( ", Short address = " )ExpressionStatement1625:3:35590:35620
5557 : unsigned short channel , page ;IdentifierDeclStatement1605:3:35113:35141
5626 : break ;BreakStatement1582:4:34712:34717
5634 : case 0x01 :Label1580:3:34624:34633
5625 : case 0x02 :Label1583:3:34722:34731
5636 : ND_PRINT ( "Reserved" )ExpressionStatement1578:4:34588:34608
5617 : break ;BreakStatement1585:4:34798:34803
5618 : ND_PRINT ( "Reason = The device wishes to leave the PAN" )ExpressionStatement1584:4:34737:34792
5643 : case 0x00 :Label1577:3:34573:34582
5627 : ND_PRINT ( "Reason = The coordinator wishes the device to leave PAN" )ExpressionStatement1581:4:34639:34706
5598 : break ;BreakStatement1588:4:34870:34875
5635 : break ;BreakStatement1579:4:34614:34619
5615 : default :Label1586:3:34808:34815
5656 : ND_PRINT ( "Invalid Disassociation Notification command length" )ExpressionStatement1573:3:34456:34518
5652 : return - 1 ;ReturnStatement1574:3:34523:34532
5739 : GET_U_1 ( p + 2 )Condition1547:11:33950:33963
5722 : ND_PRINT ( ", PAN at capacity" )ExpressionStatement1552:4:34053:34082
5712 : break ;BreakStatement1556:4:34150:34155
5703 : break ;BreakStatement1559:4:34230:34235
5692 : default :Label1563:3:34312:34319
5695 : ND_PRINT ( ", Fast association successful" )ExpressionStatement1561:4:34255:34296
5676 : ND_PRINT ( ", Status = 0x%02x" , GET_U_1 ( p + 2 ) )ExpressionStatement1564:4:34325:34376
5694 : break ;BreakStatement1562:4:34302:34307
5721 : break ;BreakStatement1553:4:34088:34093
5702 : case 0x80 :Label1560:3:34240:34249
5713 : ND_PRINT ( ", PAN access denied" )ExpressionStatement1555:4:34113:34144
5731 : ND_PRINT ( ", Association successful" )ExpressionStatement1549:4:33986:34022
5675 : break ;BreakStatement1566:4:34382:34387
5711 : case 0x03 :Label1557:3:34160:34169
5730 : break ;BreakStatement1550:4:34028:34033
5729 : case 0x01 :Label1551:3:34038:34047
5704 : ND_PRINT ( ", Hooping sequence offset duplication" )ExpressionStatement1558:4:34175:34224
5720 : case 0x02 :Label1554:3:34098:34107
5738 : case 0x00 :Label1548:3:33971:33980
5778 : caplen != 3Condition1541:6:33767:33777
5771 : ND_PRINT ( "Invalid Association response command length" )ExpressionStatement1542:3:33785:33840
5748 : ieee802_15_4_print_addr ( ndo , p , 2 )ExpressionStatement1546:3:33903:33937
5767 : return - 1 ;ReturnStatement1543:3:33845:33854
5759 : ND_PRINT ( "Short address = " )ExpressionStatement1545:3:33870:33898
5868 : caplen != 1Condition1518:6:33189:33199
5857 : return - 1 ;ReturnStatement1520:3:33266:33275
5852 : unsigned char cap_info ;IdentifierDeclStatement1522:3:33291:33313
5786 : return caplen ;ReturnStatement1537:3:33726:33739
5861 : ND_PRINT ( "Invalid Association request command length" )ExpressionStatement1519:3:33207:33261
5349 : case 0x1b :Label1663:1:36202:36211
5351 : case 0x19 :Label1659:1:36170:36179
5585 : return 0 ;ReturnStatement1599:2:34965:34973
5356 : case 0x14 :Label1649:1:36090:36099
5429 : case 0x09 :Label1630:1:35691:35700
5350 : case 0x1a :Label1661:1:36186:36195
5589 : case 0x05 :Label1595:1:34922:34931
5357 : case 0x13 :Label1647:1:36074:36083
5302 : break ;BreakStatement1686:2:36462:36467
5584 : case 0x08 :Label1600:1:34976:34985
5339 : default :Label1681:1:36346:36353
5587 : case 0x07 :Label1597:1:34948:34957
5348 : case 0x1c :Label1665:1:36218:36227
5667 : case 0x03 :Label1571:1:34420:34429
5342 : case 0x0a :Label1677:1:36314:36323
5344 : case 0x23 :Label1673:1:36282:36291
5298 : return 0 ;ReturnStatement1688:1:36473:36481
5343 : case 0x24 :Label1675:1:36298:36307
5347 : case 0x20 :Label1667:1:36234:36243
5353 : case 0x17 :Label1655:1:36138:36147
5341 : case 0x0b :Label1679:1:36330:36339
5352 : case 0x18 :Label1657:1:36154:36163
5588 : case 0x06 :Label1596:1:34935:34944
5345 : case 0x22 :Label1671:1:36266:36275
5354 : case 0x16 :Label1653:1:36122:36131
5346 : case 0x21 :Label1669:1:36250:36259
5590 : case 0x04 :Label1594:1:34909:34918
5355 : case 0x15 :Label1651:1:36106:36115
5332 : ND_PRINT ( "Command Data = " )ExpressionStatement1682:2:36357:36384
5281 : ieee802_15_4_print_command_dataFunction1508:0:32997:36483
5875 : u_int i ;IdentifierDeclStatement1514:1:33137:33144
5284 -----> 5425caplen
5284 -----> 5361caplen
5284 -----> 5324caplen
5284 -----> 5433caplen
5284 -----> 5515caplen
5284 -----> 5576caplen
5284 -----> 5594caplen
5284 -----> 5663caplen
5284 -----> 5671caplen
5287 -----> 5305p
5287 -----> 5400p
5287 -----> 5435p
5287 -----> 5504p
5287 -----> 5519p
5287 -----> 5530p
5287 -----> 5543p
5287 -----> 5599p
5287 -----> 5644p
5290 -----> 5873command_id
5293 -----> 5435ndo
5293 -----> 5530ndo
5321 -----> 5305i
5321 -----> 5324i
5321 -----> 5321i
5328 -----> 5305i
5328 -----> 5321i
5328 -----> 5324i
5400 -----> 5363gts
5479 -----> 5470channel
5499 -----> 5458page
5499 -----> 5479page
5499 -----> 5487page
5504 -----> 5458page
5504 -----> 5479page
5504 -----> 5487page
5519 -----> 5458channel
5519 -----> 5479channel
5843 -----> 5788cap_info
5324 -----> 5321None
5324 -----> 5305None
5425 -----> 5414None
5425 -----> 5361None
5425 -----> 5363None
5425 -----> 5400None
5425 -----> 5418None
5425 -----> 5409None
5487 -----> 5479None
5487 -----> 5458None
5487 -----> 5470None
5515 -----> 5499None
5515 -----> 5504None
5576 -----> 5543None
5576 -----> 5515None
5576 -----> 5569None
5576 -----> 5565None
5576 -----> 5448None
5576 -----> 5435None
5576 -----> 5487None
5576 -----> 5433None
5576 -----> 5530None
5576 -----> 5519None
5576 -----> 5557None
5644 -----> 5626None
5644 -----> 5634None
5644 -----> 5625None
5644 -----> 5636None
5644 -----> 5617None
5644 -----> 5618None
5644 -----> 5643None
5644 -----> 5627None
5644 -----> 5598None
5644 -----> 5599None
5644 -----> 5635None
5644 -----> 5615None
5663 -----> 5656None
5663 -----> 5594None
5663 -----> 5652None
5663 -----> 5644None
5739 -----> 5722None
5739 -----> 5712None
5739 -----> 5703None
5739 -----> 5692None
5739 -----> 5695None
5739 -----> 5676None
5739 -----> 5694None
5739 -----> 5721None
5739 -----> 5702None
5739 -----> 5713None
5739 -----> 5731None
5739 -----> 5675None
5739 -----> 5711None
5739 -----> 5730None
5739 -----> 5729None
5739 -----> 5704None
5739 -----> 5720None
5739 -----> 5738None
5778 -----> 5671None
5778 -----> 5771None
5778 -----> 5739None
5778 -----> 5748None
5778 -----> 5767None
5778 -----> 5759None
5868 -----> 5857None
5868 -----> 5788None
5868 -----> 5843None
5868 -----> 5852None
5868 -----> 5786None
5868 -----> 5861None
5873 -----> 5324None
5873 -----> 5349None
5873 -----> 5351None
5873 -----> 5585None
5873 -----> 5626None
5873 -----> 5356None
5873 -----> 5429None
5873 -----> 5634None
5873 -----> 5328None
5873 -----> 5350None
5873 -----> 5625None
5873 -----> 5636None
5873 -----> 5617None
5873 -----> 5425None
5873 -----> 5589None
5873 -----> 5357None
5873 -----> 5618None
5873 -----> 5594None
5873 -----> 5302None
5873 -----> 5584None
5873 -----> 5339None
5873 -----> 5671None
5873 -----> 5695None
5873 -----> 5643None
5873 -----> 5587None
5873 -----> 5348None
5873 -----> 5667None
5873 -----> 5627None
5873 -----> 5694None
5873 -----> 5342None
5873 -----> 5344None
5873 -----> 5702None
5873 -----> 5663None
5873 -----> 5576None
5873 -----> 5298None
5873 -----> 5343None
5873 -----> 5347None
5873 -----> 5635None
5873 -----> 5353None
5873 -----> 5341None
5873 -----> 5352None
5873 -----> 5588None
5873 -----> 5345None
5873 -----> 5354None
5873 -----> 5346None
5873 -----> 5590None
5873 -----> 5355None
5873 -----> 5332None
5281 -----> 5293None
5281 -----> 5873None
5281 -----> 5875None
5281 -----> 5290None
5281 -----> 5287None
5281 -----> 5284None
5284 -----> 5868caplen
5284 -----> 5786caplen
5284 -----> 5778caplen
5287 -----> 5748p
5287 -----> 5739p
5287 -----> 5676p
5293 -----> 5748ndo
5409 -----> 5400gts
5409 -----> 5363gts
5557 -----> 5504page
5557 -----> 5499page
5557 -----> 5487page
5557 -----> 5458page
5557 -----> 5519channel
5557 -----> 5479channel
5557 -----> 5470channel
5557 -----> 5458channel
5852 -----> 5843cap_info
5852 -----> 5788cap_info
5875 -----> 5328i
5875 -----> 5324i
5875 -----> 5321i
5875 -----> 5305i
5287 -----> 5843p
----------------------------pdg--------------------------------------------------
5896 : unsigned short fcParameter1695:3:36586:36602
7092 : CHECK_BIT ( fc , 8 )Condition1749:5:37771:37786
7112 : CHECK_BIT ( fc , 9 )Condition1745:6:37712:37727
7130 : CHECK_BIT ( fc , 8 )Condition1744:6:37641:37656
7148 : CHECK_BIT ( fc , 6 )Condition1743:6:37579:37594
6917 : pan_id_comp = CHECK_BIT ( fc , 6 )ExpressionStatement1788:1:38549:38579
6966 : src_addr_len = ieee802_15_4_addr_len ( ( fc >> 14 ) & 0x3 )ExpressionStatement1777:1:38286:38340
6979 : dst_addr_len = ieee802_15_4_addr_len ( ( fc >> 10 ) & 0x3 )ExpressionStatement1776:1:38229:38283
7166 : CHECK_BIT ( fc , 5 )Condition1742:6:37533:37548
6393 : CHECK_BIT ( fc , 9 )Condition1948:5:41214:41229
6515 : CHECK_BIT ( fc , 3 )Condition1904:5:40617:40632
7202 : CHECK_BIT ( fc , 3 )Condition1740:6:37416:37431
7235 : frame_version = FC_FRAME_VERSION ( fc )ExpressionStatement1735:1:37277:37313
7226 : frame_type = FC_FRAME_TYPE ( fc )ExpressionStatement1736:1:37316:37346
7184 : CHECK_BIT ( fc , 4 )Condition1741:6:37476:37491
5899 : u_int caplenParameter1694:20:36569:36580
7044 : caplen -= 2ExpressionStatement1762:2:38036:38047
7254 : caplen -= 2ExpressionStatement1727:4:37231:37242
7262 : crc_check = ieee802_15_4_crc16 ( ndo , p , caplen - 2 )ExpressionStatement1724:3:37143:37193
7277 : fcs = GET_LE_U_2 ( p + caplen - 2 )ExpressionStatement1723:3:37106:37138
6995 : caplen -= 3ExpressionStatement1772:2:38209:38220
7014 : caplen < 3Condition1767:6:38142:38151
7063 : caplen < 2Condition1757:6:37969:37978
7291 : caplen -= 4ExpressionStatement1720:3:37075:37086
7299 : crc_check = ieee802_15_4_crc32 ( ndo , p , caplen - 4 )ExpressionStatement1717:2:36990:37040
7332 : caplen < 4Condition1711:5:36911:36920
7314 : fcs = GET_LE_U_4 ( p + caplen - 4 )ExpressionStatement1716:2:36954:36986
5902 : const u_char * pParameter1694:3:36552:36566
6999 : p += 3ExpressionStatement1771:2:38199:38205
7032 : seq = GET_U_1 ( p + 2 )ExpressionStatement1764:2:38061:38081
7048 : p += 2ExpressionStatement1761:2:38026:38032
5905 : netdissect_options * ndoParameter1693:24:36524:36546
7211 : ndo -> ndo_vflag > 2Condition1739:5:37388:37405
7007 : nd_print_trunc ( ndo )ExpressionStatement1768:3:38159:38178
6376 : len = ieee802_15_4_print_header_ie_list ( ndo , p , caplen , & payload_ie_present )ExpressionStatement1950:2:41239:41322
6539 : ieee802_15_4_print_addr ( ndo , p , src_addr_len )ExpressionStatement1900:1:40504:40549
6061 : ! ndo -> ndo_suppress_default_printCondition2035:6:42870:42901
6331 : len = ieee802_15_4_print_payload_ie_list ( ndo , p , caplen )ExpressionStatement1963:3:41527:41583
5950 : len = ieee802_15_4_print_command_data ( ndo , command_id , p , caplen )ExpressionStatement2061:4:43429:43494
6138 : len = ieee802_15_4_print_gts_info ( ndo , p , caplen )ExpressionStatement2013:4:42464:42513
6245 : ndo -> ndo_vflag > 2Condition1983:5:41878:41895
7075 : ndo -> ndo_vflagCondition1755:6:37915:37928
6632 : ieee802_15_4_print_addr ( ndo , p , dst_addr_len )ExpressionStatement1878:1:40091:40136
6498 : len = ieee802_15_4_print_aux_sec_header ( ndo , p , caplen , & security_level )ExpressionStatement1906:2:40642:40721
6300 : ndo -> ndo_vflag > 2 && miclen != 0Condition1973:5:41668:41700
6042 : ! ndo -> ndo_suppress_default_printCondition2041:6:42977:43008
6173 : ieee802_15_4_print_superframe_specification ( ndo , ss )ExpressionStatement2003:4:42277:42329
7056 : nd_print_trunc ( ndo )ExpressionStatement1758:3:37986:38005
6096 : len = ieee802_15_4_print_pending_addresses ( ndo , p , caplen )ExpressionStatement2026:4:42698:42756
5925 : ! ndo -> ndo_suppress_default_printCondition2068:6:43572:43603
7028 : ndo -> ndo_vflagCondition1765:6:38089:38102
5938 : caplen -= lenExpressionStatement2064:5:43536:43549
5916 : ND_DEFAULTPRINT ( p , caplen )ExpressionStatement2069:3:43609:43635
5942 : p += lenExpressionStatement2063:5:43521:43529
5946 : len >= 0Condition2062:8:43504:43511
5969 : caplen --ExpressionStatement2059:3:43393:43401
5965 : caplen != 0Condition2060:7:43410:43420
5973 : p ++ExpressionStatement2058:3:43385:43388
6005 : command_id = GET_U_1 ( p )ExpressionStatement2050:3:43181:43204
5980 : ND_PRINT ( "Command ID = %s " , mac_c_names [ command_id ] )ExpressionStatement2055:4:43316:43375
5992 : ND_PRINT ( "Command ID = Reserved 0x%02x " , command_id )ExpressionStatement2052:4:43239:43298
6001 : command_id >= 0x30Condition2051:7:43213:43230
6072 : caplen -= lenExpressionStatement2032:4:42840:42853
6052 : ND_DEFAULTPRINT ( p , caplen )ExpressionStatement2036:3:42907:42933
6076 : p += lenExpressionStatement2031:4:42826:42834
6080 : ND_TCHECK_LEN ( p , len )ExpressionStatement2030:4:42799:42820
6092 : len < 0Condition2027:8:42766:42772
6123 : caplen -= lenExpressionStatement2019:4:42571:42584
6119 : caplen < 1Condition2022:8:42600:42609
6127 : p += lenExpressionStatement2018:4:42557:42565
6134 : len < 0Condition2014:8:42523:42529
6165 : caplen -= 2ExpressionStatement2005:4:42347:42358
6161 : caplen < 1Condition2008:8:42374:42383
6169 : p += 2ExpressionStatement2004:4:42335:42341
6182 : ss = GET_LE_U_2 ( p )ExpressionStatement2002:4:42253:42271
6278 : micoffset ++IncDecOp1976:48:41778:41788
6262 : ND_PRINT ( "%02x" , GET_U_1 ( mic_start + micoffset ) )ExpressionStatement1977:3:41796:41844
6281 : micoffset < miclenCondition1976:28:41758:41775
6285 : u_int micoffset = 0 ;ForInit1976:7:41737:41756
6315 : caplen -= lenExpressionStatement1968:3:41638:41651
6204 : caplen < 2Condition1996:7:42126:42135
6033 : ND_DEFAULTPRINT ( p , caplen )ExpressionStatement2042:3:43014:43040
6026 : caplen < 1Condition2045:6:43070:43079
6319 : p += lenExpressionStatement1967:3:41625:41633
6327 : len < 0Condition1964:7:41592:41598
6360 : caplen -= lenExpressionStatement1956:2:41372:41385
6364 : p += lenExpressionStatement1955:2:41360:41368
6372 : len < 0Condition1952:6:41330:41336
6404 : mic_start = p + caplenExpressionStatement1944:2:41179:41201
6410 : caplen -= miclenExpressionStatement1943:2:41159:41175
6436 : miclen = 16ExpressionStatement1933:2:41021:41032
6425 : caplen < miclenCondition1939:6:41075:41089
6429 : miclen != 0Condition1938:5:41054:41064
6443 : miclen = 8ExpressionStatement1929:2:40979:40989
6450 : miclen = 4ExpressionStatement1925:2:40937:40947
6457 : miclen = 0ExpressionStatement1921:2:40895:40905
6468 : security_level = 0ExpressionStatement1915:2:40823:40841
6352 : security_level >= 4Condition1960:6:41424:41442
6463 : security_levelCondition1918:9:40856:40869
6473 : caplen -= lenExpressionStatement1913:2:40796:40809
6477 : p += lenExpressionStatement1912:2:40784:40792
6481 : ND_TCHECK_LEN ( p , len )ExpressionStatement1911:2:40759:40780
6494 : len < 0Condition1908:6:40729:40735
6524 : caplen -= src_addr_lenExpressionStatement1903:1:40588:40610
6528 : p += src_addr_lenExpressionStatement1902:1:40568:40585
6578 : caplen -= 2ExpressionStatement1892:2:40356:40367
6561 : caplen < ( u_int ) src_addr_lenCondition1896:5:40405:40433
6582 : p += 2ExpressionStatement1891:2:40346:40352
6624 : caplen -= dst_addr_lenExpressionStatement1880:1:40159:40181
6611 : caplen < 2Condition1886:6:40227:40236
6628 : p += dst_addr_lenExpressionStatement1879:1:40139:40156
6586 : ND_PRINT ( "%04x:" , GET_LE_U_2 ( p ) )ExpressionStatement1890:2:40310:40342
6671 : caplen -= 2ExpressionStatement1870:2:39943:39954
6654 : caplen < ( u_int ) dst_addr_lenCondition1874:5:39992:40020
6675 : p += 2ExpressionStatement1869:2:39933:39939
6718 : src_pan = 0ExpressionStatement1856:4:39756:39767
6615 : src_panCondition1885:5:40210:40216
6732 : src_pan = 0ExpressionStatement1850:4:39633:39644
6736 : dst_pan = 1ExpressionStatement1849:4:39616:39627
6708 : dst_panCondition1863:5:39797:39803
6755 : src_pan = 0ExpressionStatement1842:4:39518:39529
6759 : dst_pan = 0ExpressionStatement1841:4:39501:39512
6772 : src_pan = 0ExpressionStatement1837:4:39416:39427
6776 : dst_pan = 0ExpressionStatement1836:4:39399:39410
6797 : dst_pan = 1ExpressionStatement1830:4:39254:39265
6813 : src_pan = 0ExpressionStatement1824:3:39151:39162
6823 : dst_pan = 0ExpressionStatement1821:3:39104:39115
6834 : dst_pan = 1ExpressionStatement1818:3:39057:39068
6838 : src_pan = 1ExpressionStatement1817:3:39041:39052
6843 : dst_pan = 1ExpressionStatement1815:3:39014:39025
6847 : src_pan = 0ExpressionStatement1814:3:38998:39009
6856 : src_pan = 0ExpressionStatement1809:3:38944:38955
6866 : dst_pan = 0ExpressionStatement1806:3:38897:38908
6877 : dst_pan = 1ExpressionStatement1803:3:38850:38861
6881 : src_pan = 1ExpressionStatement1802:3:38834:38845
6903 : dst_pan = 1ExpressionStatement1796:3:38653:38664
6907 : src_pan = 0ExpressionStatement1795:3:38637:38648
6809 : pan_id_compCondition1826:6:39174:39184
6851 : pan_id_compCondition1813:6:38980:38990
6911 : pan_id_compCondition1794:6:38619:38629
6722 : src_addr_len == 8 && dst_addr_len == 2Condition1853:7:39698:39742
6740 : src_addr_len == 8 && dst_addr_len == 8Condition1846:7:39558:39602
6763 : src_addr_len == 8 && dst_addr_len == 8Condition1838:14:39443:39487
6801 : src_addr_len == 0 && dst_addr_len == 0Condition1827:7:39196:39240
6817 : src_addr_len <= 0Condition1823:6:39127:39143
6860 : src_addr_len <= 0Condition1808:6:38920:38936
6895 : dst_addr_len <= 0 || src_addr_len <= 0Condition1797:7:38673:38710
6962 : src_addr_len < 0Condition1778:5:38347:38362
6780 : ( src_addr_len == 0 && dst_addr_len > 0 ) || ( src_addr_len > 0 && dst_addr_len == 0 )Condition1831:14:39281:39385
6827 : dst_addr_len <= 0Condition1820:6:39080:39096
6870 : dst_addr_len <= 0Condition1805:6:38873:38889
6947 : dst_addr_len < 0Condition1782:5:38436:38451
6704 : caplen < 2Condition1864:6:39814:39823
6679 : ND_PRINT ( "%04x:" , GET_LE_U_2 ( p ) )ExpressionStatement1868:2:39897:39929
7019 : ND_PRINT ( "seq %02x " , seq )ExpressionStatement1766:3:38108:38134
6213 : frame_typeCondition1993:9:42065:42074
6208 : frame_version < 2Condition1995:6:42098:42114
6913 : frame_version < 2Condition1793:5:38592:38608
7088 : frame_version < 2Condition1751:6:37800:37816
7217 : ND_PRINT ( "v%d " , frame_version )ExpressionStatement1737:1:37349:37380
6220 : ND_PRINT ( "wrong FCS %x vs %x (assume no FCS stored) " , fcs , crc_check )ExpressionStatement1987:3:41969:42044
6241 : crc_check == fcsCondition1984:6:41906:41921
7258 : crc_check == fcsCondition1725:7:37202:37217
6232 : ND_PRINT ( "FCS %x " , fcs )ExpressionStatement1985:3:41929:41953
7295 : crc_check == fcsCondition1718:6:37048:37063
7328 : fcs = 0ExpressionStatement1713:2:36930:36937
7336 : crc_check = 0ExpressionStatement1709:1:36889:36902
7340 : payload_ie_present = 0ExpressionStatement1707:1:36863:36885
6356 : payload_ie_presentCondition1959:5:41396:41413
7344 : const u_char * mic_start = NULL ;IdentifierDeclStatement1705:1:36829:36859
7366 : u_int miclen = 0 ;IdentifierDeclStatement1701:1:36735:36751
7373 : int security_level ;IdentifierDeclStatement1700:1:36714:36732
6019 : ND_PRINT ( "[ERROR: Truncated before Command ID]" )ExpressionStatement2046:3:43087:43135
6014 : unsigned char command_id ;IdentifierDeclStatement2048:3:43151:43175
6050 : break ;BreakStatement2038:2:42938:42943
6091 : break ;BreakStatement2028:5:42782:42787
6111 : break ;BreakStatement2024:5:42681:42686
6112 : ND_PRINT ( "[ERROR: Truncated before pending addresses]" )ExpressionStatement2023:5:42619:42674
6133 : break ;BreakStatement2015:5:42539:42544
6153 : break ;BreakStatement2010:5:42446:42451
6154 : ND_PRINT ( "[ERROR: Truncated before GTS info]" )ExpressionStatement2009:5:42393:42439
6197 : ND_PRINT ( "[ERROR: Truncated before beacon information]" )ExpressionStatement1997:4:42144:42200
6191 : unsigned short ss ;IdentifierDeclStatement2000:4:42229:42246
6196 : break ;BreakStatement1998:4:42206:42211
6030 : case 0x03 :Label2044:1:43052:43061
6031 : break ;BreakStatement2043:2:43044:43049
5914 : break ;BreakStatement2070:2:43639:43644
6212 : case 0x00 :Label1994:1:42080:42089
6049 : case 0x01 :Label2039:1:42946:42955
6048 : case 0x02 :Label2040:1:42959:42968
6253 : ND_PRINT ( " " )ExpressionStatement1979:2:41852:41865
6293 : ND_PRINT ( "\n\tMIC " )ExpressionStatement1974:2:41707:41727
5910 : return 1 ;ReturnStatement2072:1:43650:43658
6325 : return 0 ;ReturnStatement1965:4:41607:41615
6345 : ND_PRINT ( "Payload IEs present, but encrypted, cannot print " )ExpressionStatement1961:3:41450:41511
6370 : return 0 ;ReturnStatement1953:3:41344:41352
6418 : ND_PRINT ( "[ERROR: Truncated before MIC]" )ExpressionStatement1940:3:41097:41138
6416 : return 0 ;ReturnStatement1941:3:41143:41151
6462 : case 0 :Label1919:1:40875:40881
6435 : break ;BreakStatement1934:2:41036:41041
6461 : case 4 :Label1920:1:40885:40891
6449 : break ;BreakStatement1926:2:40951:40956
6440 : case 7 :Label1932:1:41011:41017
6441 : case 3 :Label1931:1:41001:41007
6448 : case 2 :Label1927:1:40959:40965
6455 : case 1 :Label1923:1:40917:40923
6456 : break ;BreakStatement1922:2:40909:40914
6447 : case 6 :Label1928:1:40969:40975
6442 : break ;BreakStatement1930:2:40993:40998
6454 : case 5 :Label1924:1:40927:40933
6492 : return 0 ;ReturnStatement1909:3:40743:40751
6554 : ND_PRINT ( "[ERROR: Truncated before dst_addr]" )ExpressionStatement1897:2:40440:40486
6552 : return 0 ;ReturnStatement1898:2:40490:40498
6532 : ND_PRINT ( " " )ExpressionStatement1901:1:40552:40565
6602 : return 0 ;ReturnStatement1888:3:40294:40302
6604 : ND_PRINT ( "[ERROR: Truncated before dst_pan]" )ExpressionStatement1887:3:40244:40289
6570 : ND_PRINT ( "-:" )ExpressionStatement1894:2:40381:40395
6647 : ND_PRINT ( "[ERROR: Truncated before dst_addr]" )ExpressionStatement1875:2:40027:40073
6645 : return 0 ;ReturnStatement1876:2:40077:40085
6617 : ND_PRINT ( " < " )ExpressionStatement1882:1:40185:40200
6697 : ND_PRINT ( "[ERROR: Truncated before dst_pan]" )ExpressionStatement1865:3:39831:39876
6695 : return 0 ;ReturnStatement1866:3:39881:39889
6663 : ND_PRINT ( "-:" )ExpressionStatement1872:2:39968:39982
6888 : ND_PRINT ( "[ERROR: PAN ID Compression != 0, and only one address with frame version < 2]" )ExpressionStatement1799:4:38724:38813
6938 : return 0 ;ReturnStatement1784:2:38507:38515
6940 : ND_PRINT ( "[ERROR: Invalid dst address mode]" )ExpressionStatement1783:2:38458:38503
6928 : dst_pan = 0ExpressionStatement1787:1:38535:38546
6932 : src_pan = 0ExpressionStatement1786:1:38521:38532
6953 : return 0 ;ReturnStatement1780:2:38418:38426
6955 : ND_PRINT ( "[ERROR: Invalid src address mode]" )ExpressionStatement1779:2:38369:38414
7005 : return 0 ;ReturnStatement1769:3:38183:38191
7054 : return 0 ;ReturnStatement1759:3:38010:38018
7068 : ND_PRINT ( "seq suppressed " )ExpressionStatement1756:3:37934:37961
7081 : ND_PRINT ( "[ERROR: Sequence number suppressed on frames where version < 2]" )ExpressionStatement1753:3:37828:37903
7105 : ND_PRINT ( "IE present, " )ExpressionStatement1745:26:37732:37756
7123 : ND_PRINT ( "Sequence Number Suppression, " )ExpressionStatement1744:26:37661:37702
7141 : ND_PRINT ( "PAN ID Compression, " )ExpressionStatement1743:26:37599:37631
7159 : ND_PRINT ( "AR, " )ExpressionStatement1742:26:37553:37569
7177 : ND_PRINT ( "Frame Pending, " )ExpressionStatement1741:26:37496:37523
7195 : ND_PRINT ( "Security Enabled, " )ExpressionStatement1740:26:37436:37466
5893 : ieee802_15_4_std_framesFunction1692:0:36487:43660
7390 : int frame_type ;IdentifierDeclStatement1698:1:36646:36660
7362 : int payload_ie_present ;IdentifierDeclStatement1702:1:36754:36776
7394 : int len , frame_version , pan_id_comp ;IdentifierDeclStatement1697:1:36608:36643
7358 : unsigned char seq ;IdentifierDeclStatement1703:1:36779:36796
7351 : unsigned int fcs , crc_check ;IdentifierDeclStatement1704:1:36799:36826
7377 : int src_pan , dst_pan , src_addr_len , dst_addr_len ;IdentifierDeclStatement1699:1:36663:36711
5896 -----> 7092fc
5896 -----> 7112fc
5896 -----> 7130fc
5896 -----> 7148fc
5896 -----> 6917fc
5896 -----> 6966fc
5896 -----> 6979fc
5896 -----> 7166fc
5896 -----> 6393fc
5896 -----> 6515fc
5896 -----> 7202fc
5896 -----> 7235fc
5896 -----> 7226fc
5896 -----> 7184fc
5899 -----> 7044caplen
5899 -----> 7254caplen
5899 -----> 7262caplen
5899 -----> 7277caplen
5899 -----> 6995caplen
5899 -----> 7014caplen
5899 -----> 7063caplen
5899 -----> 7291caplen
5899 -----> 7299caplen
5899 -----> 7332caplen
5899 -----> 7314caplen
5902 -----> 6999p
5902 -----> 7032p
5902 -----> 7048p
5902 -----> 7277p
5902 -----> 7314p
5902 -----> 7299p
5902 -----> 7262p
5905 -----> 7211ndo
5905 -----> 7007ndo
5905 -----> 6376ndo
5905 -----> 6539ndo
5905 -----> 6061ndo
5905 -----> 6331ndo
5905 -----> 5950ndo
5905 -----> 6138ndo
5905 -----> 6245ndo
5905 -----> 7075ndo
5905 -----> 6632ndo
5905 -----> 6498ndo
5905 -----> 6300ndo
5905 -----> 7262ndo
5905 -----> 6042ndo
5905 -----> 6173ndo
5905 -----> 7056ndo
5905 -----> 6096ndo
5905 -----> 5925ndo
5905 -----> 7028ndo
5905 -----> 7299ndo
5938 -----> 5916caplen
5942 -----> 5916p
5950 -----> 5942len
5950 -----> 5946len
5950 -----> 5938len
5969 -----> 5950caplen
5969 -----> 5965caplen
5969 -----> 5938caplen
5969 -----> 5916caplen
5973 -----> 5950p
5973 -----> 5942p
5973 -----> 5916p
6005 -----> 5950command_id
6005 -----> 5980command_id
6005 -----> 5992command_id
6005 -----> 6001command_id
6072 -----> 6052caplen
6076 -----> 6052p
6096 -----> 6080len
6096 -----> 6072len
6096 -----> 6076len
6096 -----> 6092len
6123 -----> 6096caplen
6123 -----> 6072caplen
6123 -----> 6119caplen
6127 -----> 6080p
6127 -----> 6076p
6127 -----> 6096p
6138 -----> 6127len
6138 -----> 6134len
6138 -----> 6123len
6165 -----> 6161caplen
6165 -----> 6123caplen
6165 -----> 6138caplen
6169 -----> 6138p
6169 -----> 6127p
6182 -----> 6173ss
6278 -----> 6262micoffset
6278 -----> 6281micoffset
6278 -----> 6278micoffset
6285 -----> 6262micoffset
6285 -----> 6278micoffset
6285 -----> 6281micoffset
6315 -----> 6204caplen
6315 -----> 5916caplen
6315 -----> 6033caplen
6315 -----> 6165caplen
6315 -----> 5969caplen
6315 -----> 6026caplen
6315 -----> 6052caplen
6319 -----> 5916p
6319 -----> 5973p
6319 -----> 6052p
6319 -----> 6005p
6319 -----> 6182p
6319 -----> 6033p
6319 -----> 6169p
6331 -----> 6319len
6331 -----> 6327len
6331 -----> 6315len
6360 -----> 6026caplen
6360 -----> 6315caplen
6360 -----> 5916caplen
6360 -----> 6052caplen
6360 -----> 6033caplen
6360 -----> 6331caplen
6360 -----> 6204caplen
6360 -----> 5969caplen
6360 -----> 6165caplen
6364 -----> 6319p
6364 -----> 6169p
6364 -----> 5916p
6364 -----> 6005p
6364 -----> 6033p
6364 -----> 6182p
6364 -----> 5973p
6364 -----> 6331p
6364 -----> 6052p
6376 -----> 6360len
6376 -----> 6364len
6376 -----> 6372len
6404 -----> 6262mic_start
6410 -----> 5969caplen
6410 -----> 6052caplen
6410 -----> 6204caplen
6410 -----> 5916caplen
6410 -----> 6026caplen
6410 -----> 6331caplen
6410 -----> 6165caplen
6410 -----> 6376caplen
6410 -----> 6404caplen
6410 -----> 6033caplen
6410 -----> 6360caplen
6410 -----> 6315caplen
6436 -----> 6410miclen
6436 -----> 6281miclen
6436 -----> 6300miclen
6436 -----> 6425miclen
6436 -----> 6429miclen
6443 -----> 6281miclen
6443 -----> 6410miclen
6443 -----> 6429miclen
6443 -----> 6425miclen
6443 -----> 6300miclen
6450 -----> 6410miclen
6450 -----> 6425miclen
6450 -----> 6281miclen
6450 -----> 6300miclen
6450 -----> 6429miclen
6457 -----> 6425miclen
6457 -----> 6300miclen
6457 -----> 6429miclen
6457 -----> 6410miclen
6457 -----> 6281miclen
6468 -----> 6352security_level
6468 -----> 6463security_level
6473 -----> 6026caplen
6473 -----> 6360caplen
6473 -----> 6425caplen
6473 -----> 6033caplen
6473 -----> 6410caplen
6473 -----> 5916caplen
6473 -----> 6204caplen
6473 -----> 6376caplen
6473 -----> 5969caplen
6473 -----> 6331caplen
6473 -----> 6165caplen
6473 -----> 6052caplen
6473 -----> 6315caplen
6477 -----> 5916p
6477 -----> 6052p
6477 -----> 5973p
6477 -----> 6376p
6477 -----> 6033p
6477 -----> 6331p
6477 -----> 6404p
6477 -----> 6319p
6477 -----> 6364p
6477 -----> 6005p
6477 -----> 6169p
6477 -----> 6182p
6498 -----> 6473len
6498 -----> 6477len
6498 -----> 6481len
6498 -----> 6494len
6524 -----> 6473caplen
6524 -----> 6315caplen
6524 -----> 6360caplen
6524 -----> 6033caplen
6524 -----> 6331caplen
6524 -----> 6410caplen
6524 -----> 6052caplen
6524 -----> 5916caplen
6524 -----> 6204caplen
6524 -----> 6498caplen
6524 -----> 6425caplen
6524 -----> 6376caplen
6524 -----> 5969caplen
6524 -----> 6165caplen
6524 -----> 6026caplen
6528 -----> 6052p
6528 -----> 6331p
6528 -----> 6404p
6528 -----> 6481p
6528 -----> 6498p
6528 -----> 6376p
6528 -----> 6005p
6528 -----> 6033p
6528 -----> 5973p
6528 -----> 6364p
6528 -----> 6169p
6528 -----> 6319p
6528 -----> 6182p
6528 -----> 5916p
6528 -----> 6477p
6578 -----> 6561caplen
6578 -----> 6524caplen
6582 -----> 6528p
6582 -----> 6539p
6624 -----> 6561caplen
6624 -----> 6578caplen
6624 -----> 6611caplen
6624 -----> 6524caplen
6628 -----> 6539p
6628 -----> 6582p
6628 -----> 6586p
6628 -----> 6528p
6671 -----> 6654caplen
6671 -----> 6624caplen
6675 -----> 6628p
6675 -----> 6632p
6718 -----> 6615src_pan
6732 -----> 6615src_pan
6736 -----> 6708dst_pan
6755 -----> 6615src_pan
6759 -----> 6708dst_pan
6772 -----> 6615src_pan
6776 -----> 6708dst_pan
6797 -----> 6708dst_pan
6813 -----> 6615src_pan
6823 -----> 6708dst_pan
6834 -----> 6708dst_pan
6838 -----> 6615src_pan
6843 -----> 6708dst_pan
6847 -----> 6615src_pan
6856 -----> 6615src_pan
6866 -----> 6708dst_pan
6877 -----> 6708dst_pan
6881 -----> 6615src_pan
6903 -----> 6708dst_pan
6907 -----> 6615src_pan
6917 -----> 6809pan_id_comp
6917 -----> 6851pan_id_comp
6917 -----> 6911pan_id_comp
6966 -----> 6722src_addr_len
6966 -----> 6740src_addr_len
6966 -----> 6528src_addr_len
6966 -----> 6539src_addr_len
6966 -----> 6763src_addr_len
6966 -----> 6801src_addr_len
6966 -----> 6817src_addr_len
6966 -----> 6524src_addr_len
6966 -----> 6561src_addr_len
6966 -----> 6860src_addr_len
6966 -----> 6895src_addr_len
6966 -----> 6962src_addr_len
6966 -----> 6780src_addr_len
6979 -----> 6632dst_addr_len
6979 -----> 6722dst_addr_len
6979 -----> 6740dst_addr_len
6979 -----> 6763dst_addr_len
6979 -----> 6780dst_addr_len
6979 -----> 6624dst_addr_len
6979 -----> 6654dst_addr_len
6979 -----> 6827dst_addr_len
6979 -----> 6628dst_addr_len
6979 -----> 6870dst_addr_len
6979 -----> 6895dst_addr_len
6979 -----> 6947dst_addr_len
6979 -----> 6801dst_addr_len
6995 -----> 6704caplen
6995 -----> 6671caplen
6995 -----> 6624caplen
6995 -----> 6654caplen
6999 -----> 6679p
6999 -----> 6632p
6999 -----> 6675p
6999 -----> 6628p
7032 -----> 7019seq
7044 -----> 6624caplen
7044 -----> 6671caplen
7044 -----> 6704caplen
7044 -----> 6654caplen
7048 -----> 6679p
7048 -----> 6632p
7048 -----> 6675p
7048 -----> 6628p
7226 -----> 6213frame_type
7235 -----> 6208frame_version
7235 -----> 6913frame_version
7235 -----> 7088frame_version
7235 -----> 7217frame_version
7254 -----> 7014caplen
7254 -----> 7044caplen
7254 -----> 7063caplen
7254 -----> 6995caplen
7262 -----> 6220crc_check
7262 -----> 6241crc_check
7262 -----> 7258crc_check
7277 -----> 6220fcs
7277 -----> 6232fcs
7277 -----> 7258fcs
7277 -----> 6241fcs
7291 -----> 7014caplen
7291 -----> 6995caplen
7291 -----> 7044caplen
7291 -----> 7063caplen
7299 -----> 6220crc_check
7299 -----> 6241crc_check
7299 -----> 7295crc_check
7314 -----> 6220fcs
7314 -----> 6232fcs
7314 -----> 6241fcs
7314 -----> 7295fcs
7328 -----> 6220fcs
7328 -----> 6232fcs
7328 -----> 6241fcs
7336 -----> 6220crc_check
7336 -----> 6241crc_check
7340 -----> 6356payload_ie_present
7344 -----> 6262mic_start
7366 -----> 6425miclen
7366 -----> 6281miclen
7366 -----> 6429miclen
7366 -----> 6300miclen
7366 -----> 6410miclen
7373 -----> 6352security_level
7373 -----> 6463security_level
5925 -----> 5916None
5946 -----> 5942None
5946 -----> 5938None
5965 -----> 5946None
5965 -----> 5950None
6001 -----> 5992None
6001 -----> 5980None
6026 -----> 5965None
6026 -----> 5973None
6026 -----> 6019None
6026 -----> 5969None
6026 -----> 6005None
6026 -----> 6014None
6026 -----> 6001None
6042 -----> 6033None
6061 -----> 6052None
6092 -----> 6050None
6092 -----> 6061None
6092 -----> 6072None
6092 -----> 6080None
6092 -----> 6091None
6092 -----> 6076None
6119 -----> 6092None
6119 -----> 6111None
6119 -----> 6112None
6119 -----> 6096None
6134 -----> 6119None
6134 -----> 6133None
6134 -----> 6127None
6134 -----> 6123None
6161 -----> 6134None
6161 -----> 6138None
6161 -----> 6153None
6161 -----> 6154None
6204 -----> 6182None
6204 -----> 6197None
6204 -----> 6161None
6204 -----> 6191None
6204 -----> 6169None
6204 -----> 6196None
6204 -----> 6165None
6204 -----> 6173None
6208 -----> 6050None
6208 -----> 6061None
6208 -----> 6204None
6213 -----> 6026None
6213 -----> 5925None
6213 -----> 6030None
6213 -----> 6031None
6213 -----> 6042None
6213 -----> 5914None
6213 -----> 6208None
6213 -----> 6212None
6213 -----> 6049None
6213 -----> 6048None
6241 -----> 6220None
6241 -----> 6232None
6245 -----> 6241None
6281 -----> 6278None
6281 -----> 6262None
6300 -----> 6253None
6300 -----> 6285None
6300 -----> 6281None
6300 -----> 6293None
6327 -----> 5910None
6327 -----> 6315None
6327 -----> 6245None
6327 -----> 6300None
6327 -----> 6319None
6327 -----> 6213None
6327 -----> 6325None
6352 -----> 5910None
6352 -----> 6245None
6352 -----> 6300None
6352 -----> 6327None
6352 -----> 6213None
6352 -----> 6331None
6352 -----> 6345None
6356 -----> 5910None
6356 -----> 6245None
6356 -----> 6300None
6356 -----> 6213None
6356 -----> 6352None
6372 -----> 6364None
6372 -----> 6360None
6372 -----> 6356None
6372 -----> 6370None
6393 -----> 6372None
6393 -----> 6376None
6393 -----> 6356None
6425 -----> 6410None
6425 -----> 6393None
6425 -----> 6404None
6425 -----> 6418None
6425 -----> 6416None
6429 -----> 6425None
6429 -----> 6393None
6463 -----> 6462None
6463 -----> 6435None
6463 -----> 6450None
6463 -----> 6461None
6463 -----> 6449None
6463 -----> 6440None
6463 -----> 6457None
6463 -----> 6441None
6463 -----> 6448None
6463 -----> 6436None
6463 -----> 6455None
6463 -----> 6443None
6463 -----> 6456None
6463 -----> 6447None
6463 -----> 6442None
6463 -----> 6454None
6494 -----> 6429None
6494 -----> 6481None
6494 -----> 6473None
6494 -----> 6492None
6494 -----> 6463None
6494 -----> 6477None
6515 -----> 6429None
6515 -----> 6468None
6515 -----> 6494None
6515 -----> 6463None
6515 -----> 6498None
6561 -----> 6554None
6561 -----> 6552None
6561 -----> 6515None
6561 -----> 6539None
6561 -----> 6532None
6561 -----> 6524None
6561 -----> 6528None
6611 -----> 6602None
6611 -----> 6582None
6611 -----> 6586None
6611 -----> 6578None
6611 -----> 6561None
6611 -----> 6604None
6615 -----> 6570None
6615 -----> 6561None
6615 -----> 6611None
6654 -----> 6647None
6654 -----> 6624None
6654 -----> 6632None
6654 -----> 6615None
6654 -----> 6645None
6654 -----> 6617None
6654 -----> 6628None
6704 -----> 6671None
6704 -----> 6697None
6704 -----> 6675None
6704 -----> 6695None
6704 -----> 6654None
6704 -----> 6679None
6708 -----> 6704None
6708 -----> 6663None
6708 -----> 6654None
6722 -----> 6718None
6740 -----> 6736None
6740 -----> 6732None
6763 -----> 6759None
6763 -----> 6755None
6780 -----> 6763None
6780 -----> 6776None
6780 -----> 6772None
6801 -----> 6797None
6801 -----> 6780None
6809 -----> 6722None
6809 -----> 6740None
6809 -----> 6801None
6817 -----> 6813None
6827 -----> 6823None
6851 -----> 6847None
6851 -----> 6838None
6851 -----> 6843None
6851 -----> 6834None
6860 -----> 6856None
6870 -----> 6866None
6895 -----> 6888None
6911 -----> 6907None
6911 -----> 6903None
6911 -----> 6877None
6911 -----> 6895None
6911 -----> 6881None
6913 -----> 6827None
6913 -----> 6860None
6913 -----> 6817None
6913 -----> 6870None
6913 -----> 6851None
6913 -----> 6809None
6913 -----> 6911None
6947 -----> 6708None
6947 -----> 6913None
6947 -----> 6938None
6947 -----> 6917None
6947 -----> 6940None
6947 -----> 6928None
6947 -----> 6932None
6962 -----> 6953None
6962 -----> 6947None
6962 -----> 6955None
7014 -----> 6966None
7014 -----> 6979None
7014 -----> 6962None
7014 -----> 6995None
7014 -----> 7007None
7014 -----> 7005None
7014 -----> 6999None
7028 -----> 7019None
7063 -----> 7056None
7063 -----> 7044None
7063 -----> 6966None
7063 -----> 7054None
7063 -----> 6979None
7063 -----> 6962None
7063 -----> 7048None
7075 -----> 7068None
7088 -----> 7081None
7092 -----> 7032None
7092 -----> 7088None
7092 -----> 7075None
7092 -----> 7028None
7092 -----> 7063None
7092 -----> 7014None
7112 -----> 7105None
7130 -----> 7123None
7148 -----> 7141None
7166 -----> 7159None
7184 -----> 7177None
7202 -----> 7195None
7211 -----> 7166None
7211 -----> 7130None
7211 -----> 7112None
7211 -----> 7184None
7211 -----> 7202None
7211 -----> 7148None
7258 -----> 7254None
7295 -----> 7277None
7295 -----> 7262None
7295 -----> 7258None
7295 -----> 7291None
7332 -----> 7299None
7332 -----> 7328None
7332 -----> 7314None
7332 -----> 7295None
5893 -----> 5899None
5893 -----> 7336None
5893 -----> 7340None
5893 -----> 7390None
5893 -----> 7362None
5893 -----> 7394None
5893 -----> 7373None
5893 -----> 7211None
5893 -----> 5896None
5893 -----> 7092None
5893 -----> 7235None
5893 -----> 7358None
5893 -----> 7366None
5893 -----> 7351None
5893 -----> 7226None
5893 -----> 7344None
5893 -----> 7332None
5893 -----> 5905None
5893 -----> 7217None
5893 -----> 5902None
5893 -----> 7377None
5899 -----> 6704caplen
5899 -----> 6671caplen
5899 -----> 6654caplen
5899 -----> 6624caplen
5899 -----> 6611caplen
5899 -----> 6578caplen
5899 -----> 6561caplen
5899 -----> 6524caplen
5899 -----> 6473caplen
5899 -----> 6425caplen
5899 -----> 6410caplen
5899 -----> 6360caplen
5899 -----> 6315caplen
5899 -----> 6204caplen
5899 -----> 6165caplen
5899 -----> 6161caplen
5899 -----> 6123caplen
5899 -----> 6119caplen
5899 -----> 6072caplen
5899 -----> 6052caplen
5899 -----> 6033caplen
5899 -----> 6026caplen
5899 -----> 5969caplen
5899 -----> 5965caplen
5899 -----> 5938caplen
5899 -----> 5916caplen
5902 -----> 6679p
5902 -----> 6675p
5902 -----> 6632p
5902 -----> 6628p
5902 -----> 6586p
5902 -----> 6582p
5902 -----> 6539p
5902 -----> 6528p
5902 -----> 6481p
5902 -----> 6477p
5902 -----> 6364p
5902 -----> 6319p
5902 -----> 6169p
5902 -----> 6127p
5902 -----> 6080p
5902 -----> 6076p
5902 -----> 6052p
5902 -----> 6033p
5902 -----> 5973p
5902 -----> 5942p
5902 -----> 5916p
7373 -----> 6468security_level
6014 -----> 6005command_id
6014 -----> 6001command_id
6014 -----> 5992command_id
6014 -----> 5980command_id
6191 -----> 6182ss
6191 -----> 6173ss
7390 -----> 7226frame_type
7390 -----> 6213frame_type
7362 -----> 7340payload_ie_present
7362 -----> 6356payload_ie_present
7394 -----> 6498len
7394 -----> 6494len
7394 -----> 6481len
7394 -----> 6376len
7394 -----> 6372len
7394 -----> 6331len
7394 -----> 6327len
7394 -----> 6138len
7394 -----> 6134len
7394 -----> 6096len
7394 -----> 6092len
7394 -----> 6080len
7394 -----> 5950len
7394 -----> 5946len
7394 -----> 7235frame_version
7394 -----> 7217frame_version
7394 -----> 7088frame_version
7394 -----> 6913frame_version
7394 -----> 6208frame_version
7394 -----> 6917pan_id_comp
7394 -----> 6911pan_id_comp
7394 -----> 6851pan_id_comp
7394 -----> 6809pan_id_comp
7358 -----> 7032seq
7358 -----> 7019seq
7351 -----> 7336crc_check
7351 -----> 7299crc_check
7351 -----> 7295crc_check
7351 -----> 7262crc_check
7351 -----> 7258crc_check
7351 -----> 6241crc_check
7351 -----> 6220crc_check
7351 -----> 7328fcs
7351 -----> 7314fcs
7351 -----> 7295fcs
7351 -----> 7277fcs
7351 -----> 7258fcs
7351 -----> 6241fcs
7351 -----> 6232fcs
7351 -----> 6220fcs
7377 -----> 6979dst_addr_len
7377 -----> 6947dst_addr_len
7377 -----> 6895dst_addr_len
7377 -----> 6870dst_addr_len
7377 -----> 6827dst_addr_len
7377 -----> 6801dst_addr_len
7377 -----> 6780dst_addr_len
7377 -----> 6763dst_addr_len
7377 -----> 6740dst_addr_len
7377 -----> 6722dst_addr_len
7377 -----> 6654dst_addr_len
7377 -----> 6632dst_addr_len
7377 -----> 6928dst_pan
7377 -----> 6903dst_pan
7377 -----> 6877dst_pan
7377 -----> 6866dst_pan
7377 -----> 6843dst_pan
7377 -----> 6834dst_pan
7377 -----> 6823dst_pan
7377 -----> 6797dst_pan
7377 -----> 6776dst_pan
7377 -----> 6759dst_pan
7377 -----> 6736dst_pan
7377 -----> 6708dst_pan
7377 -----> 6932src_pan
7377 -----> 6907src_pan
7377 -----> 6881src_pan
7377 -----> 6856src_pan
7377 -----> 6847src_pan
7377 -----> 6838src_pan
7377 -----> 6813src_pan
7377 -----> 6772src_pan
7377 -----> 6755src_pan
7377 -----> 6732src_pan
7377 -----> 6718src_pan
7377 -----> 6615src_pan
7377 -----> 6966src_addr_len
7377 -----> 6962src_addr_len
7377 -----> 6895src_addr_len
7377 -----> 6860src_addr_len
7377 -----> 6817src_addr_len
7377 -----> 6801src_addr_len
7377 -----> 6780src_addr_len
7377 -----> 6763src_addr_len
7377 -----> 6740src_addr_len
7377 -----> 6722src_addr_len
7377 -----> 6561src_addr_len
7377 -----> 6539src_addr_len
7340 -----> 6376payload_ie_present
7336 -----> 7295crc_check
7336 -----> 7258crc_check
7314 -----> 7258fcs
7299 -----> 7258crc_check
6932 -----> 6615src_pan
6928 -----> 6708dst_pan
6498 -----> 6372len
6498 -----> 6364len
6498 -----> 6360len
6498 -----> 6327len
6498 -----> 6319len
6498 -----> 6315len
6498 -----> 6134len
6498 -----> 6127len
6498 -----> 6123len
6498 -----> 6092len
6498 -----> 6080len
6498 -----> 6076len
6498 -----> 6072len
6498 -----> 5946len
6498 -----> 5942len
6498 -----> 5938len
6096 -----> 5946len
6096 -----> 5942len
6096 -----> 5938len
6076 -----> 6033p
6076 -----> 6005p
6076 -----> 5973p
6072 -----> 6033caplen
6072 -----> 6026caplen
6072 -----> 5969caplen
----------------------------pdg--------------------------------------------------
7455 : unsigned short fcParameter2079:8:43771:43787
7968 : dst_addr_len = ieee802_15_4_addr_len ( ( fc >> 4 ) & 0x3 )ExpressionStatement2178:1:45733:45786
7955 : src_addr_len = ieee802_15_4_addr_len ( ( fc >> 6 ) & 0x3 )ExpressionStatement2179:1:45789:45842
8093 : CHECK_BIT ( fc , 10 )Condition2149:6:45307:45323
8124 : CHECK_BIT ( fc , 10 )Condition2142:7:45171:45187
8153 : CHECK_BIT ( fc , 14 )Condition2140:7:45066:45082
8197 : security_enabled = CHECK_BIT ( fc , 9 )ExpressionStatement2135:2:44873:44908
8208 : ie_present = CHECK_BIT ( fc , 15 )ExpressionStatement2134:2:44839:44869
8219 : pan_id_present = CHECK_BIT ( fc , 8 )ExpressionStatement2133:2:44802:44835
8239 : frame_version = FC_FRAME_VERSION ( fc )ExpressionStatement2130:2:44726:44762
8248 : CHECK_BIT ( fc , 3 )Condition2126:5:44697:44712
8171 : CHECK_BIT ( fc , 11 )Condition2139:7:45007:45023
7458 : u_int caplenParameter2078:25:43749:43760
8040 : caplen < 3Condition2161:7:45522:45531
8021 : caplen -= 3ExpressionStatement2166:3:45594:45605
8265 : caplen -= 2ExpressionStatement2121:4:44666:44677
8089 : caplen < 2Condition2151:7:45339:45348
8307 : caplen -= 2ExpressionStatement2113:5:44503:44514
8315 : crc_check = ieee802_15_4_crc16 ( ndo , p , caplen - 2 )ExpressionStatement2110:4:44412:44462
8288 : fcs = GET_LE_U_2 ( p + caplen - 2 )ExpressionStatement2117:3:44541:44573
8330 : fcs = GET_LE_U_2 ( p + caplen - 2 )ExpressionStatement2109:4:44374:44406
8273 : crc_check = ieee802_15_4_crc16 ( ndo , p , caplen - 2 )ExpressionStatement2118:3:44578:44628
8344 : caplen -= 4ExpressionStatement2107:4:44345:44356
8352 : crc_check = ieee802_15_4_crc32 ( ndo , p , caplen - 4 )ExpressionStatement2104:3:44257:44307
8367 : fcs = GET_LE_U_4 ( p + caplen - 4 )ExpressionStatement2103:3:44220:44252
7998 : caplen -= 2ExpressionStatement2172:2:45660:45671
8070 : caplen -= 2ExpressionStatement2156:3:45411:45422
8389 : caplen < 3Condition2097:5:44155:44164
8380 : caplen > 4Condition2101:6:44199:44208
7461 : const u_char * pParameter2078:8:43732:43746
8025 : p += 3ExpressionStatement2165:3:45583:45589
8058 : seq = GET_U_1 ( p + 2 )ExpressionStatement2158:3:45438:45458
8002 : p += 2ExpressionStatement2171:2:45650:45656
8006 : seq = GET_U_1 ( p + 1 )ExpressionStatement2170:2:45626:45646
8074 : p += 2ExpressionStatement2155:3:45400:45406
7464 : netdissect_options * ndoParameter2077:22:43699:43721
7481 : ! ndo -> ndo_suppress_default_printCondition2311:5:48124:48155
7603 : len = ieee802_15_4_print_payload_ie_list ( ndo , p , caplen )ExpressionStatement2280:3:47582:47647
8082 : nd_print_trunc ( ndo )ExpressionStatement2152:4:45357:45376
7797 : ieee802_15_4_print_addr ( ndo , p , src_addr_len )ExpressionStatement2217:1:46567:46612
7994 : ndo -> ndo_vflagCondition2173:6:45679:45692
7572 : ndo -> ndo_vflag > 2 && miclen != 0Condition2291:5:47732:47764
8191 : ndo -> ndo_vflag > 2Condition2137:6:44917:44934
8033 : nd_print_trunc ( ndo )ExpressionStatement2162:4:45540:45559
7763 : len = ieee802_15_4_print_aux_sec_header ( ndo , p , caplen , & security_level )ExpressionStatement2223:2:46703:46782
7847 : ieee802_15_4_print_addr ( ndo , p , dst_addr_len )ExpressionStatement2205:1:46331:46376
7517 : ndo -> ndo_vflag > 2Condition2302:5:47943:47960
8054 : ndo -> ndo_vflagCondition2159:7:45467:45480
7648 : len = ieee802_15_4_print_header_ie_list ( ndo , p , caplen , & payload_ie_present )ExpressionStatement2267:2:47294:47377
7550 : micoffset ++IncDecOp2294:48:47842:47852
7534 : ND_PRINT ( "%02x" , GET_U_1 ( mic_start + micoffset ) )ExpressionStatement2295:3:47860:47908
7553 : micoffset < miclenCondition2294:28:47822:47839
7557 : u_int micoffset = 0 ;ForInit2294:7:47801:47820
7587 : caplen -= lenExpressionStatement2286:3:47702:47715
7472 : ND_DEFAULTPRINT ( p , caplen )ExpressionStatement2312:2:48160:48186
7591 : p += lenExpressionStatement2285:3:47689:47697
7599 : len < 0Condition2282:7:47656:47662
7632 : caplen -= lenExpressionStatement2273:2:47427:47440
7636 : p += lenExpressionStatement2272:2:47415:47423
7644 : len < 0Condition2269:6:47385:47391
7669 : mic_start = p + caplenExpressionStatement2261:2:47240:47262
7675 : caplen -= miclenExpressionStatement2260:2:47220:47236
7701 : miclen = 16ExpressionStatement2250:2:47082:47093
7690 : caplen < miclenCondition2256:6:47136:47150
7694 : miclen != 0Condition2255:5:47115:47125
7708 : miclen = 8ExpressionStatement2246:2:47040:47050
7715 : miclen = 4ExpressionStatement2242:2:46998:47008
7722 : miclen = 0ExpressionStatement2238:2:46956:46966
7733 : security_level = 0ExpressionStatement2232:2:46884:46902
7624 : security_level >= 4Condition2277:6:47479:47497
7728 : security_levelCondition2235:9:46917:46930
7738 : caplen -= lenExpressionStatement2230:2:46857:46870
7742 : p += lenExpressionStatement2229:2:46845:46853
7746 : ND_TCHECK_LEN ( p , len )ExpressionStatement2228:2:46820:46841
7759 : len < 0Condition2225:6:46790:46796
7782 : caplen -= src_addr_lenExpressionStatement2220:1:46651:46673
7786 : p += src_addr_lenExpressionStatement2219:1:46631:46648
7839 : caplen -= dst_addr_lenExpressionStatement2207:1:46399:46421
7819 : caplen < ( u_int ) src_addr_lenCondition2213:5:46468:46496
7843 : p += dst_addr_lenExpressionStatement2206:1:46379:46396
7886 : caplen -= 2ExpressionStatement2197:2:46183:46194
7869 : caplen < ( u_int ) dst_addr_lenCondition2201:5:46232:46260
7890 : p += 2ExpressionStatement2196:2:46173:46179
7951 : src_addr_len < 0Condition2180:5:45849:45864
7936 : dst_addr_len < 0Condition2184:5:45938:45953
7919 : caplen < 2Condition2191:6:46054:46063
7894 : ND_PRINT ( "%04x:" , GET_LE_U_2 ( p ) )ExpressionStatement2195:2:46137:46169
7985 : ND_PRINT ( "seq %02x " , seq )ExpressionStatement2174:3:45698:45724
8045 : ND_PRINT ( "seq %02x " , seq )ExpressionStatement2160:4:45487:45513
7780 : security_enabledCondition2222:5:46681:46696
8189 : security_enabledCondition2138:7:44946:44961
7665 : ie_presentCondition2265:5:47275:47284
8113 : ie_presentCondition2145:7:45251:45260
7923 : pan_id_presentCondition2190:5:46030:46043
8142 : pan_id_presentCondition2141:7:45114:45127
8230 : ND_PRINT ( "v%d " , frame_version )ExpressionStatement2131:2:44766:44797
7492 : ND_PRINT ( "wrong FCS %x vs %x (assume no FCS stored) " , fcs , crc_check )ExpressionStatement2306:3:48034:48109
7513 : crc_check == fcsCondition2303:6:47971:47986
8269 : crc_check == fcsCondition2119:7:44637:44652
7504 : ND_PRINT ( "FCS %x " , fcs )ExpressionStatement2304:3:47994:48018
8311 : crc_check == fcsCondition2111:8:44472:44487
8348 : crc_check == fcsCondition2105:7:44316:44331
8385 : fcs = 0ExpressionStatement2099:2:44174:44181
8393 : crc_check = 0ExpressionStatement2094:1:44132:44145
8397 : security_enabled = 0ExpressionStatement2093:1:44109:44129
8401 : payload_ie_present = 0ExpressionStatement2092:1:44084:44106
7628 : payload_ie_presentCondition2276:5:47451:47468
8405 : ie_present = 0ExpressionStatement2091:1:44067:44081
8409 : pan_id_present = 0ExpressionStatement2090:1:44046:44064
8413 : const u_char * mic_start = NULL ;IdentifierDeclStatement2088:1:44012:44042
8441 : u_int miclen = 0 ;IdentifierDeclStatement2084:1:43888:43904
8448 : int security_level ;IdentifierDeclStatement2083:1:43867:43885
7525 : ND_PRINT ( " " )ExpressionStatement2297:2:47916:47929
7565 : ND_PRINT ( "\n\tMIC " )ExpressionStatement2292:2:47771:47791
7469 : return 1 ;ReturnStatement2314:1:48190:48198
7597 : return 0 ;ReturnStatement2283:4:47671:47679
7617 : ND_PRINT ( "Payload IEs present, but encrypted, cannot print " )ExpressionStatement2278:3:47505:47566
7642 : return 0 ;ReturnStatement2270:3:47399:47407
7681 : return 0 ;ReturnStatement2258:3:47204:47212
7683 : ND_PRINT ( "[ERROR: Truncated before MIC]" )ExpressionStatement2257:3:47158:47199
7727 : case 0 :Label2236:1:46936:46942
7707 : break ;BreakStatement2247:2:47054:47059
7700 : break ;BreakStatement2251:2:47097:47102
7721 : break ;BreakStatement2239:2:46970:46975
7713 : case 2 :Label2244:1:47020:47026
7705 : case 7 :Label2249:1:47072:47078
7706 : case 3 :Label2248:1:47062:47068
7719 : case 5 :Label2241:1:46988:46994
7726 : case 4 :Label2237:1:46946:46952
7714 : break ;BreakStatement2243:2:47012:47017
7712 : case 6 :Label2245:1:47030:47036
7720 : case 1 :Label2240:1:46978:46984
7757 : return 0 ;ReturnStatement2226:3:46804:46812
7810 : return 0 ;ReturnStatement2215:2:46553:46561
7812 : ND_PRINT ( "[ERROR: Truncated before dst_addr]" )ExpressionStatement2214:2:46503:46549
7790 : ND_PRINT ( " " )ExpressionStatement2218:1:46615:46628
7825 : ND_PRINT ( " -:" )ExpressionStatement2212:1:46446:46461
7860 : return 0 ;ReturnStatement2203:2:46317:46325
7832 : ND_PRINT ( " < " )ExpressionStatement2209:1:46425:46440
7862 : ND_PRINT ( "[ERROR: Truncated before dst_addr]" )ExpressionStatement2202:2:46267:46313
7910 : return 0 ;ReturnStatement2193:3:46121:46129
7912 : ND_PRINT ( "[ERROR: Truncated before dst_pan]" )ExpressionStatement2192:3:46071:46116
7878 : ND_PRINT ( "-:" )ExpressionStatement2199:2:46208:46222
7927 : return 0 ;ReturnStatement2186:2:46009:46017
7929 : ND_PRINT ( "[ERROR: Invalid dst address mode]" )ExpressionStatement2185:2:45960:46005
7944 : ND_PRINT ( "[ERROR: Invalid src address mode]" )ExpressionStatement2181:2:45871:45916
7942 : return 0 ;ReturnStatement2182:2:45920:45928
8031 : return 0 ;ReturnStatement2163:4:45565:45573
8080 : return 0 ;ReturnStatement2153:4:45382:45390
8106 : ND_PRINT ( "IE present, " )ExpressionStatement2145:21:45265:45289
8117 : ND_PRINT ( "Sequence Number Suppression, " )ExpressionStatement2143:4:45196:45237
8135 : ND_PRINT ( "PAN ID Present, " )ExpressionStatement2141:25:45132:45160
8146 : ND_PRINT ( "AR, " )ExpressionStatement2140:28:45087:45103
8164 : ND_PRINT ( "Frame Pending, " )ExpressionStatement2139:28:45028:45055
8182 : ND_PRINT ( "Security Enabled, " )ExpressionStatement2138:27:44966:44996
7452 : ieee802_15_4_mp_frameFunction2076:0:43664:48200
8431 : int ie_present , payload_ie_present , security_enabled ;IdentifierDeclStatement2085:1:43907:43959
8427 : unsigned char seq ;IdentifierDeclStatement2086:1:43962:43979
8459 : int len , frame_version , pan_id_present ;IdentifierDeclStatement2081:1:43793:43831
8452 : int src_addr_len , dst_addr_len ;IdentifierDeclStatement2082:1:43834:43864
8420 : unsigned int fcs , crc_check ;IdentifierDeclStatement2087:1:43982:44009
7455 -----> 7968fc
7455 -----> 7955fc
7455 -----> 8093fc
7455 -----> 8124fc
7455 -----> 8153fc
7455 -----> 8197fc
7455 -----> 8208fc
7455 -----> 8219fc
7455 -----> 8239fc
7455 -----> 8248fc
7455 -----> 8171fc
7458 -----> 8040caplen
7458 -----> 8021caplen
7458 -----> 8265caplen
7458 -----> 8089caplen
7458 -----> 8307caplen
7458 -----> 8315caplen
7458 -----> 8288caplen
7458 -----> 8330caplen
7458 -----> 8273caplen
7458 -----> 8344caplen
7458 -----> 8352caplen
7458 -----> 8367caplen
7458 -----> 7998caplen
7458 -----> 8070caplen
7458 -----> 8389caplen
7458 -----> 8380caplen
7461 -----> 8025p
7461 -----> 8058p
7461 -----> 8002p
7461 -----> 8006p
7461 -----> 8074p
7461 -----> 8273p
7461 -----> 8288p
7461 -----> 8315p
7461 -----> 8330p
7461 -----> 8367p
7461 -----> 8352p
7464 -----> 7481ndo
7464 -----> 7603ndo
7464 -----> 8315ndo
7464 -----> 8082ndo
7464 -----> 7797ndo
7464 -----> 7994ndo
7464 -----> 7572ndo
7464 -----> 8191ndo
7464 -----> 8033ndo
7464 -----> 7763ndo
7464 -----> 7847ndo
7464 -----> 7517ndo
7464 -----> 8054ndo
7464 -----> 7648ndo
7464 -----> 8273ndo
7464 -----> 8352ndo
7550 -----> 7534micoffset
7550 -----> 7553micoffset
7550 -----> 7550micoffset
7557 -----> 7534micoffset
7557 -----> 7550micoffset
7557 -----> 7553micoffset
7587 -----> 7472caplen
7591 -----> 7472p
7603 -----> 7591len
7603 -----> 7599len
7603 -----> 7587len
7632 -----> 7587caplen
7632 -----> 7472caplen
7632 -----> 7603caplen
7636 -----> 7472p
7636 -----> 7591p
7636 -----> 7603p
7648 -----> 7632len
7648 -----> 7644len
7648 -----> 7636len
7669 -----> 7534mic_start
7675 -----> 7632caplen
7675 -----> 7603caplen
7675 -----> 7648caplen
7675 -----> 7587caplen
7675 -----> 7472caplen
7675 -----> 7669caplen
7701 -----> 7572miclen
7701 -----> 7675miclen
7701 -----> 7553miclen
7701 -----> 7690miclen
7701 -----> 7694miclen
7708 -----> 7675miclen
7708 -----> 7690miclen
7708 -----> 7572miclen
7708 -----> 7553miclen
7708 -----> 7694miclen
7715 -----> 7553miclen
7715 -----> 7675miclen
7715 -----> 7572miclen
7715 -----> 7694miclen
7715 -----> 7690miclen
7722 -----> 7553miclen
7722 -----> 7572miclen
7722 -----> 7690miclen
7722 -----> 7675miclen
7722 -----> 7694miclen
7733 -----> 7624security_level
7733 -----> 7728security_level
7738 -----> 7690caplen
7738 -----> 7603caplen
7738 -----> 7587caplen
7738 -----> 7472caplen
7738 -----> 7648caplen
7738 -----> 7632caplen
7738 -----> 7675caplen
7742 -----> 7669p
7742 -----> 7591p
7742 -----> 7603p
7742 -----> 7648p
7742 -----> 7472p
7742 -----> 7636p
7763 -----> 7738len
7763 -----> 7742len
7763 -----> 7746len
7763 -----> 7759len
7782 -----> 7648caplen
7782 -----> 7763caplen
7782 -----> 7690caplen
7782 -----> 7632caplen
7782 -----> 7738caplen
7782 -----> 7472caplen
7782 -----> 7587caplen
7782 -----> 7675caplen
7782 -----> 7603caplen
7786 -----> 7591p
7786 -----> 7742p
7786 -----> 7746p
7786 -----> 7472p
7786 -----> 7763p
7786 -----> 7636p
7786 -----> 7669p
7786 -----> 7603p
7786 -----> 7648p
7839 -----> 7819caplen
7839 -----> 7782caplen
7843 -----> 7797p
7843 -----> 7786p
7886 -----> 7839caplen
7886 -----> 7869caplen
7890 -----> 7847p
7890 -----> 7843p
7955 -----> 7782src_addr_len
7955 -----> 7786src_addr_len
7955 -----> 7797src_addr_len
7955 -----> 7819src_addr_len
7955 -----> 7951src_addr_len
7968 -----> 7839dst_addr_len
7968 -----> 7843dst_addr_len
7968 -----> 7847dst_addr_len
7968 -----> 7869dst_addr_len
7968 -----> 7936dst_addr_len
7998 -----> 7919caplen
7998 -----> 7886caplen
7998 -----> 7869caplen
7998 -----> 7839caplen
8002 -----> 7847p
8002 -----> 7843p
8002 -----> 7894p
8002 -----> 7890p
8006 -----> 7985seq
8021 -----> 7886caplen
8021 -----> 7839caplen
8021 -----> 7919caplen
8021 -----> 7869caplen
8025 -----> 7847p
8025 -----> 7843p
8025 -----> 7890p
8025 -----> 7894p
8058 -----> 8045seq
8070 -----> 7886caplen
8070 -----> 7919caplen
8070 -----> 7839caplen
8070 -----> 7869caplen
8074 -----> 7890p
8074 -----> 7847p
8074 -----> 7843p
8074 -----> 7894p
8197 -----> 7780security_enabled
8197 -----> 8189security_enabled
8208 -----> 7665ie_present
8208 -----> 8113ie_present
8219 -----> 7923pan_id_present
8219 -----> 8142pan_id_present
8239 -----> 8230frame_version
8265 -----> 8021caplen
8265 -----> 8040caplen
8265 -----> 8089caplen
8265 -----> 7998caplen
8265 -----> 8070caplen
8273 -----> 7492crc_check
8273 -----> 7513crc_check
8273 -----> 8269crc_check
8288 -----> 7492fcs
8288 -----> 7513fcs
8288 -----> 7504fcs
8288 -----> 8269fcs
8307 -----> 8021caplen
8307 -----> 8040caplen
8307 -----> 7998caplen
8307 -----> 8089caplen
8307 -----> 8070caplen
8315 -----> 7492crc_check
8315 -----> 7513crc_check
8315 -----> 8311crc_check
8330 -----> 7513fcs
8330 -----> 8311fcs
8330 -----> 7492fcs
8330 -----> 7504fcs
8344 -----> 8021caplen
8344 -----> 8040caplen
8344 -----> 8089caplen
8344 -----> 7998caplen
8344 -----> 8070caplen
8352 -----> 7492crc_check
8352 -----> 7513crc_check
8352 -----> 8348crc_check
8367 -----> 7504fcs
8367 -----> 7513fcs
8367 -----> 7492fcs
8367 -----> 8348fcs
8385 -----> 7513fcs
8385 -----> 7504fcs
8385 -----> 7492fcs
8393 -----> 7492crc_check
8393 -----> 7513crc_check
8397 -----> 7780security_enabled
8401 -----> 7628payload_ie_present
8405 -----> 7665ie_present
8409 -----> 7923pan_id_present
8413 -----> 7534mic_start
8441 -----> 7553miclen
8441 -----> 7572miclen
8441 -----> 7690miclen
8441 -----> 7675miclen
8441 -----> 7694miclen
8448 -----> 7624security_level
8448 -----> 7728security_level
7481 -----> 7472None
7513 -----> 7504None
7513 -----> 7492None
7517 -----> 7513None
7553 -----> 7534None
7553 -----> 7550None
7572 -----> 7553None
7572 -----> 7557None
7572 -----> 7525None
7572 -----> 7565None
7599 -----> 7587None
7599 -----> 7572None
7599 -----> 7469None
7599 -----> 7597None
7599 -----> 7591None
7599 -----> 7517None
7599 -----> 7481None
7624 -----> 7603None
7624 -----> 7572None
7624 -----> 7469None
7624 -----> 7599None
7624 -----> 7517None
7624 -----> 7481None
7624 -----> 7617None
7628 -----> 7572None
7628 -----> 7469None
7628 -----> 7624None
7628 -----> 7517None
7628 -----> 7481None
7644 -----> 7628None
7644 -----> 7632None
7644 -----> 7636None
7644 -----> 7642None
7665 -----> 7628None
7665 -----> 7648None
7665 -----> 7644None
7690 -----> 7675None
7690 -----> 7665None
7690 -----> 7669None
7690 -----> 7681None
7690 -----> 7683None
7694 -----> 7690None
7694 -----> 7665None
7728 -----> 7727None
7728 -----> 7707None
7728 -----> 7700None
7728 -----> 7721None
7728 -----> 7715None
7728 -----> 7713None
7728 -----> 7705None
7728 -----> 7722None
7728 -----> 7706None
7728 -----> 7719None
7728 -----> 7726None
7728 -----> 7708None
7728 -----> 7714None
7728 -----> 7712None
7728 -----> 7720None
7728 -----> 7701None
7759 -----> 7728None
7759 -----> 7694None
7759 -----> 7738None
7759 -----> 7757None
7759 -----> 7742None
7759 -----> 7746None
7780 -----> 7728None
7780 -----> 7759None
7780 -----> 7694None
7780 -----> 7733None
7780 -----> 7763None
7819 -----> 7797None
7819 -----> 7782None
7819 -----> 7810None
7819 -----> 7786None
7819 -----> 7812None
7819 -----> 7780None
7819 -----> 7790None
7869 -----> 7825None
7869 -----> 7819None
7869 -----> 7860None
7869 -----> 7832None
7869 -----> 7862None
7869 -----> 7847None
7869 -----> 7839None
7869 -----> 7843None
7919 -----> 7886None
7919 -----> 7869None
7919 -----> 7910None
7919 -----> 7912None
7919 -----> 7890None
7919 -----> 7894None
7923 -----> 7919None
7923 -----> 7869None
7923 -----> 7878None
7936 -----> 7923None
7936 -----> 7927None
7936 -----> 7929None
7951 -----> 7944None
7951 -----> 7942None
7951 -----> 7936None
7994 -----> 7985None
8040 -----> 7951None
8040 -----> 8031None
8040 -----> 7955None
8040 -----> 8033None
8040 -----> 7968None
8040 -----> 8021None
8040 -----> 8025None
8054 -----> 8045None
8089 -----> 8074None
8089 -----> 7951None
8089 -----> 8082None
8089 -----> 8080None
8089 -----> 8070None
8089 -----> 7955None
8089 -----> 7968None
8093 -----> 8040None
8093 -----> 8089None
8093 -----> 8058None
8093 -----> 8054None
8113 -----> 8106None
8124 -----> 8117None
8142 -----> 8135None
8153 -----> 8146None
8171 -----> 8164None
8189 -----> 8182None
8191 -----> 8171None
8191 -----> 8189None
8191 -----> 8124None
8191 -----> 8153None
8191 -----> 8113None
8191 -----> 8142None
8248 -----> 8006None
8248 -----> 7951None
8248 -----> 8197None
8248 -----> 8002None
8248 -----> 8093None
8248 -----> 8219None
8248 -----> 7955None
8248 -----> 8230None
8248 -----> 7994None
8248 -----> 8239None
8248 -----> 8191None
8248 -----> 7968None
8248 -----> 7998None
8248 -----> 8208None
8269 -----> 8265None
8311 -----> 8307None
8348 -----> 8311None
8348 -----> 8344None
8348 -----> 8330None
8348 -----> 8315None
8380 -----> 8348None
8380 -----> 8269None
8380 -----> 8367None
8380 -----> 8288None
8380 -----> 8273None
8380 -----> 8352None
8389 -----> 8385None
8389 -----> 8380None
7452 -----> 8431None
7452 -----> 8448None
7452 -----> 8389None
7452 -----> 8405None
7452 -----> 8427None
7452 -----> 8413None
7452 -----> 8409None
7452 -----> 8459None
7452 -----> 8441None
7452 -----> 8401None
7452 -----> 8452None
7452 -----> 8248None
7452 -----> 8420None
7452 -----> 8393None
7452 -----> 7458None
7452 -----> 8397None
7452 -----> 7455None
7452 -----> 7464None
7452 -----> 7461None
7458 -----> 7919caplen
7458 -----> 7886caplen
7458 -----> 7869caplen
7458 -----> 7839caplen
7458 -----> 7819caplen
7458 -----> 7782caplen
7458 -----> 7738caplen
7458 -----> 7690caplen
7458 -----> 7675caplen
7458 -----> 7632caplen
7458 -----> 7587caplen
7458 -----> 7472caplen
7461 -----> 7894p
7461 -----> 7890p
7461 -----> 7847p
7461 -----> 7843p
7461 -----> 7797p
7461 -----> 7786p
7461 -----> 7746p
7461 -----> 7742p
7461 -----> 7636p
7461 -----> 7591p
7461 -----> 7472p
8448 -----> 7733security_level
8431 -----> 8405ie_present
8431 -----> 8208ie_present
8431 -----> 8113ie_present
8431 -----> 7665ie_present
8431 -----> 8397security_enabled
8431 -----> 8197security_enabled
8431 -----> 8189security_enabled
8431 -----> 7780security_enabled
8431 -----> 8401payload_ie_present
8431 -----> 7628payload_ie_present
8427 -----> 8058seq
8427 -----> 8045seq
8427 -----> 8006seq
8427 -----> 7985seq
8459 -----> 8409pan_id_present
8459 -----> 8219pan_id_present
8459 -----> 8142pan_id_present
8459 -----> 7923pan_id_present
8459 -----> 7763len
8459 -----> 7759len
8459 -----> 7746len
8459 -----> 7648len
8459 -----> 7644len
8459 -----> 7603len
8459 -----> 7599len
8459 -----> 8239frame_version
8459 -----> 8230frame_version
8452 -----> 7968dst_addr_len
8452 -----> 7936dst_addr_len
8452 -----> 7869dst_addr_len
8452 -----> 7847dst_addr_len
8452 -----> 7955src_addr_len
8452 -----> 7951src_addr_len
8452 -----> 7819src_addr_len
8452 -----> 7797src_addr_len
8420 -----> 8393crc_check
8420 -----> 8352crc_check
8420 -----> 8348crc_check
8420 -----> 8315crc_check
8420 -----> 8311crc_check
8420 -----> 8273crc_check
8420 -----> 8269crc_check
8420 -----> 7513crc_check
8420 -----> 7492crc_check
8420 -----> 8385fcs
8420 -----> 8367fcs
8420 -----> 8348fcs
8420 -----> 8330fcs
8420 -----> 8311fcs
8420 -----> 8288fcs
8420 -----> 8269fcs
8420 -----> 7513fcs
8420 -----> 7504fcs
8420 -----> 7492fcs
8409 -----> 8142pan_id_present
8405 -----> 8113ie_present
8401 -----> 7648payload_ie_present
8397 -----> 8189security_enabled
8393 -----> 8348crc_check
8393 -----> 8311crc_check
8393 -----> 8269crc_check
8367 -----> 8311fcs
8352 -----> 8311crc_check
7763 -----> 7644len
7763 -----> 7636len
7763 -----> 7632len
7763 -----> 7599len
7763 -----> 7591len
7763 -----> 7587len
----------------------------pdg--------------------------------------------------
8510 : u_int caplenParameter2331:22:48432:48443
8528 : return ieee802_15_4_frag_frame ( ndo , p , caplen , fc ) ;ReturnStatement2361:2:48935:48985
8542 : return ieee802_15_4_mp_frame ( ndo , p , caplen , fc ) ;ReturnStatement2359:2:48870:48918
8559 : return ieee802_15_4_std_frames ( ndo , p , caplen , fc ) ;ReturnStatement2355:2:48778:48828
8609 : return caplen ;ReturnStatement2340:2:48564:48577
8618 : caplen < 2Condition2338:5:48525:48534
8513 : const u_char * pParameter2331:5:48415:48429
8598 : fc = GET_LE_U_2 ( p )ExpressionStatement2343:1:48584:48602
8516 : netdissect_options * ndoParameter2330:19:48385:48407
8622 : ndo -> ndo_protocol = "802.15.4"ExpressionStatement2336:1:48487:48517
8611 : nd_print_trunc ( ndo )ExpressionStatement2339:2:48541:48560
8589 : frame_type = FC_FRAME_TYPE ( fc )ExpressionStatement2347:1:48609:48639
8576 : frame_typeCondition2350:9:48710:48719
8578 : ND_PRINT ( "IEEE 802.15.4 %s packet " , ftypes [ frame_type ] )ExpressionStatement2348:1:48642:48698
8558 : case 0x04 :Label2356:1:48831:48840
8521 : return 0 ;ReturnStatement2365:1:49016:49024
8574 : case 0x01 :Label2352:1:48738:48747
8572 : case 0x03 :Label2354:1:48764:48773
8575 : case 0x00 :Label2351:1:48725:48734
8555 : case 0x05 :Label2358:1:48856:48865
8541 : case 0x06 :Label2360:1:48921:48930
8573 : case 0x02 :Label2353:1:48751:48760
8556 : return 0 ;ReturnStatement2357:2:48845:48853
8525 : return 0 ;ReturnStatement2363:2:49002:49010
8527 : case 0x07 :Label2362:1:48988:48997
8507 : ieee802_15_4_printFunction2329:0:48360:49026
8628 : unsigned short fc ;IdentifierDeclStatement2334:1:48466:48483
8632 : int frame_type ;IdentifierDeclStatement2333:1:48449:48463
8510 -----> 8528caplen
8510 -----> 8542caplen
8510 -----> 8559caplen
8510 -----> 8609caplen
8510 -----> 8618caplen
8513 -----> 8528p
8513 -----> 8542p
8513 -----> 8559p
8513 -----> 8598p
8516 -----> 8528ndo
8516 -----> 8542ndo
8516 -----> 8559ndo
8516 -----> 8622ndo
8516 -----> 8611ndo
8589 -----> 8576frame_type
8589 -----> 8578frame_type
8598 -----> 8528fc
8598 -----> 8542fc
8598 -----> 8559fc
8598 -----> 8589fc
8576 -----> 8558None
8576 -----> 8521None
8576 -----> 8574None
8576 -----> 8572None
8576 -----> 8542None
8576 -----> 8575None
8576 -----> 8555None
8576 -----> 8541None
8576 -----> 8573None
8576 -----> 8559None
8576 -----> 8556None
8576 -----> 8528None
8576 -----> 8525None
8576 -----> 8527None
8618 -----> 8578None
8618 -----> 8611None
8618 -----> 8609None
8618 -----> 8576None
8618 -----> 8589None
8618 -----> 8598None
8507 -----> 8513None
8507 -----> 8516None
8507 -----> 8628None
8507 -----> 8618None
8507 -----> 8632None
8507 -----> 8622None
8507 -----> 8510None
8628 -----> 8598fc
8628 -----> 8559fc
8628 -----> 8542fc
8628 -----> 8528fc
8632 -----> 8589frame_type
8632 -----> 8578frame_type
8632 -----> 8576frame_type
8622 -----> 8611ndo
8622 -----> 8559ndo
8622 -----> 8542ndo
8622 -----> 8528ndo
----------------------------pdg--------------------------------------------------
8656 : const u_char * pParameter2372:51:49134:49148
8667 : ndo -> ndo_ll_hdr_len += ieee802_15_4_print ( ndo , p , caplen )ExpressionStatement2376:1:49214:49271
8659 : const struct pcap_pkthdr * hParameter2372:22:49105:49131
8688 : u_int caplen = h -> caplen ;IdentifierDeclStatement2374:1:49154:49178
8662 : netdissect_options * ndoParameter2371:22:49058:49080
8682 : ndo -> ndo_protocol = "802.15.4"ExpressionStatement2375:1:49181:49211
8653 : ieee802_15_4_if_printFunction2370:0:49031:49273
8656 -----> 8667p
8659 -----> 8688h
8662 -----> 8667ndo
8662 -----> 8682ndo
8682 -----> 8667 ndo
8688 -----> 8667caplen
8653 -----> 8682None
8653 -----> 8659None
8653 -----> 8656None
8653 -----> 8688None
8653 -----> 8667None
8653 -----> 8662None
8682 -----> 8667ndo
----------------------------pdg--------------------------------------------------
8712 : const u_char * pParameter2383:55:49389:49403
8723 : ndo -> ndo_ll_hdr_len += ieee802_15_4_print ( ndo , p + length , h -> caplen - length ) + lengthExpressionStatement2408:1:49816:49899
8788 : length = GET_LE_U_2 ( p + 2 )ExpressionStatement2396:1:49613:49639
8799 : version = GET_U_1 ( p )ExpressionStatement2395:1:49590:49610
8715 : const struct pcap_pkthdr * hParameter2383:26:49360:49386
8749 : ndo -> ndo_ll_hdr_len += h -> caplenExpressionStatement2404:2:49767:49799
8764 : h -> caplen < lengthCondition2402:5:49720:49737
8811 : ndo -> ndo_ll_hdr_len += h -> caplenExpressionStatement2391:2:49541:49573
8826 : h -> caplen < 4Condition2389:5:49499:49511
8718 : netdissect_options * ndoParameter2382:26:49309:49331
8757 : nd_print_trunc ( ndo )ExpressionStatement2403:2:49744:49763
8773 : nd_print_invalid ( ndo )ExpressionStatement2398:2:49678:49699
8819 : nd_print_trunc ( ndo )ExpressionStatement2390:2:49518:49537
8832 : ndo -> ndo_protocol = "802.15.4_tap"ExpressionStatement2388:1:49458:49492
8780 : version != 0 || length < 4Condition2397:5:49646:49671
8748 : return ;ReturnStatement2405:2:49803:49809
8772 : return ;ReturnStatement2399:2:49703:49709
8810 : return ;ReturnStatement2392:2:49577:49583
8709 : ieee802_15_4_tap_if_printFunction2381:0:49278:49901
8838 : unsigned short length ;IdentifierDeclStatement2386:1:49433:49454
8842 : unsigned char version ;IdentifierDeclStatement2385:1:49409:49430
8712 -----> 8723p
8712 -----> 8788p
8712 -----> 8799p
8715 -----> 8723h
8715 -----> 8749h
8715 -----> 8764h
8715 -----> 8811h
8715 -----> 8826h
8718 -----> 8723ndo
8718 -----> 8749ndo
8718 -----> 8757ndo
8718 -----> 8773ndo
8718 -----> 8811ndo
8718 -----> 8819ndo
8718 -----> 8832ndo
8788 -----> 8723length
8788 -----> 8764length
8788 -----> 8780length
8799 -----> 8780version
8832 -----> 8723 ndo
8832 -----> 8749 ndo
8832 -----> 8811 ndo
8764 -----> 8757None
8764 -----> 8749None
8764 -----> 8748None
8764 -----> 8723None
8780 -----> 8772None
8780 -----> 8773None
8780 -----> 8764None
8826 -----> 8788None
8826 -----> 8819None
8826 -----> 8810None
8826 -----> 8780None
8826 -----> 8799None
8826 -----> 8811None
8709 -----> 8718None
8709 -----> 8832None
8709 -----> 8712None
8709 -----> 8826None
8709 -----> 8838None
8709 -----> 8842None
8709 -----> 8715None
8838 -----> 8788length
8838 -----> 8780length
8838 -----> 8764length
8842 -----> 8799version
8842 -----> 8780version
8832 -----> 8819ndo
8832 -----> 8811ndo
