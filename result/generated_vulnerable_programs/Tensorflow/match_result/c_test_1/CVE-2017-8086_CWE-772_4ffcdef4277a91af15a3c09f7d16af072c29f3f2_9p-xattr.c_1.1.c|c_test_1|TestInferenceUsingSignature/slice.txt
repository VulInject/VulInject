1 @@ testCode/c_test_1.c @@ TestInferenceUsingSignature @@ 67 @@ ['options'] @@ {options, add_runner, input_tensor, output_tensor}
static void TestInferenceUsingSignature(void) location: 54 cross_layer: 1 file: testCode/c_test_1.c
TfLiteInterpreterOptions * options = TfLiteInterpreterOptionsCreate ( ) ; location: 59 cross_layer: 1 file: testCode/c_test_1.c
TfLiteInterpreterOptionsDelete ( options ); location: 67 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteInterpreterGetSignatureCount ( interpreter ) , 2 ); location: 70 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_STREQ ( TfLiteInterpreterGetSignatureKey ( interpreter , 0 ) , "add" ); location: 71 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_STREQ ( TfLiteInterpreterGetSignatureKey ( interpreter , 1 ) , "sub" ); location: 72 cross_layer: 1 file: testCode/c_test_1.c
TfLiteSignatureRunner * add_runner = TfLiteInterpreterGetSignatureRunner ( interpreter , "add" ) ; location: 75 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_NE ( add_runner , NULL ); location: 77 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteSignatureRunnerGetInputCount ( add_runner ) , 1 ); location: 78 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_STREQ ( TfLiteSignatureRunnerGetInputName ( add_runner , 0 ) , "x" ); location: 79 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteSignatureRunnerGetOutputCount ( add_runner ) , 1 ); location: 80 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_STREQ ( TfLiteSignatureRunnerGetOutputName ( add_runner , 0 ) , "output_0" ); location: 81 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteSignatureRunnerResizeInputTensor ( add_runner , "x" , input_dims , 1 ) , kTfLiteOk ); location: 85 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteSignatureRunnerAllocateTensors ( add_runner ) , kTfLiteOk ); location: 90 cross_layer: 1 file: testCode/c_test_1.c
TfLiteTensor * input_tensor = TfLiteSignatureRunnerGetInputTensor ( add_runner , "x" ) ; location: 93 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_NE ( input_tensor , NULL ); location: 95 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorType ( input_tensor ) , kTfLiteFloat32 ); location: 96 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorNumDims ( input_tensor ) , 1 ); location: 97 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorDim ( input_tensor , 0 ) , 2 ); location: 98 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorByteSize ( input_tensor ) , sizeof ( float ) * 2 ); location: 99 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_NE ( TfLiteTensorData ( input_tensor ) , NULL ); location: 100 cross_layer: 1 file: testCode/c_test_1.c
TfLiteQuantizationParams input_params = TfLiteTensorQuantizationParams ( input_tensor ) ; location: 102 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( input_params . scale , 0.f ); location: 104 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( input_params . zero_point , 0 ); location: 105 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorCopyFromBuffer ( input_tensor , input , 2 * sizeof ( float ) ) , kTfLiteOk ); location: 108 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteSignatureRunnerInvoke ( add_runner ) , kTfLiteOk ); location: 110 cross_layer: 1 file: testCode/c_test_1.c
const TfLiteTensor * output_tensor = TfLiteSignatureRunnerGetOutputTensor ( add_runner , "output_0" ) ; location: 112 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_NE ( output_tensor , NULL ); location: 114 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorType ( output_tensor ) , kTfLiteFloat32 ); location: 115 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorNumDims ( output_tensor ) , 1 ); location: 116 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorDim ( output_tensor , 0 ) , 2 ); location: 117 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorByteSize ( output_tensor ) , sizeof ( float ) * 2 ); location: 118 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_NE ( TfLiteTensorData ( output_tensor ) , NULL ); location: 119 cross_layer: 1 file: testCode/c_test_1.c
TfLiteQuantizationParams output_params = TfLiteTensorQuantizationParams ( output_tensor ) ; location: 121 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( output_params . scale , 0.f ); location: 123 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( output_params . zero_point , 0 ); location: 124 cross_layer: 1 file: testCode/c_test_1.c
ASSERT_EQ ( TfLiteTensorCopyToBuffer ( output_tensor , output , 2 * sizeof ( float ) ) , kTfLiteOk ); location: 127 cross_layer: 1 file: testCode/c_test_1.c
TfLiteSignatureRunnerDelete ( add_runner ); location: 134 cross_layer: 1 file: testCode/c_test_1.c
TfLiteInterpreterDelete ( interpreter ); location: 135 cross_layer: 1 file: testCode/c_test_1.c
TestInferenceUsingSignature ( ); location: 409 cross_layer: 2 file: testCode/c_test_1.c
RunTests ( ); location: 426 cross_layer: 3 file: testCode/c_test_1.c
------------------------------
